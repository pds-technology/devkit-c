<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2017sp2

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tbf="http://www.altova.com/MapForce/UDF/tbf" xmlns:ns0="http://www.prodml.org/schemas/1series" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" exclude-result-prefixes="tbf ns0 xs fn">
	<xsl:template name="tbf:tbf1_CustomData">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/node()">
			<xsl:choose>
				<xsl:when test="fn:boolean(self::*)">
					<xsl:if test="fn:boolean(self::*)">
						<xsl:element name="{fn:string(fn:node-name(.))}" namespace="{fn:namespace-uri-from-QName(fn:node-name(.))}">
							<xsl:sequence select="(./@node(), ./node())"/>
						</xsl:element>
					</xsl:if>
				</xsl:when>
				<xsl:otherwise>
					<xsl:if test="fn:not(fn:boolean(self::text()))">
						<xsl:sequence select="."/>
					</xsl:if>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:for-each>
	</xsl:template>
	<xsl:template name="tbf:tbf2_TimeMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf3_MassPerMassMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf4_MassMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf5_MassPerVolumeMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf6_ThermodynamicTemperatureMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf7_VolumeMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf8_VolumePerVolumeMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf9_LengthMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf10_PlaneAngleMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf11_AngularVelocityMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:output method="xml" encoding="UTF-8" byte-order-mark="no" indent="yes"/>
	<xsl:template match="/">
		<xsl:variable name="var2_productionOperations" as="node()?" select="ns0:productionOperations"/>
		<ProductionOperation xmlns="http://www.energistics.org/energyml/data/prodmlv2" xmlns:eml="http://www.energistics.org/energyml/data/commonv2" xmlns:gco="http://www.isotc211.org/2005/gco" xmlns:gmd="http://www.isotc211.org/2005/gmd" xmlns:gsr="http://www.isotc211.org/2005/gsr" xmlns:gts="http://www.isotc211.org/2005/gts" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xlink="http://www.w3.org/1999/xlink">
			<xsl:attribute name="xsi:schemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance" select="'http://www.energistics.org/energyml/data/prodmlv2 file:///C:/Energistics2/energyml/data/prodml/v2.0/xsd_schemas/ProductionOperation.xsd'"/>
			<xsl:for-each select="$var2_productionOperations/ns0:productionOperation">
				<xsl:attribute name="schemaVersion" namespace="" select="'2.0'"/>
				<xsl:attribute name="uuid" namespace="" select="'00000000-0000-0000-0000-000000000000'"/>
			</xsl:for-each>
			<xsl:for-each select="$var2_productionOperations/ns0:productionOperation">
				<eml:Citation>
					<eml:Title>
						<xsl:sequence select="fn:string(ns0:name)"/>
					</eml:Title>
					<eml:Originator>131_input</eml:Originator>
					<eml:Creation>
						<xsl:sequence select="xs:string(fn:current-dateTime())"/>
					</eml:Creation>
					<eml:Format>Mapforce</eml:Format>
				</eml:Citation>
				<xsl:for-each select="ns0:customData">
					<eml:CustomData>
						<xsl:call-template name="tbf:tbf1_CustomData">
							<xsl:with-param name="input" select="." as="node()"/>
						</xsl:call-template>
					</eml:CustomData>
				</xsl:for-each>
				<xsl:for-each select="ns0:installation">
					<Installation>
						<xsl:for-each select="@kind">
							<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="@siteKind">
							<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="@namingSystem">
							<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="@uidRef">
							<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:sequence select="fn:string(.)"/>
					</Installation>
				</xsl:for-each>
				<xsl:for-each select="ns0:contextFacility">
					<ContextFacility>
						<xsl:for-each select="@kind">
							<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="@siteKind">
							<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="@namingSystem">
							<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="@uidRef">
							<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:sequence select="fn:string(.)"/>
					</ContextFacility>
				</xsl:for-each>
				<xsl:for-each select="ns0:kind">
					<Kind>
						<xsl:sequence select="fn:string(.)"/>
					</Kind>
				</xsl:for-each>
				<xsl:for-each select="ns0:periodKind">
					<PeriodKind>
						<xsl:sequence select="fn:string(.)"/>
					</PeriodKind>
				</xsl:for-each>
				<xsl:for-each select="ns0:issueDate">
					<IssueDate>
						<xsl:sequence select="xs:string(xs:date(fn:string(.)))"/>
					</IssueDate>
				</xsl:for-each>
				<xsl:for-each select="ns0:title">
					<Title>
						<xsl:sequence select="fn:string(.)"/>
					</Title>
				</xsl:for-each>
				<xsl:for-each select="ns0:approvalDate">
					<ApprovalDate>
						<xsl:sequence select="xs:string(xs:date(fn:string(.)))"/>
					</ApprovalDate>
				</xsl:for-each>
				<xsl:for-each select="ns0:installationReport">
					<InstallationReport>
						<xsl:for-each select="@uid">
							<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="ns0:installation">
							<Installation>
								<xsl:for-each select="@kind">
									<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@siteKind">
									<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@namingSystem">
									<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@uidRef">
									<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:sequence select="fn:string(.)"/>
							</Installation>
						</xsl:for-each>
						<xsl:for-each select="ns0:bedsAvailable">
							<BedsAvailable>
								<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
							</BedsAvailable>
						</xsl:for-each>
						<xsl:for-each select="ns0:work">
							<Work>
								<xsl:call-template name="tbf:tbf2_TimeMeasure">
									<xsl:with-param name="input" select="." as="node()"/>
								</xsl:call-template>
							</Work>
						</xsl:for-each>
						<xsl:for-each select="ns0:workMonthToDate">
							<WorkMonthToDate>
								<xsl:call-template name="tbf:tbf2_TimeMeasure">
									<xsl:with-param name="input" select="." as="node()"/>
								</xsl:call-template>
							</WorkMonthToDate>
						</xsl:for-each>
						<xsl:for-each select="ns0:workYearToDate">
							<WorkYearToDate>
								<xsl:call-template name="tbf:tbf2_TimeMeasure">
									<xsl:with-param name="input" select="." as="node()"/>
								</xsl:call-template>
							</WorkYearToDate>
						</xsl:for-each>
						<xsl:for-each select="ns0:crewCount">
							<CrewCount>
								<xsl:for-each select="@type">
									<xsl:attribute name="type" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
							</CrewCount>
						</xsl:for-each>
						<xsl:for-each select="ns0:productionActivity">
							<ProductionActivity>
								<xsl:for-each select="ns0:waterCleaningQuality">
									<WaterCleaningQuality>
										<xsl:for-each select="@uid">
											<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="ns0:samplePoint">
											<SamplePoint>
												<xsl:sequence select="fn:string(.)"/>
											</SamplePoint>
										</xsl:for-each>
										<xsl:for-each select="ns0:oilInWaterProduced">
											<OilInWaterProduced>
												<xsl:call-template name="tbf:tbf3_MassPerMassMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</OilInWaterProduced>
										</xsl:for-each>
										<xsl:for-each select="ns0:amountOfOil">
											<AmountOfOil>
												<xsl:call-template name="tbf:tbf4_MassMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</AmountOfOil>
										</xsl:for-each>
										<xsl:for-each select="ns0:ammonium">
											<Ammonium>
												<xsl:call-template name="tbf:tbf5_MassPerVolumeMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</Ammonium>
										</xsl:for-each>
										<xsl:for-each select="ns0:totalOrganicCarbon">
											<TotalOrganicCarbon>
												<xsl:call-template name="tbf:tbf3_MassPerMassMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</TotalOrganicCarbon>
										</xsl:for-each>
										<xsl:for-each select="ns0:phenol">
											<Phenol>
												<xsl:call-template name="tbf:tbf5_MassPerVolumeMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</Phenol>
										</xsl:for-each>
										<xsl:for-each select="ns0:glycol">
											<Glycol>
												<xsl:call-template name="tbf:tbf5_MassPerVolumeMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</Glycol>
										</xsl:for-each>
										<xsl:for-each select="ns0:phValue">
											<PhValue>
												<xsl:attribute name="uom" namespace="" select="'%'"/>
												<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
											</PhValue>
										</xsl:for-each>
										<xsl:for-each select="ns0:waterTemperature">
											<WaterTemperature>
												<xsl:call-template name="tbf:tbf6_ThermodynamicTemperatureMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</WaterTemperature>
										</xsl:for-each>
										<xsl:for-each select="ns0:residualChloride">
											<ResidualChloride>
												<xsl:call-template name="tbf:tbf3_MassPerMassMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</ResidualChloride>
										</xsl:for-each>
										<xsl:for-each select="ns0:oxygen">
											<Oxygen>
												<xsl:call-template name="tbf:tbf3_MassPerMassMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</Oxygen>
										</xsl:for-each>
										<xsl:for-each select="ns0:turbidity">
											<Turbidity>
												<xsl:attribute name="uom" namespace="" select="'%'"/>
												<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
											</Turbidity>
										</xsl:for-each>
										<xsl:for-each select="ns0:coulterCounter">
											<CoulterCounter>
												<xsl:call-template name="tbf:tbf3_MassPerMassMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</CoulterCounter>
										</xsl:for-each>
										<xsl:for-each select="ns0:comment">
											<Comment>
												<xsl:for-each select="@uid">
													<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:for-each select="ns0:who">
													<Who>
														<xsl:sequence select="fn:string(.)"/>
													</Who>
												</xsl:for-each>
												<xsl:for-each select="ns0:role">
													<Role>
														<xsl:sequence select="fn:string(.)"/>
													</Role>
												</xsl:for-each>
												<Remark>
													<xsl:sequence select="fn:string(ns0:remark)"/>
												</Remark>
											</Comment>
										</xsl:for-each>
									</WaterCleaningQuality>
								</xsl:for-each>
								<xsl:for-each select="ns0:marineOperation">
									<MarineOperation>
										<xsl:for-each select="@uid">
											<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="ns0:dTimStart">
											<DTimStart>
												<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
											</DTimStart>
										</xsl:for-each>
										<xsl:for-each select="ns0:dTimEnd">
											<DTimEnd>
												<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
											</DTimEnd>
										</xsl:for-each>
										<xsl:for-each select="ns0:generalComment">
											<GeneralComment>
												<xsl:sequence select="fn:string(.)"/>
											</GeneralComment>
										</xsl:for-each>
										<xsl:for-each select="ns0:supplyShip">
											<SupplyShip>
												<xsl:sequence select="fn:string(.)"/>
											</SupplyShip>
										</xsl:for-each>
										<xsl:for-each select="ns0:standbyVessel">
											<StandbyVessel>
												<xsl:sequence select="fn:string(.)"/>
											</StandbyVessel>
										</xsl:for-each>
										<xsl:for-each select="ns0:supplyShipComment">
											<SupplyShipComment>
												<xsl:for-each select="@uid">
													<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:for-each select="ns0:who">
													<Who>
														<xsl:sequence select="fn:string(.)"/>
													</Who>
												</xsl:for-each>
												<xsl:for-each select="ns0:role">
													<Role>
														<xsl:sequence select="fn:string(.)"/>
													</Role>
												</xsl:for-each>
												<Remark>
													<xsl:sequence select="fn:string(ns0:remark)"/>
												</Remark>
											</SupplyShipComment>
										</xsl:for-each>
										<xsl:for-each select="ns0:standbyVesselComment">
											<StandbyVesselComment>
												<xsl:for-each select="@uid">
													<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:for-each select="ns0:who">
													<Who>
														<xsl:sequence select="fn:string(.)"/>
													</Who>
												</xsl:for-each>
												<xsl:for-each select="ns0:role">
													<Role>
														<xsl:sequence select="fn:string(.)"/>
													</Role>
												</xsl:for-each>
												<Remark>
													<xsl:sequence select="fn:string(ns0:remark)"/>
												</Remark>
											</StandbyVesselComment>
										</xsl:for-each>
										<xsl:for-each select="ns0:activity">
											<Activity>
												<xsl:for-each select="@uid">
													<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:for-each select="ns0:who">
													<Who>
														<xsl:sequence select="fn:string(.)"/>
													</Who>
												</xsl:for-each>
												<xsl:for-each select="ns0:role">
													<Role>
														<xsl:sequence select="fn:string(.)"/>
													</Role>
												</xsl:for-each>
												<Remark>
													<xsl:sequence select="fn:string(ns0:remark)"/>
												</Remark>
											</Activity>
										</xsl:for-each>
										<xsl:for-each select="ns0:basketMovement">
											<BasketMovement>
												<xsl:for-each select="@uid">
													<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:for-each select="ns0:who">
													<Who>
														<xsl:sequence select="fn:string(.)"/>
													</Who>
												</xsl:for-each>
												<xsl:for-each select="ns0:role">
													<Role>
														<xsl:sequence select="fn:string(.)"/>
													</Role>
												</xsl:for-each>
												<Remark>
													<xsl:sequence select="fn:string(ns0:remark)"/>
												</Remark>
											</BasketMovement>
										</xsl:for-each>
									</MarineOperation>
								</xsl:for-each>
								<xsl:for-each select="ns0:cargoShipOperation">
									<CargoShipOperation>
										<xsl:for-each select="@uid">
											<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="ns0:vesselName">
											<VesselName>
												<xsl:sequence select="fn:string(.)"/>
											</VesselName>
										</xsl:for-each>
										<xsl:for-each select="ns0:dTimStart">
											<DTimStart>
												<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
											</DTimStart>
										</xsl:for-each>
										<xsl:for-each select="ns0:dTimEnd">
											<DTimEnd>
												<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
											</DTimEnd>
										</xsl:for-each>
										<xsl:for-each select="ns0:captain">
											<Captain>
												<xsl:sequence select="fn:string(.)"/>
											</Captain>
										</xsl:for-each>
										<xsl:for-each select="ns0:cargoNumber">
											<CargoNumber>
												<xsl:sequence select="fn:string(.)"/>
											</CargoNumber>
										</xsl:for-each>
										<xsl:for-each select="ns0:cargoBatchNumber">
											<CargoBatchNumber>
												<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
											</CargoBatchNumber>
										</xsl:for-each>
										<xsl:for-each select="ns0:cargo">
											<Cargo>
												<xsl:sequence select="fn:string(.)"/>
											</Cargo>
										</xsl:for-each>
										<xsl:for-each select="ns0:oilGrossStdTempPres">
											<OilGrossStdTempPres>
												<xsl:call-template name="tbf:tbf7_VolumeMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</OilGrossStdTempPres>
										</xsl:for-each>
										<xsl:for-each select="ns0:oilGrossTotalStdTempPres">
											<OilGrossTotalStdTempPres>
												<xsl:call-template name="tbf:tbf7_VolumeMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</OilGrossTotalStdTempPres>
										</xsl:for-each>
										<xsl:for-each select="ns0:oilNetStdTempPres">
											<OilNetStdTempPres>
												<xsl:call-template name="tbf:tbf7_VolumeMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</OilNetStdTempPres>
										</xsl:for-each>
										<xsl:for-each select="ns0:oilNetMonthToDateStdTempPres">
											<OilNetMonthToDateStdTempPres>
												<xsl:call-template name="tbf:tbf7_VolumeMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</OilNetMonthToDateStdTempPres>
										</xsl:for-each>
										<xsl:for-each select="ns0:densityStdTempPres">
											<DensityStdTempPres>
												<xsl:call-template name="tbf:tbf5_MassPerVolumeMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</DensityStdTempPres>
										</xsl:for-each>
										<xsl:for-each select="ns0:density">
											<Density>
												<xsl:call-template name="tbf:tbf5_MassPerVolumeMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</Density>
										</xsl:for-each>
										<xsl:for-each select="ns0:rvp">
											<Rvp>
												<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
												<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
											</Rvp>
										</xsl:for-each>
										<xsl:for-each select="ns0:bsw">
											<Bsw>
												<xsl:call-template name="tbf:tbf8_VolumePerVolumeMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</Bsw>
										</xsl:for-each>
										<xsl:for-each select="ns0:salt">
											<Salt>
												<xsl:call-template name="tbf:tbf5_MassPerVolumeMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</Salt>
										</xsl:for-each>
										<xsl:for-each select="ns0:comment">
											<Comment>
												<xsl:for-each select="@uid">
													<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:for-each select="ns0:who">
													<Who>
														<xsl:sequence select="fn:string(.)"/>
													</Who>
												</xsl:for-each>
												<xsl:for-each select="ns0:role">
													<Role>
														<xsl:sequence select="fn:string(.)"/>
													</Role>
												</xsl:for-each>
												<Remark>
													<xsl:sequence select="fn:string(ns0:remark)"/>
												</Remark>
											</Comment>
										</xsl:for-each>
									</CargoShipOperation>
								</xsl:for-each>
								<xsl:for-each select="ns0:shutdown">
									<Shutdown>
										<xsl:for-each select="@uid">
											<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="ns0:installation">
											<Installation>
												<xsl:for-each select="@kind">
													<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:for-each select="@siteKind">
													<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:for-each select="@namingSystem">
													<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:for-each select="@uidRef">
													<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:sequence select="fn:string(.)"/>
											</Installation>
										</xsl:for-each>
										<xsl:for-each select="ns0:description">
											<Description>
												<xsl:sequence select="fn:string(.)"/>
											</Description>
										</xsl:for-each>
										<xsl:for-each select="ns0:dTimStart">
											<DTimStart>
												<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
											</DTimStart>
										</xsl:for-each>
										<xsl:for-each select="ns0:dTimEnd">
											<DTimEnd>
												<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
											</DTimEnd>
										</xsl:for-each>
										<xsl:for-each select="ns0:volumetricDownTime">
											<VolumetricDownTime>
												<xsl:call-template name="tbf:tbf2_TimeMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</VolumetricDownTime>
										</xsl:for-each>
										<xsl:for-each select="ns0:lossOilStdTempPres">
											<LossOilStdTempPres>
												<xsl:call-template name="tbf:tbf7_VolumeMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</LossOilStdTempPres>
										</xsl:for-each>
										<xsl:for-each select="ns0:lossGasStdTempPres">
											<LossGasStdTempPres>
												<xsl:call-template name="tbf:tbf7_VolumeMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</LossGasStdTempPres>
										</xsl:for-each>
										<xsl:for-each select="ns0:activity">
											<Activity>
												<xsl:for-each select="@uid">
													<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:for-each select="ns0:who">
													<Who>
														<xsl:sequence select="fn:string(.)"/>
													</Who>
												</xsl:for-each>
												<xsl:for-each select="ns0:role">
													<Role>
														<xsl:sequence select="fn:string(.)"/>
													</Role>
												</xsl:for-each>
												<Remark>
													<xsl:sequence select="fn:string(ns0:remark)"/>
												</Remark>
											</Activity>
										</xsl:for-each>
									</Shutdown>
								</xsl:for-each>
								<xsl:for-each select="ns0:operationalComment">
									<OperationalComment>
										<xsl:for-each select="@uid">
											<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="ns0:type">
											<Type>
												<xsl:sequence select="fn:string(.)"/>
											</Type>
										</xsl:for-each>
										<xsl:for-each select="ns0:dTimStart">
											<DTimStart>
												<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
											</DTimStart>
										</xsl:for-each>
										<xsl:for-each select="ns0:dTimEnd">
											<DTimEnd>
												<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
											</DTimEnd>
										</xsl:for-each>
										<xsl:for-each select="ns0:comment">
											<Comment>
												<xsl:sequence select="fn:string(.)"/>
											</Comment>
										</xsl:for-each>
									</OperationalComment>
								</xsl:for-each>
								<xsl:for-each select="ns0:alarm">
									<Alarm>
										<xsl:for-each select="@uid">
											<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="ns0:dTim">
											<DTim>
												<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
											</DTim>
										</xsl:for-each>
										<xsl:for-each select="ns0:area">
											<Area>
												<xsl:sequence select="fn:string(.)"/>
											</Area>
										</xsl:for-each>
										<xsl:for-each select="ns0:type">
											<Type>
												<xsl:sequence select="fn:string(.)"/>
											</Type>
										</xsl:for-each>
										<xsl:for-each select="ns0:reason">
											<Reason>
												<xsl:sequence select="fn:string(.)"/>
											</Reason>
										</xsl:for-each>
										<xsl:for-each select="ns0:comment">
											<Comment>
												<xsl:sequence select="fn:string(.)"/>
											</Comment>
										</xsl:for-each>
									</Alarm>
								</xsl:for-each>
								<xsl:for-each select="ns0:lostProduction">
									<LostProduction>
										<xsl:for-each select="ns0:thirdPartyProcessing">
											<ThirdPartyProcessing>
												<xsl:for-each select="@uid">
													<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:for-each select="ns0:installation">
													<Installation>
														<xsl:for-each select="@kind">
															<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
														</xsl:for-each>
														<xsl:for-each select="@siteKind">
															<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
														</xsl:for-each>
														<xsl:for-each select="@namingSystem">
															<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
														</xsl:for-each>
														<xsl:for-each select="@uidRef">
															<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
														</xsl:for-each>
														<xsl:sequence select="fn:string(.)"/>
													</Installation>
												</xsl:for-each>
												<xsl:for-each select="ns0:oilStdTempPres">
													<OilStdTempPres>
														<xsl:call-template name="tbf:tbf7_VolumeMeasure">
															<xsl:with-param name="input" select="." as="node()"/>
														</xsl:call-template>
													</OilStdTempPres>
												</xsl:for-each>
												<xsl:for-each select="ns0:gasStdTempPres">
													<GasStdTempPres>
														<xsl:call-template name="tbf:tbf7_VolumeMeasure">
															<xsl:with-param name="input" select="." as="node()"/>
														</xsl:call-template>
													</GasStdTempPres>
												</xsl:for-each>
											</ThirdPartyProcessing>
										</xsl:for-each>
										<xsl:for-each select="ns0:volumeAndReason">
											<VolumeAndReason>
												<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
												<xsl:attribute name="reasonLost" namespace="" select="fn:string(@reasonLost)"/>
											</VolumeAndReason>
										</xsl:for-each>
									</LostProduction>
								</xsl:for-each>
								<xsl:for-each select="ns0:lostInjection">
									<LostInjection>
										<xsl:for-each select="ns0:thirdPartyProcessing">
											<ThirdPartyProcessing>
												<xsl:for-each select="@uid">
													<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:for-each select="ns0:installation">
													<Installation>
														<xsl:for-each select="@kind">
															<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
														</xsl:for-each>
														<xsl:for-each select="@siteKind">
															<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
														</xsl:for-each>
														<xsl:for-each select="@namingSystem">
															<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
														</xsl:for-each>
														<xsl:for-each select="@uidRef">
															<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
														</xsl:for-each>
														<xsl:sequence select="fn:string(.)"/>
													</Installation>
												</xsl:for-each>
												<xsl:for-each select="ns0:oilStdTempPres">
													<OilStdTempPres>
														<xsl:call-template name="tbf:tbf7_VolumeMeasure">
															<xsl:with-param name="input" select="." as="node()"/>
														</xsl:call-template>
													</OilStdTempPres>
												</xsl:for-each>
												<xsl:for-each select="ns0:gasStdTempPres">
													<GasStdTempPres>
														<xsl:call-template name="tbf:tbf7_VolumeMeasure">
															<xsl:with-param name="input" select="." as="node()"/>
														</xsl:call-template>
													</GasStdTempPres>
												</xsl:for-each>
											</ThirdPartyProcessing>
										</xsl:for-each>
										<xsl:for-each select="ns0:volumeAndReason">
											<VolumeAndReason>
												<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
												<xsl:attribute name="reasonLost" namespace="" select="fn:string(@reasonLost)"/>
											</VolumeAndReason>
										</xsl:for-each>
									</LostInjection>
								</xsl:for-each>
							</ProductionActivity>
						</xsl:for-each>
						<xsl:for-each select="ns0:operationalHSE">
							<OperationalHSE>
								<xsl:for-each select="@uid">
									<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="ns0:IncidentCount">
									<IncidentCount>
										<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
									</IncidentCount>
								</xsl:for-each>
								<xsl:for-each select="ns0:sinceLostTime">
									<SinceLostTime>
										<xsl:call-template name="tbf:tbf2_TimeMeasure">
											<xsl:with-param name="input" select="." as="node()"/>
										</xsl:call-template>
									</SinceLostTime>
								</xsl:for-each>
								<xsl:for-each select="ns0:sincePreventionExercise">
									<SincePreventionExercise>
										<xsl:call-template name="tbf:tbf2_TimeMeasure">
											<xsl:with-param name="input" select="." as="node()"/>
										</xsl:call-template>
									</SincePreventionExercise>
								</xsl:for-each>
								<xsl:for-each select="ns0:sinceDefinedSituation">
									<SinceDefinedSituation>
										<xsl:call-template name="tbf:tbf2_TimeMeasure">
											<xsl:with-param name="input" select="." as="node()"/>
										</xsl:call-template>
									</SinceDefinedSituation>
								</xsl:for-each>
								<xsl:for-each select="ns0:medicalTreatmentCount">
									<MedicalTreatmentCount>
										<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
									</MedicalTreatmentCount>
								</xsl:for-each>
								<xsl:for-each select="ns0:alarmCount">
									<AlarmCount>
										<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
									</AlarmCount>
								</xsl:for-each>
								<xsl:for-each select="ns0:safetyIntroCount">
									<SafetyIntroCount>
										<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
									</SafetyIntroCount>
								</xsl:for-each>
								<xsl:for-each select="ns0:safetyDescription">
									<SafetyDescription>
										<xsl:sequence select="fn:string(.)"/>
									</SafetyDescription>
								</xsl:for-each>
								<xsl:for-each select="ns0:weather">
									<Weather>
										<xsl:for-each select="@uid">
											<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<DTim>
											<xsl:sequence select="xs:string(xs:dateTime(fn:string(ns0:dTim)))"/>
										</DTim>
										<xsl:for-each select="ns0:agency">
											<Agency>
												<xsl:sequence select="fn:string(.)"/>
											</Agency>
										</xsl:for-each>
										<xsl:for-each select="ns0:barometricPressure">
											<BarometricPressure>
												<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
												<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
											</BarometricPressure>
										</xsl:for-each>
										<xsl:for-each select="ns0:beaufortScaleNumber">
											<BeaufortScaleNumber>
												<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
											</BeaufortScaleNumber>
										</xsl:for-each>
										<xsl:for-each select="ns0:tempSurface">
											<TempSurface>
												<xsl:call-template name="tbf:tbf6_ThermodynamicTemperatureMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</TempSurface>
										</xsl:for-each>
										<xsl:for-each select="ns0:tempSurfaceMn">
											<TempSurfaceMn>
												<xsl:call-template name="tbf:tbf6_ThermodynamicTemperatureMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</TempSurfaceMn>
										</xsl:for-each>
										<xsl:for-each select="ns0:tempSurfaceMx">
											<TempSurfaceMx>
												<xsl:call-template name="tbf:tbf6_ThermodynamicTemperatureMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</TempSurfaceMx>
										</xsl:for-each>
										<xsl:for-each select="ns0:tempWindChill">
											<TempWindChill>
												<xsl:call-template name="tbf:tbf6_ThermodynamicTemperatureMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</TempWindChill>
										</xsl:for-each>
										<xsl:for-each select="ns0:tempsea">
											<Tempsea>
												<xsl:call-template name="tbf:tbf6_ThermodynamicTemperatureMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</Tempsea>
										</xsl:for-each>
										<xsl:for-each select="ns0:visibility">
											<Visibility>
												<xsl:call-template name="tbf:tbf9_LengthMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</Visibility>
										</xsl:for-each>
										<xsl:for-each select="ns0:aziWave">
											<AziWave>
												<xsl:call-template name="tbf:tbf10_PlaneAngleMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</AziWave>
										</xsl:for-each>
										<xsl:for-each select="ns0:htWave">
											<HtWave>
												<xsl:call-template name="tbf:tbf9_LengthMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</HtWave>
										</xsl:for-each>
										<xsl:for-each select="ns0:significantWave">
											<SignificantWave>
												<xsl:call-template name="tbf:tbf9_LengthMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</SignificantWave>
										</xsl:for-each>
										<xsl:for-each select="ns0:maxWave">
											<MaxWave>
												<xsl:call-template name="tbf:tbf9_LengthMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</MaxWave>
										</xsl:for-each>
										<xsl:for-each select="ns0:periodWave">
											<PeriodWave>
												<xsl:call-template name="tbf:tbf2_TimeMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</PeriodWave>
										</xsl:for-each>
										<xsl:for-each select="ns0:aziWind">
											<AziWind>
												<xsl:attribute name="uom" namespace="" select="'dega'"/>
												<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
											</AziWind>
										</xsl:for-each>
										<xsl:for-each select="ns0:velWind">
											<VelWind>
												<xsl:attribute name="uom" namespace="" select="'dega/s'"/>
												<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
											</VelWind>
										</xsl:for-each>
										<xsl:for-each select="ns0:typePrecip">
											<TypePrecip>
												<xsl:sequence select="fn:string(.)"/>
											</TypePrecip>
										</xsl:for-each>
										<xsl:for-each select="ns0:amtPrecip">
											<AmtPrecip>
												<xsl:call-template name="tbf:tbf9_LengthMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</AmtPrecip>
										</xsl:for-each>
										<xsl:for-each select="ns0:coverCloud">
											<CoverCloud>
												<xsl:sequence select="fn:string(.)"/>
											</CoverCloud>
										</xsl:for-each>
										<xsl:for-each select="ns0:ceilingCloud">
											<CeilingCloud>
												<xsl:call-template name="tbf:tbf9_LengthMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</CeilingCloud>
										</xsl:for-each>
										<xsl:for-each select="ns0:currentSea">
											<CurrentSea>
												<xsl:call-template name="tbf:tbf11_AngularVelocityMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</CurrentSea>
										</xsl:for-each>
										<xsl:for-each select="ns0:aziCurrentSea">
											<AziCurrentSea>
												<xsl:call-template name="tbf:tbf10_PlaneAngleMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</AziCurrentSea>
										</xsl:for-each>
										<xsl:for-each select="ns0:comments">
											<Comments>
												<xsl:sequence select="fn:string(.)"/>
											</Comments>
										</xsl:for-each>
									</Weather>
								</xsl:for-each>
								<xsl:for-each select="ns0:safety">
									<Safety>
										<xsl:for-each select="@uid">
											<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="ns0:meantimeIncident">
											<MeantimeIncident>
												<xsl:call-template name="tbf:tbf2_TimeMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</MeantimeIncident>
										</xsl:for-each>
										<xsl:for-each select="ns0:safetyCount">
											<SafetyCount>
												<xsl:for-each select="@type">
													<xsl:attribute name="type" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:for-each select="@period">
													<xsl:attribute name="period" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
											</SafetyCount>
										</xsl:for-each>
										<xsl:for-each select="ns0:comment">
											<Comment>
												<xsl:for-each select="@uid">
													<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:for-each select="ns0:who">
													<Who>
														<xsl:sequence select="fn:string(.)"/>
													</Who>
												</xsl:for-each>
												<xsl:for-each select="ns0:role">
													<Role>
														<xsl:sequence select="fn:string(.)"/>
													</Role>
												</xsl:for-each>
												<Remark>
													<xsl:sequence select="fn:string(ns0:remark)"/>
												</Remark>
											</Comment>
										</xsl:for-each>
									</Safety>
								</xsl:for-each>
							</OperationalHSE>
						</xsl:for-each>
					</InstallationReport>
				</xsl:for-each>
				<xsl:for-each select="ns0:issuedBy">
					<IssuedBy>
						<Name>
							<xsl:sequence select="fn:string(ns0:name)"/>
						</Name>
						<xsl:for-each select="ns0:role">
							<Role>
								<xsl:sequence select="fn:string(.)"/>
							</Role>
						</xsl:for-each>
						<xsl:for-each select="ns0:alias">
							<Alias>
								<xsl:sequence select="fn:string(.)"/>
							</Alias>
						</xsl:for-each>
						<xsl:for-each select="ns0:address">
							<Address>
								<xsl:for-each select="@uid">
									<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@kind">
									<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="ns0:name">
									<Name>
										<xsl:sequence select="fn:string(.)"/>
									</Name>
								</xsl:for-each>
								<xsl:for-each select="ns0:street">
									<Street>
										<xsl:sequence select="fn:string(.)"/>
									</Street>
								</xsl:for-each>
								<City>
									<xsl:sequence select="fn:string(ns0:city)"/>
								</City>
								<xsl:for-each select="ns0:country">
									<Country>
										<xsl:sequence select="fn:string(.)"/>
									</Country>
								</xsl:for-each>
								<xsl:for-each select="ns0:county">
									<County>
										<xsl:sequence select="fn:string(.)"/>
									</County>
								</xsl:for-each>
								<xsl:for-each select="ns0:postalCode">
									<PostalCode>
										<xsl:sequence select="fn:string(.)"/>
									</PostalCode>
								</xsl:for-each>
								<xsl:for-each select="ns0:state">
									<State>
										<xsl:sequence select="fn:string(.)"/>
									</State>
								</xsl:for-each>
								<xsl:for-each select="ns0:province">
									<Province>
										<xsl:sequence select="fn:string(.)"/>
									</Province>
								</xsl:for-each>
							</Address>
						</xsl:for-each>
						<xsl:for-each select="ns0:phoneNumber">
							<PhoneNumber>
								<xsl:attribute name="type" namespace="" select="fn:string(@type)"/>
								<xsl:for-each select="@qualifier">
									<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@extension">
									<xsl:attribute name="extension" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:sequence select="fn:string(.)"/>
							</PhoneNumber>
						</xsl:for-each>
						<xsl:for-each select="ns0:email">
							<Email>
								<xsl:for-each select="@qualifier">
									<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
							</Email>
						</xsl:for-each>
						<xsl:for-each select="ns0:associatedWith">
							<AssociatedWith>
								<xsl:sequence select="fn:string(.)"/>
							</AssociatedWith>
						</xsl:for-each>
						<xsl:for-each select="ns0:contact">
							<Contact>
								<xsl:sequence select="fn:string(.)"/>
							</Contact>
						</xsl:for-each>
						<xsl:for-each select="ns0:personnelCount">
							<PersonnelCount>
								<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
							</PersonnelCount>
						</xsl:for-each>
						<xsl:for-each select="ns0:personName">
							<PersonName>
								<xsl:for-each select="ns0:prefix">
									<Prefix>
										<xsl:sequence select="fn:string(.)"/>
									</Prefix>
								</xsl:for-each>
								<First>
									<xsl:sequence select="fn:string(ns0:first)"/>
								</First>
								<xsl:for-each select="ns0:middle">
									<Middle>
										<xsl:sequence select="fn:string(.)"/>
									</Middle>
								</xsl:for-each>
								<Last>
									<xsl:sequence select="fn:string(ns0:last)"/>
								</Last>
								<xsl:for-each select="ns0:suffix">
									<Suffix>
										<xsl:sequence select="fn:string(.)"/>
									</Suffix>
								</xsl:for-each>
							</PersonName>
						</xsl:for-each>
					</IssuedBy>
				</xsl:for-each>
				<xsl:for-each select="ns0:approver">
					<Approver>
						<Name>
							<xsl:sequence select="fn:string(ns0:name)"/>
						</Name>
						<xsl:for-each select="ns0:role">
							<Role>
								<xsl:sequence select="fn:string(.)"/>
							</Role>
						</xsl:for-each>
						<xsl:for-each select="ns0:alias">
							<Alias>
								<xsl:sequence select="fn:string(.)"/>
							</Alias>
						</xsl:for-each>
						<xsl:for-each select="ns0:address">
							<Address>
								<xsl:for-each select="@uid">
									<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@kind">
									<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="ns0:name">
									<Name>
										<xsl:sequence select="fn:string(.)"/>
									</Name>
								</xsl:for-each>
								<xsl:for-each select="ns0:street">
									<Street>
										<xsl:sequence select="fn:string(.)"/>
									</Street>
								</xsl:for-each>
								<City>
									<xsl:sequence select="fn:string(ns0:city)"/>
								</City>
								<xsl:for-each select="ns0:country">
									<Country>
										<xsl:sequence select="fn:string(.)"/>
									</Country>
								</xsl:for-each>
								<xsl:for-each select="ns0:county">
									<County>
										<xsl:sequence select="fn:string(.)"/>
									</County>
								</xsl:for-each>
								<xsl:for-each select="ns0:postalCode">
									<PostalCode>
										<xsl:sequence select="fn:string(.)"/>
									</PostalCode>
								</xsl:for-each>
								<xsl:for-each select="ns0:state">
									<State>
										<xsl:sequence select="fn:string(.)"/>
									</State>
								</xsl:for-each>
								<xsl:for-each select="ns0:province">
									<Province>
										<xsl:sequence select="fn:string(.)"/>
									</Province>
								</xsl:for-each>
							</Address>
						</xsl:for-each>
						<xsl:for-each select="ns0:phoneNumber">
							<PhoneNumber>
								<xsl:attribute name="type" namespace="" select="fn:string(@type)"/>
								<xsl:for-each select="@qualifier">
									<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@extension">
									<xsl:attribute name="extension" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:sequence select="fn:string(.)"/>
							</PhoneNumber>
						</xsl:for-each>
						<xsl:for-each select="ns0:email">
							<Email>
								<xsl:for-each select="@qualifier">
									<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
							</Email>
						</xsl:for-each>
						<xsl:for-each select="ns0:associatedWith">
							<AssociatedWith>
								<xsl:sequence select="fn:string(.)"/>
							</AssociatedWith>
						</xsl:for-each>
						<xsl:for-each select="ns0:contact">
							<Contact>
								<xsl:sequence select="fn:string(.)"/>
							</Contact>
						</xsl:for-each>
						<xsl:for-each select="ns0:personnelCount">
							<PersonnelCount>
								<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
							</PersonnelCount>
						</xsl:for-each>
						<xsl:for-each select="ns0:personName">
							<PersonName>
								<xsl:for-each select="ns0:prefix">
									<Prefix>
										<xsl:sequence select="fn:string(.)"/>
									</Prefix>
								</xsl:for-each>
								<First>
									<xsl:sequence select="fn:string(ns0:first)"/>
								</First>
								<xsl:for-each select="ns0:middle">
									<Middle>
										<xsl:sequence select="fn:string(.)"/>
									</Middle>
								</xsl:for-each>
								<Last>
									<xsl:sequence select="fn:string(ns0:last)"/>
								</Last>
								<xsl:for-each select="ns0:suffix">
									<Suffix>
										<xsl:sequence select="fn:string(.)"/>
									</Suffix>
								</xsl:for-each>
							</PersonName>
						</xsl:for-each>
					</Approver>
				</xsl:for-each>
				<xsl:for-each select="ns0:operator">
					<Operator>
						<Name>
							<xsl:sequence select="fn:string(ns0:name)"/>
						</Name>
						<xsl:for-each select="ns0:role">
							<Role>
								<xsl:sequence select="fn:string(.)"/>
							</Role>
						</xsl:for-each>
						<xsl:for-each select="ns0:alias">
							<Alias>
								<xsl:sequence select="fn:string(.)"/>
							</Alias>
						</xsl:for-each>
						<xsl:for-each select="ns0:address">
							<Address>
								<xsl:for-each select="@uid">
									<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@kind">
									<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="ns0:name">
									<Name>
										<xsl:sequence select="fn:string(.)"/>
									</Name>
								</xsl:for-each>
								<xsl:for-each select="ns0:street">
									<Street>
										<xsl:sequence select="fn:string(.)"/>
									</Street>
								</xsl:for-each>
								<City>
									<xsl:sequence select="fn:string(ns0:city)"/>
								</City>
								<xsl:for-each select="ns0:country">
									<Country>
										<xsl:sequence select="fn:string(.)"/>
									</Country>
								</xsl:for-each>
								<xsl:for-each select="ns0:county">
									<County>
										<xsl:sequence select="fn:string(.)"/>
									</County>
								</xsl:for-each>
								<xsl:for-each select="ns0:postalCode">
									<PostalCode>
										<xsl:sequence select="fn:string(.)"/>
									</PostalCode>
								</xsl:for-each>
								<xsl:for-each select="ns0:state">
									<State>
										<xsl:sequence select="fn:string(.)"/>
									</State>
								</xsl:for-each>
								<xsl:for-each select="ns0:province">
									<Province>
										<xsl:sequence select="fn:string(.)"/>
									</Province>
								</xsl:for-each>
							</Address>
						</xsl:for-each>
						<xsl:for-each select="ns0:phoneNumber">
							<PhoneNumber>
								<xsl:attribute name="type" namespace="" select="fn:string(@type)"/>
								<xsl:for-each select="@qualifier">
									<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@extension">
									<xsl:attribute name="extension" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:sequence select="fn:string(.)"/>
							</PhoneNumber>
						</xsl:for-each>
						<xsl:for-each select="ns0:email">
							<Email>
								<xsl:for-each select="@qualifier">
									<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
							</Email>
						</xsl:for-each>
						<xsl:for-each select="ns0:associatedWith">
							<AssociatedWith>
								<xsl:sequence select="fn:string(.)"/>
							</AssociatedWith>
						</xsl:for-each>
						<xsl:for-each select="ns0:contact">
							<Contact>
								<xsl:sequence select="fn:string(.)"/>
							</Contact>
						</xsl:for-each>
						<xsl:for-each select="ns0:personnelCount">
							<PersonnelCount>
								<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
							</PersonnelCount>
						</xsl:for-each>
						<xsl:for-each select="ns0:personName">
							<PersonName>
								<xsl:for-each select="ns0:prefix">
									<Prefix>
										<xsl:sequence select="fn:string(.)"/>
									</Prefix>
								</xsl:for-each>
								<First>
									<xsl:sequence select="fn:string(ns0:first)"/>
								</First>
								<xsl:for-each select="ns0:middle">
									<Middle>
										<xsl:sequence select="fn:string(.)"/>
									</Middle>
								</xsl:for-each>
								<Last>
									<xsl:sequence select="fn:string(ns0:last)"/>
								</Last>
								<xsl:for-each select="ns0:suffix">
									<Suffix>
										<xsl:sequence select="fn:string(.)"/>
									</Suffix>
								</xsl:for-each>
							</PersonName>
						</xsl:for-each>
					</Operator>
				</xsl:for-each>
				<xsl:for-each select="ns0:geographicContext">
					<GeographicContext>
						<xsl:for-each select="ns0:country">
							<Country>
								<xsl:sequence select="fn:string(.)"/>
							</Country>
						</xsl:for-each>
						<xsl:for-each select="ns0:state">
							<State>
								<xsl:sequence select="fn:string(.)"/>
							</State>
						</xsl:for-each>
						<xsl:for-each select="ns0:field">
							<Field>
								<xsl:sequence select="fn:string(.)"/>
							</Field>
						</xsl:for-each>
						<xsl:for-each select="ns0:comment">
							<Comment>
								<xsl:sequence select="fn:string(.)"/>
							</Comment>
						</xsl:for-each>
						<xsl:for-each select="ns0:offshoreLocation">
							<OffshoreLocation>
								<xsl:for-each select="ns0:areaName">
									<AreaName>
										<xsl:sequence select="fn:string(.)"/>
									</AreaName>
								</xsl:for-each>
								<xsl:for-each select="ns0:blockID">
									<BlockID>
										<xsl:sequence select="fn:string(.)"/>
									</BlockID>
								</xsl:for-each>
								<xsl:for-each select="ns0:comment">
									<Comment>
										<xsl:sequence select="fn:string(.)"/>
									</Comment>
								</xsl:for-each>
								<xsl:variable name="var1_northSeaOffshore" as="node()" select="ns0:northSeaOffshore"/>
								<NorthSeaOffshore>
									<xsl:for-each select="$var1_northSeaOffshore/ns0:areaName">
										<AreaName>
											<xsl:sequence select="fn:string(.)"/>
										</AreaName>
									</xsl:for-each>
									<Quadrant>
										<xsl:sequence select="fn:string($var1_northSeaOffshore/ns0:quadrant)"/>
									</Quadrant>
									<xsl:for-each select="$var1_northSeaOffshore/ns0:blockSuffix">
										<BlockSuffix>
											<xsl:sequence select="fn:string(.)"/>
										</BlockSuffix>
									</xsl:for-each>
								</NorthSeaOffshore>
							</OffshoreLocation>
						</xsl:for-each>
					</GeographicContext>
				</xsl:for-each>
				<DateTime>
					<xsl:attribute name="xsi:type" namespace="http://www.w3.org/2001/XMLSchema-instance" select="xs:QName('StartEndDate')"/>
					<xsl:for-each select="ns0:dateStart">
						<DateStart>
							<xsl:sequence select="xs:string(xs:date(fn:string(.)))"/>
						</DateStart>
					</xsl:for-each>
					<xsl:for-each select="ns0:dateEnd">
						<DateEnd>
							<xsl:sequence select="xs:string(xs:date(fn:string(.)))"/>
						</DateEnd>
					</xsl:for-each>
				</DateTime>
			</xsl:for-each>
		</ProductionOperation>
	</xsl:template>
</xsl:stylesheet>
