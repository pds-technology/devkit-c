<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2017sp2

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tbf="http://www.altova.com/MapForce/UDF/tbf" xmlns:ns0="http://www.prodml.org/schemas/1series" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" exclude-result-prefixes="tbf ns0 xs fn">
	<xsl:template name="tbf:tbf1_CustomData">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/node()">
			<xsl:choose>
				<xsl:when test="fn:boolean(self::*)">
					<xsl:if test="fn:boolean(self::*)">
						<xsl:element name="{fn:string(fn:node-name(.))}" namespace="{fn:namespace-uri-from-QName(fn:node-name(.))}">
							<xsl:sequence select="(./@node(), ./node())"/>
						</xsl:element>
					</xsl:if>
				</xsl:when>
				<xsl:otherwise>
					<xsl:if test="fn:not(fn:boolean(self::text()))">
						<xsl:sequence select="."/>
					</xsl:if>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:for-each>
	</xsl:template>
	<xsl:template name="tbf:tbf2_VolumeMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf3_TimeMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf4_VolumePerVolumeMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf5_MassPerMassMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf6_PressureMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf7_ThermodynamicTemperatureMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf8_MassMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf9_EnergyMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf10_MassPerVolumeMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf11_MassPerTimeMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf12_AmountOfSubstancePerAmountOfSubstanceMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf13_AmountOfSubstanceMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf14_DimensionlessMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf15_IsothermalCompressibilityMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf16_EnergyPerVolumeMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf17_LengthMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf18_LengthPerLengthMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:output method="xml" encoding="UTF-8" byte-order-mark="no" indent="yes"/>
	<xsl:template match="/">
		<xsl:variable name="var9_productVolumes" as="node()?" select="ns0:productVolumes"/>
		<ProductVolume xmlns="http://www.energistics.org/energyml/data/prodmlv2" xmlns:eml="http://www.energistics.org/energyml/data/commonv2" xmlns:gco="http://www.isotc211.org/2005/gco" xmlns:gmd="http://www.isotc211.org/2005/gmd" xmlns:gsr="http://www.isotc211.org/2005/gsr" xmlns:gts="http://www.isotc211.org/2005/gts" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xlink="http://www.w3.org/1999/xlink">
			<xsl:attribute name="xsi:schemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance" select="'http://www.energistics.org/energyml/data/prodmlv2 file:///C:/Energistics2/energyml/data/prodml/v2.0/xsd_schemas/ProductVolume.xsd'"/>
			<xsl:for-each select="$var9_productVolumes/ns0:productVolume">
				<xsl:attribute name="schemaVersion" namespace="" select="'2.0'"/>
				<xsl:attribute name="uuid" namespace="" select="'00000000-0000-0000-0000-000000000000'"/>
			</xsl:for-each>
			<xsl:for-each select="$var9_productVolumes/ns0:productVolume">
				<xsl:variable name="var8_facility" as="node()*" select="ns0:facility"/>
				<eml:Citation>
					<eml:Title>
						<xsl:sequence select="fn:string(ns0:name)"/>
					</eml:Title>
					<eml:Originator>131_input</eml:Originator>
					<eml:Creation>
						<xsl:sequence select="xs:string(fn:current-dateTime())"/>
					</eml:Creation>
					<eml:Format>Mapforce</eml:Format>
				</eml:Citation>
				<xsl:for-each select="ns0:customData">
					<eml:CustomData>
						<xsl:call-template name="tbf:tbf1_CustomData">
							<xsl:with-param name="input" select="." as="node()"/>
						</xsl:call-template>
					</eml:CustomData>
				</xsl:for-each>
				<xsl:for-each select="$var8_facility/ns0:extensionNameValue">
					<eml:ExtensionNameValue>
						<eml:Name>
							<xsl:sequence select="fn:string(ns0:name)"/>
						</eml:Name>
						<eml:Value>
							<xsl:sequence select="fn:string(ns0:value)"/>
						</eml:Value>
						<xsl:for-each select="ns0:measureClass">
							<eml:MeasureClass>
								<xsl:sequence select="fn:string(.)"/>
							</eml:MeasureClass>
						</xsl:for-each>
						<xsl:for-each select="ns0:dTim">
							<eml:DTim>
								<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
							</eml:DTim>
						</xsl:for-each>
						<xsl:for-each select="ns0:index">
							<eml:Index>
								<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
							</eml:Index>
						</xsl:for-each>
						<xsl:for-each select="ns0:description">
							<eml:Description>
								<xsl:sequence select="fn:string(.)"/>
							</eml:Description>
						</xsl:for-each>
					</eml:ExtensionNameValue>
				</xsl:for-each>
				<xsl:for-each select="ns0:installation">
					<Installation>
						<xsl:for-each select="@kind">
							<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="@siteKind">
							<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="@namingSystem">
							<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="@uidRef">
							<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:sequence select="fn:string(.)"/>
					</Installation>
				</xsl:for-each>
				<xsl:for-each select="ns0:contextFacility">
					<ContextFacility>
						<xsl:for-each select="@kind">
							<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="@siteKind">
							<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="@namingSystem">
							<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="@uidRef">
							<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:sequence select="fn:string(.)"/>
					</ContextFacility>
				</xsl:for-each>
				<xsl:for-each select="ns0:kind">
					<Kind>
						<xsl:sequence select="fn:string(.)"/>
					</Kind>
				</xsl:for-each>
				<PeriodKind>day</PeriodKind>
				<xsl:for-each select="ns0:dTimMin">
					<DTimMin>
						<xsl:for-each select="@endpoint">
							<xsl:attribute name="endpoint" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
					</DTimMin>
				</xsl:for-each>
				<xsl:for-each select="ns0:dTimMax">
					<DTimMax>
						<xsl:for-each select="@endpoint">
							<xsl:attribute name="endpoint" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
					</DTimMax>
				</xsl:for-each>
				<xsl:for-each select="ns0:dTimCurrent">
					<DTimCurrent>
						<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
					</DTimCurrent>
				</xsl:for-each>
				<xsl:for-each select="ns0:calculationMethod">
					<CalculationMethod>
						<xsl:sequence select="fn:string(.)"/>
					</CalculationMethod>
				</xsl:for-each>
				<xsl:for-each select="ns0:operator">
					<Operator>
						<Name>
							<xsl:sequence select="fn:string(ns0:name)"/>
						</Name>
						<xsl:for-each select="ns0:role">
							<Role>
								<xsl:sequence select="fn:string(.)"/>
							</Role>
						</xsl:for-each>
						<xsl:for-each select="ns0:alias">
							<Alias>
								<xsl:sequence select="fn:string(.)"/>
							</Alias>
						</xsl:for-each>
						<xsl:for-each select="ns0:address">
							<Address>
								<xsl:for-each select="@uid">
									<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@kind">
									<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="ns0:name">
									<Name>
										<xsl:sequence select="fn:string(.)"/>
									</Name>
								</xsl:for-each>
								<xsl:for-each select="ns0:street">
									<Street>
										<xsl:sequence select="fn:string(.)"/>
									</Street>
								</xsl:for-each>
								<City>
									<xsl:sequence select="fn:string(ns0:city)"/>
								</City>
								<xsl:for-each select="ns0:country">
									<Country>
										<xsl:sequence select="fn:string(.)"/>
									</Country>
								</xsl:for-each>
								<xsl:for-each select="ns0:county">
									<County>
										<xsl:sequence select="fn:string(.)"/>
									</County>
								</xsl:for-each>
								<xsl:for-each select="ns0:postalCode">
									<PostalCode>
										<xsl:sequence select="fn:string(.)"/>
									</PostalCode>
								</xsl:for-each>
								<xsl:for-each select="ns0:state">
									<State>
										<xsl:sequence select="fn:string(.)"/>
									</State>
								</xsl:for-each>
								<xsl:for-each select="ns0:province">
									<Province>
										<xsl:sequence select="fn:string(.)"/>
									</Province>
								</xsl:for-each>
							</Address>
						</xsl:for-each>
						<xsl:for-each select="ns0:phoneNumber">
							<PhoneNumber>
								<xsl:attribute name="type" namespace="" select="fn:string(@type)"/>
								<xsl:for-each select="@qualifier">
									<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@extension">
									<xsl:attribute name="extension" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:sequence select="fn:string(.)"/>
							</PhoneNumber>
						</xsl:for-each>
						<xsl:for-each select="ns0:email">
							<Email>
								<xsl:for-each select="@qualifier">
									<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
							</Email>
						</xsl:for-each>
						<xsl:for-each select="ns0:associatedWith">
							<AssociatedWith>
								<xsl:sequence select="fn:string(.)"/>
							</AssociatedWith>
						</xsl:for-each>
						<xsl:for-each select="ns0:contact">
							<Contact>
								<xsl:sequence select="fn:string(.)"/>
							</Contact>
						</xsl:for-each>
						<xsl:for-each select="ns0:personnelCount">
							<PersonnelCount>
								<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
							</PersonnelCount>
						</xsl:for-each>
						<xsl:for-each select="ns0:personName">
							<PersonName>
								<xsl:for-each select="ns0:prefix">
									<Prefix>
										<xsl:sequence select="fn:string(.)"/>
									</Prefix>
								</xsl:for-each>
								<First>
									<xsl:sequence select="fn:string(ns0:first)"/>
								</First>
								<xsl:for-each select="ns0:middle">
									<Middle>
										<xsl:sequence select="fn:string(.)"/>
									</Middle>
								</xsl:for-each>
								<Last>
									<xsl:sequence select="fn:string(ns0:last)"/>
								</Last>
								<xsl:for-each select="ns0:suffix">
									<Suffix>
										<xsl:sequence select="fn:string(.)"/>
									</Suffix>
								</xsl:for-each>
							</PersonName>
						</xsl:for-each>
					</Operator>
				</xsl:for-each>
				<xsl:for-each select="ns0:title">
					<Title>
						<xsl:sequence select="fn:string(.)"/>
					</Title>
				</xsl:for-each>
				<xsl:for-each select="ns0:geographicContext">
					<GeographicContext>
						<xsl:for-each select="ns0:country">
							<Country>
								<xsl:sequence select="fn:string(.)"/>
							</Country>
						</xsl:for-each>
						<xsl:for-each select="ns0:state">
							<State>
								<xsl:sequence select="fn:string(.)"/>
							</State>
						</xsl:for-each>
						<xsl:for-each select="ns0:field">
							<Field>
								<xsl:sequence select="fn:string(.)"/>
							</Field>
						</xsl:for-each>
						<xsl:for-each select="ns0:comment">
							<Comment>
								<xsl:sequence select="fn:string(.)"/>
							</Comment>
						</xsl:for-each>
						<xsl:for-each select="ns0:offshoreLocation">
							<OffshoreLocation>
								<xsl:for-each select="ns0:areaName">
									<AreaName>
										<xsl:sequence select="fn:string(.)"/>
									</AreaName>
								</xsl:for-each>
								<xsl:for-each select="ns0:blockID">
									<BlockID>
										<xsl:sequence select="fn:string(.)"/>
									</BlockID>
								</xsl:for-each>
								<xsl:for-each select="ns0:comment">
									<Comment>
										<xsl:sequence select="fn:string(.)"/>
									</Comment>
								</xsl:for-each>
								<xsl:variable name="var1_northSeaOffshore" as="node()" select="ns0:northSeaOffshore"/>
								<NorthSeaOffshore>
									<xsl:for-each select="$var1_northSeaOffshore/ns0:areaName">
										<AreaName>
											<xsl:sequence select="fn:string(.)"/>
										</AreaName>
									</xsl:for-each>
									<Quadrant>
										<xsl:sequence select="fn:string($var1_northSeaOffshore/ns0:quadrant)"/>
									</Quadrant>
									<xsl:for-each select="$var1_northSeaOffshore/ns0:blockSuffix">
										<BlockSuffix>
											<xsl:sequence select="fn:string(.)"/>
										</BlockSuffix>
									</xsl:for-each>
								</NorthSeaOffshore>
							</OffshoreLocation>
						</xsl:for-each>
					</GeographicContext>
				</xsl:for-each>
				<xsl:for-each select="ns0:issueDate">
					<IssueDate>
						<xsl:sequence select="xs:string(xs:date(fn:string(.)))"/>
					</IssueDate>
				</xsl:for-each>
				<xsl:for-each select="ns0:issuedBy">
					<IssuedBy>
						<Name>
							<xsl:sequence select="fn:string(ns0:name)"/>
						</Name>
						<xsl:for-each select="ns0:role">
							<Role>
								<xsl:sequence select="fn:string(.)"/>
							</Role>
						</xsl:for-each>
						<xsl:for-each select="ns0:alias">
							<Alias>
								<xsl:sequence select="fn:string(.)"/>
							</Alias>
						</xsl:for-each>
						<xsl:for-each select="ns0:address">
							<Address>
								<xsl:for-each select="@uid">
									<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@kind">
									<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="ns0:name">
									<Name>
										<xsl:sequence select="fn:string(.)"/>
									</Name>
								</xsl:for-each>
								<xsl:for-each select="ns0:street">
									<Street>
										<xsl:sequence select="fn:string(.)"/>
									</Street>
								</xsl:for-each>
								<City>
									<xsl:sequence select="fn:string(ns0:city)"/>
								</City>
								<xsl:for-each select="ns0:country">
									<Country>
										<xsl:sequence select="fn:string(.)"/>
									</Country>
								</xsl:for-each>
								<xsl:for-each select="ns0:county">
									<County>
										<xsl:sequence select="fn:string(.)"/>
									</County>
								</xsl:for-each>
								<xsl:for-each select="ns0:postalCode">
									<PostalCode>
										<xsl:sequence select="fn:string(.)"/>
									</PostalCode>
								</xsl:for-each>
								<xsl:for-each select="ns0:state">
									<State>
										<xsl:sequence select="fn:string(.)"/>
									</State>
								</xsl:for-each>
								<xsl:for-each select="ns0:province">
									<Province>
										<xsl:sequence select="fn:string(.)"/>
									</Province>
								</xsl:for-each>
							</Address>
						</xsl:for-each>
						<xsl:for-each select="ns0:phoneNumber">
							<PhoneNumber>
								<xsl:attribute name="type" namespace="" select="fn:string(@type)"/>
								<xsl:for-each select="@qualifier">
									<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@extension">
									<xsl:attribute name="extension" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:sequence select="fn:string(.)"/>
							</PhoneNumber>
						</xsl:for-each>
						<xsl:for-each select="ns0:email">
							<Email>
								<xsl:for-each select="@qualifier">
									<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
							</Email>
						</xsl:for-each>
						<xsl:for-each select="ns0:associatedWith">
							<AssociatedWith>
								<xsl:sequence select="fn:string(.)"/>
							</AssociatedWith>
						</xsl:for-each>
						<xsl:for-each select="ns0:contact">
							<Contact>
								<xsl:sequence select="fn:string(.)"/>
							</Contact>
						</xsl:for-each>
						<xsl:for-each select="ns0:personnelCount">
							<PersonnelCount>
								<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
							</PersonnelCount>
						</xsl:for-each>
						<xsl:for-each select="ns0:personName">
							<PersonName>
								<xsl:for-each select="ns0:prefix">
									<Prefix>
										<xsl:sequence select="fn:string(.)"/>
									</Prefix>
								</xsl:for-each>
								<First>
									<xsl:sequence select="fn:string(ns0:first)"/>
								</First>
								<xsl:for-each select="ns0:middle">
									<Middle>
										<xsl:sequence select="fn:string(.)"/>
									</Middle>
								</xsl:for-each>
								<Last>
									<xsl:sequence select="fn:string(ns0:last)"/>
								</Last>
								<xsl:for-each select="ns0:suffix">
									<Suffix>
										<xsl:sequence select="fn:string(.)"/>
									</Suffix>
								</xsl:for-each>
							</PersonName>
						</xsl:for-each>
					</IssuedBy>
				</xsl:for-each>
				<xsl:for-each select="ns0:approvalDate">
					<ApprovalDate>
						<xsl:sequence select="xs:string(xs:date(fn:string(.)))"/>
					</ApprovalDate>
				</xsl:for-each>
				<xsl:for-each select="ns0:approver">
					<Approver>
						<Name>
							<xsl:sequence select="fn:string(ns0:name)"/>
						</Name>
						<xsl:for-each select="ns0:role">
							<Role>
								<xsl:sequence select="fn:string(.)"/>
							</Role>
						</xsl:for-each>
						<xsl:for-each select="ns0:alias">
							<Alias>
								<xsl:sequence select="fn:string(.)"/>
							</Alias>
						</xsl:for-each>
						<xsl:for-each select="ns0:address">
							<Address>
								<xsl:for-each select="@uid">
									<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@kind">
									<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="ns0:name">
									<Name>
										<xsl:sequence select="fn:string(.)"/>
									</Name>
								</xsl:for-each>
								<xsl:for-each select="ns0:street">
									<Street>
										<xsl:sequence select="fn:string(.)"/>
									</Street>
								</xsl:for-each>
								<City>
									<xsl:sequence select="fn:string(ns0:city)"/>
								</City>
								<xsl:for-each select="ns0:country">
									<Country>
										<xsl:sequence select="fn:string(.)"/>
									</Country>
								</xsl:for-each>
								<xsl:for-each select="ns0:county">
									<County>
										<xsl:sequence select="fn:string(.)"/>
									</County>
								</xsl:for-each>
								<xsl:for-each select="ns0:postalCode">
									<PostalCode>
										<xsl:sequence select="fn:string(.)"/>
									</PostalCode>
								</xsl:for-each>
								<xsl:for-each select="ns0:state">
									<State>
										<xsl:sequence select="fn:string(.)"/>
									</State>
								</xsl:for-each>
								<xsl:for-each select="ns0:province">
									<Province>
										<xsl:sequence select="fn:string(.)"/>
									</Province>
								</xsl:for-each>
							</Address>
						</xsl:for-each>
						<xsl:for-each select="ns0:phoneNumber">
							<PhoneNumber>
								<xsl:attribute name="type" namespace="" select="fn:string(@type)"/>
								<xsl:for-each select="@qualifier">
									<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@extension">
									<xsl:attribute name="extension" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:sequence select="fn:string(.)"/>
							</PhoneNumber>
						</xsl:for-each>
						<xsl:for-each select="ns0:email">
							<Email>
								<xsl:for-each select="@qualifier">
									<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
							</Email>
						</xsl:for-each>
						<xsl:for-each select="ns0:associatedWith">
							<AssociatedWith>
								<xsl:sequence select="fn:string(.)"/>
							</AssociatedWith>
						</xsl:for-each>
						<xsl:for-each select="ns0:contact">
							<Contact>
								<xsl:sequence select="fn:string(.)"/>
							</Contact>
						</xsl:for-each>
						<xsl:for-each select="ns0:personnelCount">
							<PersonnelCount>
								<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
							</PersonnelCount>
						</xsl:for-each>
						<xsl:for-each select="ns0:personName">
							<PersonName>
								<xsl:for-each select="ns0:prefix">
									<Prefix>
										<xsl:sequence select="fn:string(.)"/>
									</Prefix>
								</xsl:for-each>
								<First>
									<xsl:sequence select="fn:string(ns0:first)"/>
								</First>
								<xsl:for-each select="ns0:middle">
									<Middle>
										<xsl:sequence select="fn:string(.)"/>
									</Middle>
								</xsl:for-each>
								<Last>
									<xsl:sequence select="fn:string(ns0:last)"/>
								</Last>
								<xsl:for-each select="ns0:suffix">
									<Suffix>
										<xsl:sequence select="fn:string(.)"/>
									</Suffix>
								</xsl:for-each>
							</PersonName>
						</xsl:for-each>
					</Approver>
				</xsl:for-each>
				<xsl:for-each select="ns0:productFlowModel">
					<ProductFlowModel>
						<eml:ContentType>Product flow model</eml:ContentType>
						<eml:Title>Product flow model</eml:Title>
						<eml:Uuid>00000000-0000-0000-0000-000000000000</eml:Uuid>
					</ProductFlowModel>
				</xsl:for-each>
				<xsl:for-each select="ns0:standardTempPres">
					<StandardTempPres>
						<xsl:sequence select="fn:string(.)"/>
					</StandardTempPres>
				</xsl:for-each>
				<xsl:for-each select="$var8_facility">
					<Facility>
						<xsl:for-each select="@uid">
							<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="ns0:facilityParent1">
							<FacilityParent>
								<xsl:for-each select="@kind">
									<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@siteKind">
									<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@namingSystem">
									<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@uidRef">
									<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:sequence select="fn:string(.)"/>
							</FacilityParent>
						</xsl:for-each>
						<xsl:for-each select="ns0:facilityParent2">
							<FacilityParent2>
								<xsl:for-each select="@kind">
									<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@siteKind">
									<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@namingSystem">
									<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@uidRef">
									<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:sequence select="fn:string(.)"/>
							</FacilityParent2>
						</xsl:for-each>
						<xsl:for-each select="ns0:facilityAlias">
							<FacilityAlias>
								<xsl:sequence select="fn:string(.)"/>
							</FacilityAlias>
						</xsl:for-each>
						<xsl:variable name="var2_name" as="node()" select="ns0:name"/>
						<Name>
							<xsl:for-each select="$var2_name/@kind">
								<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:for-each select="$var2_name/@siteKind">
								<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:for-each select="$var2_name/@namingSystem">
								<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:for-each select="$var2_name/@uidRef">
								<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:sequence select="fn:string($var2_name)"/>
						</Name>
						<xsl:for-each select="ns0:statusWell">
							<StatusWell>
								<xsl:sequence select="fn:string(.)"/>
							</StatusWell>
						</xsl:for-each>
						<xsl:for-each select="ns0:fluidWell">
							<FluidWell>
								<xsl:sequence select="fn:string(.)"/>
							</FluidWell>
						</xsl:for-each>
						<xsl:for-each select="ns0:operatingMethod">
							<OperatingMethod>
								<xsl:sequence select="fn:string(.)"/>
							</OperatingMethod>
						</xsl:for-each>
						<xsl:for-each select="ns0:wellProducing">
							<WellProducing>
								<xsl:sequence select="xs:string(xs:boolean(fn:string(.)))"/>
							</WellProducing>
						</xsl:for-each>
						<xsl:for-each select="ns0:wellInjecting">
							<WellInjecting>
								<xsl:sequence select="xs:string(xs:boolean(fn:string(.)))"/>
							</WellInjecting>
						</xsl:for-each>
						<xsl:for-each select="ns0:capacity">
							<Capacity>
								<xsl:call-template name="tbf:tbf2_VolumeMeasure">
									<xsl:with-param name="input" select="." as="node()"/>
								</xsl:call-template>
							</Capacity>
						</xsl:for-each>
						<xsl:for-each select="ns0:operationTime">
							<OperationTime>
								<xsl:call-template name="tbf:tbf3_TimeMeasure">
									<xsl:with-param name="input" select="." as="node()"/>
								</xsl:call-template>
							</OperationTime>
						</xsl:for-each>
						<xsl:for-each select="ns0:downtimeReason">
							<DowntimeReason>
								<xsl:for-each select="@uid">
									<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="ns0:who">
									<Who>
										<xsl:sequence select="fn:string(.)"/>
									</Who>
								</xsl:for-each>
								<xsl:for-each select="ns0:role">
									<Role>
										<xsl:sequence select="fn:string(.)"/>
									</Role>
								</xsl:for-each>
								<Remark>
									<xsl:sequence select="fn:string(ns0:remark)"/>
								</Remark>
							</DowntimeReason>
						</xsl:for-each>
						<xsl:for-each select="ns0:comment">
							<Comment>
								<xsl:for-each select="@uid">
									<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="ns0:who">
									<Who>
										<xsl:sequence select="fn:string(.)"/>
									</Who>
								</xsl:for-each>
								<xsl:for-each select="ns0:role">
									<Role>
										<xsl:sequence select="fn:string(.)"/>
									</Role>
								</xsl:for-each>
								<Remark>
									<xsl:sequence select="fn:string(ns0:remark)"/>
								</Remark>
							</Comment>
						</xsl:for-each>
						<xsl:for-each select="ns0:flow">
							<xsl:variable name="var7_let" as="item()+">
								<xsl:attribute name="uom" namespace="" select="'kg/m3'"/>
								<xsl:sequence select="xs:string(xs:double(xs:decimal('0')))"/>
							</xsl:variable>
							<Flow>
								<xsl:for-each select="@uid">
									<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="ns0:name">
									<Name>
										<xsl:sequence select="fn:string(.)"/>
									</Name>
								</xsl:for-each>
								<Kind>
									<xsl:sequence select="fn:string(ns0:kind)"/>
								</Kind>
								<xsl:for-each select="ns0:port">
									<Port>
										<xsl:sequence select="fn:string(.)"/>
									</Port>
								</xsl:for-each>
								<xsl:for-each select="ns0:direction">
									<Direction>
										<xsl:sequence select="fn:string(.)"/>
									</Direction>
								</xsl:for-each>
								<xsl:for-each select="ns0:facility">
									<Facility>
										<xsl:for-each select="@kind">
											<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="@siteKind">
											<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="@namingSystem">
											<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="@uidRef">
											<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:sequence select="fn:string(.)"/>
									</Facility>
								</xsl:for-each>
								<xsl:for-each select="ns0:facilityAlias">
									<FacilityAlias>
										<xsl:sequence select="fn:string(.)"/>
									</FacilityAlias>
								</xsl:for-each>
								<xsl:for-each select="ns0:qualifier">
									<Qualifier>
										<xsl:sequence select="fn:string(.)"/>
									</Qualifier>
								</xsl:for-each>
								<xsl:for-each select="ns0:subQualifier">
									<SubQualifier>
										<xsl:sequence select="fn:string(.)"/>
									</SubQualifier>
								</xsl:for-each>
								<xsl:for-each select="ns0:version">
									<Version>
										<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
									</Version>
								</xsl:for-each>
								<SourceFlow>source</SourceFlow>
								<xsl:for-each select="ns0:relatedFacility">
									<RelatedFacility>
										<xsl:for-each select="ns0:kind">
											<Kind>
												<xsl:sequence select="fn:string(.)"/>
											</Kind>
										</xsl:for-each>
									</RelatedFacility>
								</xsl:for-each>
								<xsl:for-each select="ns0:product">
									<Product>
										<xsl:for-each select="@uid">
											<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<Kind>
											<xsl:sequence select="fn:string(ns0:kind)"/>
										</Kind>
										<xsl:for-each select="ns0:name">
											<Name>
												<xsl:sequence select="fn:string(.)"/>
											</Name>
										</xsl:for-each>
										<xsl:for-each select="ns0:splitFactor">
											<SplitFactor>
												<xsl:sequence select="xs:float(xs:double(fn:string(.)))"/>
											</SplitFactor>
										</xsl:for-each>
										<xsl:for-each select="ns0:componentContent">
											<ComponentContent>
												<xsl:for-each select="@uid">
													<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<Kind>
													<xsl:sequence select="fn:string(ns0:kind)"/>
												</Kind>
												<xsl:for-each select="ns0:referenceKind">
													<ReferenceKind>
														<xsl:sequence select="fn:string(.)"/>
													</ReferenceKind>
												</xsl:for-each>
											</ComponentContent>
										</xsl:for-each>
										<xsl:for-each select="ns0:period">
											<Period>
												<xsl:for-each select="@uid">
													<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:for-each select="ns0:kind">
													<Kind>
														<xsl:sequence select="fn:string(.)"/>
													</Kind>
												</xsl:for-each>
												<xsl:for-each select="ns0:comment">
													<Comment>
														<xsl:for-each select="@uid">
															<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
														</xsl:for-each>
														<xsl:for-each select="ns0:who">
															<Who>
																<xsl:sequence select="fn:string(.)"/>
															</Who>
														</xsl:for-each>
														<xsl:for-each select="ns0:role">
															<Role>
																<xsl:sequence select="fn:string(.)"/>
															</Role>
														</xsl:for-each>
														<Remark>
															<xsl:sequence select="fn:string(ns0:remark)"/>
														</Remark>
													</Comment>
												</xsl:for-each>
												<xsl:for-each select="ns0:balanceSet">
													<BalanceSet>
														<xsl:for-each select="@uid">
															<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
														</xsl:for-each>
														<xsl:for-each select="ns0:kind">
															<Kind>
																<xsl:sequence select="fn:string(.)"/>
															</Kind>
														</xsl:for-each>
														<xsl:for-each select="ns0:cargoNumber">
															<CargoNumber>
																<xsl:sequence select="fn:string(.)"/>
															</CargoNumber>
														</xsl:for-each>
														<xsl:for-each select="ns0:cargoBatchNumber">
															<CargoBatchNumber>
																<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
															</CargoBatchNumber>
														</xsl:for-each>
														<xsl:for-each select="ns0:shipper">
															<Shipper>
																<xsl:sequence select="fn:string(.)"/>
															</Shipper>
														</xsl:for-each>
														<xsl:for-each select="ns0:balanceDetail">
															<BalanceDetail>
																<xsl:for-each select="@uid">
																	<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
																</xsl:for-each>
																<Owner>
																	<xsl:sequence select="fn:string(ns0:owner)"/>
																</Owner>
																<xsl:for-each select="ns0:sourceUnit">
																	<SourceUnit>
																		<xsl:sequence select="fn:string(.)"/>
																	</SourceUnit>
																</xsl:for-each>
																<xsl:for-each select="ns0:share">
																	<Share>
																		<xsl:call-template name="tbf:tbf4_VolumePerVolumeMeasure">
																			<xsl:with-param name="input" select="." as="node()"/>
																		</xsl:call-template>
																	</Share>
																</xsl:for-each>
																<xsl:for-each select="ns0:accountNumber">
																	<AccountNumber>
																		<xsl:sequence select="fn:string(.)"/>
																	</AccountNumber>
																</xsl:for-each>
																<xsl:for-each select="ns0:sampleAnalysisResult">
																	<SampleAnalysisResult>
																		<xsl:sequence select="fn:string(.)"/>
																	</SampleAnalysisResult>
																</xsl:for-each>
																<xsl:for-each select="ns0:componentContent">
																	<ComponentContent>
																		<xsl:for-each select="@uid">
																			<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
																		</xsl:for-each>
																		<Kind>
																			<xsl:sequence select="fn:string(ns0:kind)"/>
																		</Kind>
																		<xsl:for-each select="ns0:referenceKind">
																			<ReferenceKind>
																				<xsl:sequence select="fn:string(.)"/>
																			</ReferenceKind>
																		</xsl:for-each>
																	</ComponentContent>
																</xsl:for-each>
																<xsl:for-each select="ns0:event">
																	<Event>
																		<xsl:for-each select="@uid">
																			<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
																		</xsl:for-each>
																		<Date>
																			<xsl:sequence select="xs:string(xs:date(fn:string(ns0:date)))"/>
																		</Date>
																		<Kind>
																			<xsl:sequence select="fn:string(ns0:kind)"/>
																		</Kind>
																	</Event>
																</xsl:for-each>
																<xsl:for-each select="ns0:volumeValue">
																	<VolumeValue>
																		<xsl:for-each select="@uid">
																			<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
																		</xsl:for-each>
																		<xsl:variable name="var3_volume" as="node()" select="ns0:volume"/>
																		<Volume>
																			<xsl:for-each select="$var3_volume/@status">
																				<xsl:attribute name="status" namespace="" select="fn:string(.)"/>
																			</xsl:for-each>
																			<xsl:attribute name="uom" namespace="" select="fn:string($var3_volume/@uom)"/>
																		</Volume>
																	</VolumeValue>
																</xsl:for-each>
															</BalanceDetail>
														</xsl:for-each>
														<xsl:for-each select="ns0:destination">
															<Destination>
																<xsl:for-each select="ns0:name">
																	<Name>
																		<xsl:sequence select="fn:string(.)"/>
																	</Name>
																</xsl:for-each>
																<xsl:for-each select="ns0:type">
																	<Type>
																		<xsl:sequence select="fn:string(.)"/>
																	</Type>
																</xsl:for-each>
																<xsl:for-each select="ns0:country">
																	<Country>
																		<xsl:sequence select="fn:string(.)"/>
																	</Country>
																</xsl:for-each>
															</Destination>
														</xsl:for-each>
													</BalanceSet>
												</xsl:for-each>
												<xsl:for-each select="ns0:componentContent">
													<ComponentContent>
														<xsl:for-each select="@uid">
															<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
														</xsl:for-each>
														<Kind>
															<xsl:sequence select="fn:string(ns0:kind)"/>
														</Kind>
														<xsl:for-each select="ns0:referenceKind">
															<ReferenceKind>
																<xsl:sequence select="fn:string(.)"/>
															</ReferenceKind>
														</xsl:for-each>
													</ComponentContent>
												</xsl:for-each>
												<xsl:for-each select="ns0:alert">
													<Alert>
														<xsl:for-each select="ns0:target">
															<Target>
																<xsl:sequence select="fn:string(.)"/>
															</Target>
														</xsl:for-each>
														<xsl:for-each select="ns0:level">
															<Level>
																<xsl:sequence select="fn:string(.)"/>
															</Level>
														</xsl:for-each>
														<xsl:for-each select="ns0:type">
															<Type>
																<xsl:sequence select="fn:string(.)"/>
															</Type>
														</xsl:for-each>
														<xsl:for-each select="ns0:description">
															<Description>
																<xsl:sequence select="fn:string(.)"/>
															</Description>
														</xsl:for-each>
													</Alert>
												</xsl:for-each>
											</Period>
										</xsl:for-each>
										<Properties>
											<xsl:for-each select="ns0:gor">
												<Gor>
													<xsl:call-template name="tbf:tbf4_VolumePerVolumeMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</Gor>
											</xsl:for-each>
											<xsl:for-each select="ns0:gorMTD">
												<GorMTD>
													<xsl:call-template name="tbf:tbf4_VolumePerVolumeMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</GorMTD>
											</xsl:for-each>
											<xsl:for-each select="ns0:gasLiquidRatio">
												<GasLiquidRatio>
													<xsl:call-template name="tbf:tbf4_VolumePerVolumeMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</GasLiquidRatio>
											</xsl:for-each>
											<xsl:for-each select="ns0:waterConcMass">
												<WaterConcMass>
													<xsl:call-template name="tbf:tbf5_MassPerMassMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</WaterConcMass>
											</xsl:for-each>
											<xsl:for-each select="ns0:waterConcVol">
												<WaterConcVol>
													<xsl:call-template name="tbf:tbf4_VolumePerVolumeMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</WaterConcVol>
											</xsl:for-each>
											<xsl:for-each select="ns0:atmosphere">
												<Atmosphere>
													<xsl:call-template name="tbf:tbf6_PressureMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</Atmosphere>
											</xsl:for-each>
											<xsl:for-each select="ns0:volume">
												<Volume>
													<xsl:for-each select="@status">
														<xsl:attribute name="status" namespace="" select="fn:string(.)"/>
													</xsl:for-each>
													<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
												</Volume>
											</xsl:for-each>
											<xsl:for-each select="ns0:volumeStd">
												<VolumeStd>
													<xsl:for-each select="@status">
														<xsl:attribute name="status" namespace="" select="fn:string(.)"/>
													</xsl:for-each>
													<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
												</VolumeStd>
											</xsl:for-each>
											<xsl:for-each select="ns0:flowRate">
												<FlowRate>
													<xsl:for-each select="@status">
														<xsl:attribute name="status" namespace="" select="fn:string(.)"/>
													</xsl:for-each>
													<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
												</FlowRate>
											</xsl:for-each>
											<xsl:for-each select="ns0:temp">
												<Temp>
													<xsl:call-template name="tbf:tbf7_ThermodynamicTemperatureMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</Temp>
											</xsl:for-each>
											<xsl:for-each select="ns0:pres">
												<Pres>
													<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
													<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
												</Pres>
											</xsl:for-each>
											<xsl:for-each select="ns0:absoluteMinPres">
												<AbsoluteMinPres>
													<xsl:call-template name="tbf:tbf6_PressureMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</AbsoluteMinPres>
											</xsl:for-each>
											<xsl:for-each select="ns0:mass">
												<Mass>
													<xsl:call-template name="tbf:tbf8_MassMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</Mass>
											</xsl:for-each>
											<xsl:for-each select="ns0:work">
												<Work>
													<xsl:call-template name="tbf:tbf9_EnergyMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</Work>
											</xsl:for-each>
											<xsl:for-each select="ns0:efficiency">
												<Efficiency>
													<xsl:call-template name="tbf:tbf4_VolumePerVolumeMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</Efficiency>
											</xsl:for-each>
											<xsl:for-each select="ns0:rvp">
												<Rvp>
													<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
													<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
												</Rvp>
											</xsl:for-each>
											<xsl:for-each select="ns0:tvp">
												<Tvp>
													<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
													<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
												</Tvp>
											</xsl:for-each>
											<xsl:for-each select="ns0:bsw">
												<Bsw>
													<xsl:call-template name="tbf:tbf4_VolumePerVolumeMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</Bsw>
											</xsl:for-each>
											<xsl:for-each select="ns0:bswPrevious">
												<BswPrevious>
													<xsl:call-template name="tbf:tbf4_VolumePerVolumeMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</BswPrevious>
											</xsl:for-each>
											<xsl:for-each select="ns0:density">
												<Density>
													<xsl:call-template name="tbf:tbf10_MassPerVolumeMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</Density>
											</xsl:for-each>
											<xsl:for-each select="ns0:densityFlowRate">
												<DensityFlowRate>
													<xsl:call-template name="tbf:tbf11_MassPerTimeMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</DensityFlowRate>
											</xsl:for-each>
											<xsl:for-each select="ns0:densityStd">
												<DensityStd>
													<xsl:call-template name="tbf:tbf10_MassPerVolumeMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</DensityStd>
											</xsl:for-each>
											<xsl:for-each select="ns0:concentration">
												<Concentration>
													<xsl:call-template name="tbf:tbf4_VolumePerVolumeMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</Concentration>
											</xsl:for-each>
											<xsl:for-each select="ns0:molecularWeight">
												<MolecularWeight>
													<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
												</MolecularWeight>
											</xsl:for-each>
											<xsl:for-each select="ns0:weightPercent">
												<WeightPercent>
													<xsl:call-template name="tbf:tbf5_MassPerMassMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</WeightPercent>
											</xsl:for-each>
											<xsl:for-each select="ns0:molePercent">
												<MolePercent>
													<xsl:call-template name="tbf:tbf12_AmountOfSubstancePerAmountOfSubstanceMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</MolePercent>
											</xsl:for-each>
											<xsl:for-each select="ns0:moleAmt">
												<MoleAmt>
													<xsl:call-template name="tbf:tbf13_AmountOfSubstanceMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</MoleAmt>
											</xsl:for-each>
											<xsl:for-each select="ns0:sg">
												<Sg>
													<xsl:call-template name="tbf:tbf14_DimensionlessMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</Sg>
											</xsl:for-each>
											<xsl:for-each select="ns0:hcDewpoint">
												<HcDewpoint>
													<xsl:call-template name="tbf:tbf7_ThermodynamicTemperatureMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</HcDewpoint>
											</xsl:for-each>
											<xsl:for-each select="ns0:waterDewpoint">
												<WaterDewpoint>
													<xsl:call-template name="tbf:tbf7_ThermodynamicTemperatureMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</WaterDewpoint>
											</xsl:for-each>
											<xsl:for-each select="ns0:wobbeIndex">
												<WobberIndex>
													<xsl:call-template name="tbf:tbf15_IsothermalCompressibilityMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</WobberIndex>
											</xsl:for-each>
											<xsl:for-each select="ns0:grossCalorificValueStd">
												<GrossCalorificValueStd>
													<xsl:call-template name="tbf:tbf16_EnergyPerVolumeMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</GrossCalorificValueStd>
											</xsl:for-each>
											<xsl:for-each select="ns0:rvpStabilizedCrude">
												<RvpStabilizedCrude>
													<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
													<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
												</RvpStabilizedCrude>
											</xsl:for-each>
											<xsl:for-each select="ns0:bswStabilizedCrude">
												<BswStabilizedCrude>
													<xsl:call-template name="tbf:tbf4_VolumePerVolumeMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</BswStabilizedCrude>
											</xsl:for-each>
											<xsl:for-each select="ns0:densityStabilizedCrude">
												<DensityStabilizedCrude>
													<xsl:call-template name="tbf:tbf10_MassPerVolumeMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</DensityStabilizedCrude>
											</xsl:for-each>
											<DensityValue>
												<Density>
													<xsl:sequence select="$var7_let"/>
												</Density>
											</DensityValue>
											<xsl:for-each select="ns0:volumeValue">
												<VolumeValue>
													<xsl:for-each select="@uid">
														<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
													</xsl:for-each>
													<xsl:variable name="var4_volume" as="node()" select="ns0:volume"/>
													<Volume>
														<xsl:for-each select="$var4_volume/@status">
															<xsl:attribute name="status" namespace="" select="fn:string(.)"/>
														</xsl:for-each>
														<xsl:attribute name="uom" namespace="" select="fn:string($var4_volume/@uom)"/>
													</Volume>
													<xsl:for-each select="ns0:grossCalorificValue">
														<EnergyValue>
															<xsl:call-template name="tbf:tbf16_EnergyPerVolumeMeasure">
																<xsl:with-param name="input" select="." as="node()"/>
															</xsl:call-template>
														</EnergyValue>
													</xsl:for-each>
													<StdPressTempChoice>
														<xsl:attribute name="xsi:type" namespace="http://www.w3.org/2001/XMLSchema-instance" select="xs:QName('StdTempPress')"/>
														<xsl:for-each select="ns0:standardTempPres">
															<StandardTempPres>
																<xsl:sequence select="fn:string(.)"/>
															</StandardTempPres>
														</xsl:for-each>
													</StdPressTempChoice>
													<StdPressTempChoice>
														<xsl:attribute name="xsi:type" namespace="http://www.w3.org/2001/XMLSchema-instance" select="xs:QName('TempPres')"/>
														<xsl:for-each select="ns0:temp">
															<temp>
																<xsl:call-template name="tbf:tbf7_ThermodynamicTemperatureMeasure">
																	<xsl:with-param name="input" select="." as="node()"/>
																</xsl:call-template>
															</temp>
														</xsl:for-each>
														<xsl:for-each select="ns0:pres">
															<pres>
																<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
																<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
															</pres>
														</xsl:for-each>
													</StdPressTempChoice>
												</VolumeValue>
											</xsl:for-each>
										</Properties>
									</Product>
								</xsl:for-each>
								<Properties>
									<xsl:for-each select="ns0:gor">
										<Gor>
											<xsl:call-template name="tbf:tbf4_VolumePerVolumeMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</Gor>
									</xsl:for-each>
									<xsl:for-each select="ns0:gorMTD">
										<GorMTD>
											<xsl:call-template name="tbf:tbf4_VolumePerVolumeMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</GorMTD>
									</xsl:for-each>
									<xsl:for-each select="ns0:gasLiquidRatio">
										<GasLiquidRatio>
											<xsl:call-template name="tbf:tbf4_VolumePerVolumeMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</GasLiquidRatio>
									</xsl:for-each>
									<xsl:for-each select="ns0:waterConcMass">
										<WaterConcMass>
											<xsl:call-template name="tbf:tbf5_MassPerMassMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</WaterConcMass>
									</xsl:for-each>
									<xsl:for-each select="ns0:waterConcVol">
										<WaterConcVol>
											<xsl:call-template name="tbf:tbf4_VolumePerVolumeMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</WaterConcVol>
									</xsl:for-each>
									<xsl:for-each select="ns0:atmosphere">
										<Atmosphere>
											<xsl:call-template name="tbf:tbf6_PressureMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</Atmosphere>
									</xsl:for-each>
									<xsl:for-each select="ns0:volume">
										<Volume>
											<xsl:for-each select="@status">
												<xsl:attribute name="status" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
										</Volume>
									</xsl:for-each>
									<xsl:for-each select="ns0:volumeStd">
										<VolumeStd>
											<xsl:for-each select="@status">
												<xsl:attribute name="status" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
										</VolumeStd>
									</xsl:for-each>
									<xsl:for-each select="ns0:flowRate">
										<FlowRate>
											<xsl:for-each select="@status">
												<xsl:attribute name="status" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
										</FlowRate>
									</xsl:for-each>
									<xsl:for-each select="ns0:temp">
										<Temp>
											<xsl:call-template name="tbf:tbf7_ThermodynamicTemperatureMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</Temp>
									</xsl:for-each>
									<xsl:for-each select="ns0:pres">
										<Pres>
											<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
											<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
										</Pres>
									</xsl:for-each>
									<xsl:for-each select="ns0:absoluteMinPres">
										<AbsoluteMinPres>
											<xsl:call-template name="tbf:tbf6_PressureMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</AbsoluteMinPres>
									</xsl:for-each>
									<xsl:for-each select="ns0:mass">
										<Mass>
											<xsl:call-template name="tbf:tbf8_MassMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</Mass>
									</xsl:for-each>
									<xsl:for-each select="ns0:work">
										<Work>
											<xsl:call-template name="tbf:tbf9_EnergyMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</Work>
									</xsl:for-each>
									<xsl:for-each select="ns0:efficiency">
										<Efficiency>
											<xsl:call-template name="tbf:tbf4_VolumePerVolumeMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</Efficiency>
									</xsl:for-each>
									<xsl:for-each select="ns0:rvp">
										<Rvp>
											<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
											<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
										</Rvp>
									</xsl:for-each>
									<xsl:for-each select="ns0:tvp">
										<Tvp>
											<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
											<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
										</Tvp>
									</xsl:for-each>
									<xsl:for-each select="ns0:bsw">
										<Bsw>
											<xsl:call-template name="tbf:tbf4_VolumePerVolumeMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</Bsw>
									</xsl:for-each>
									<xsl:for-each select="ns0:bswPrevious">
										<BswPrevious>
											<xsl:call-template name="tbf:tbf4_VolumePerVolumeMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</BswPrevious>
									</xsl:for-each>
									<xsl:for-each select="ns0:density">
										<Density>
											<xsl:call-template name="tbf:tbf10_MassPerVolumeMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</Density>
									</xsl:for-each>
									<xsl:for-each select="ns0:densityFlowRate">
										<DensityFlowRate>
											<xsl:call-template name="tbf:tbf11_MassPerTimeMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</DensityFlowRate>
									</xsl:for-each>
									<xsl:for-each select="ns0:densityStd">
										<DensityStd>
											<xsl:call-template name="tbf:tbf10_MassPerVolumeMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</DensityStd>
									</xsl:for-each>
									<xsl:for-each select="ns0:concentration">
										<Concentration>
											<xsl:call-template name="tbf:tbf4_VolumePerVolumeMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</Concentration>
									</xsl:for-each>
									<xsl:for-each select="ns0:molecularWeight">
										<MolecularWeight>
											<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
										</MolecularWeight>
									</xsl:for-each>
									<xsl:for-each select="ns0:weightPercent">
										<WeightPercent>
											<xsl:call-template name="tbf:tbf5_MassPerMassMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</WeightPercent>
									</xsl:for-each>
									<xsl:for-each select="ns0:molePercent">
										<MolePercent>
											<xsl:call-template name="tbf:tbf12_AmountOfSubstancePerAmountOfSubstanceMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</MolePercent>
									</xsl:for-each>
									<xsl:for-each select="ns0:moleAmt">
										<MoleAmt>
											<xsl:call-template name="tbf:tbf13_AmountOfSubstanceMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</MoleAmt>
									</xsl:for-each>
									<xsl:for-each select="ns0:sg">
										<Sg>
											<xsl:call-template name="tbf:tbf14_DimensionlessMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</Sg>
									</xsl:for-each>
									<xsl:for-each select="ns0:hcDewpoint">
										<HcDewpoint>
											<xsl:call-template name="tbf:tbf7_ThermodynamicTemperatureMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</HcDewpoint>
									</xsl:for-each>
									<xsl:for-each select="ns0:waterDewpoint">
										<WaterDewpoint>
											<xsl:call-template name="tbf:tbf7_ThermodynamicTemperatureMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</WaterDewpoint>
									</xsl:for-each>
									<xsl:for-each select="ns0:wobbeIndex">
										<WobberIndex>
											<xsl:call-template name="tbf:tbf15_IsothermalCompressibilityMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</WobberIndex>
									</xsl:for-each>
									<xsl:for-each select="ns0:grossCalorificValueStd">
										<GrossCalorificValueStd>
											<xsl:call-template name="tbf:tbf16_EnergyPerVolumeMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</GrossCalorificValueStd>
									</xsl:for-each>
									<xsl:for-each select="ns0:rvpStabilizedCrude">
										<RvpStabilizedCrude>
											<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
											<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
										</RvpStabilizedCrude>
									</xsl:for-each>
									<xsl:for-each select="ns0:bswStabilizedCrude">
										<BswStabilizedCrude>
											<xsl:call-template name="tbf:tbf4_VolumePerVolumeMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</BswStabilizedCrude>
									</xsl:for-each>
									<xsl:for-each select="ns0:densityStabilizedCrude">
										<DensityStabilizedCrude>
											<xsl:call-template name="tbf:tbf10_MassPerVolumeMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</DensityStabilizedCrude>
									</xsl:for-each>
									<DensityValue>
										<Density>
											<xsl:sequence select="$var7_let"/>
										</Density>
									</DensityValue>
									<xsl:for-each select="ns0:portDiff">
										<PortDiff>
											<xsl:for-each select="@uid">
												<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="ns0:presDiff">
												<PresDiff>
													<xsl:attribute name="uom" namespace="" select="fn:string(@uom)"/>
													<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
												</PresDiff>
											</xsl:for-each>
											<xsl:for-each select="ns0:tempDiff">
												<TempDiff>
													<xsl:call-template name="tbf:tbf7_ThermodynamicTemperatureMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</TempDiff>
											</xsl:for-each>
											<xsl:for-each select="ns0:chokeSize">
												<ChokeSize>
													<xsl:call-template name="tbf:tbf17_LengthMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</ChokeSize>
											</xsl:for-each>
											<xsl:for-each select="ns0:chokeRelative">
												<ChokeRelative>
													<xsl:call-template name="tbf:tbf18_LengthPerLengthMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</ChokeRelative>
											</xsl:for-each>
										</PortDiff>
									</xsl:for-each>
									<xsl:for-each select="ns0:flowRateValue">
										<FlowRateValue>
											<xsl:variable name="var5_flowRate" as="node()" select="ns0:flowRate"/>
											<FlowRate>
												<xsl:for-each select="$var5_flowRate/@status">
													<xsl:attribute name="status" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:attribute name="uom" namespace="" select="fn:string($var5_flowRate/@uom)"/>
											</FlowRate>
											<StdPressTempChoice>
												<xsl:attribute name="xsi:type" namespace="http://www.w3.org/2001/XMLSchema-instance" select="xs:QName('StdTempPress')"/>
												<xsl:for-each select="ns0:standardTempPres">
													<StandardTempPres>
														<xsl:sequence select="fn:string(.)"/>
													</StandardTempPres>
												</xsl:for-each>
											</StdPressTempChoice>
										</FlowRateValue>
									</xsl:for-each>
									<xsl:for-each select="ns0:volumeValue">
										<VolumeValue>
											<xsl:for-each select="@uid">
												<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:variable name="var6_volume" as="node()" select="ns0:volume"/>
											<Volume>
												<xsl:for-each select="$var6_volume/@status">
													<xsl:attribute name="status" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:attribute name="uom" namespace="" select="fn:string($var6_volume/@uom)"/>
											</Volume>
										</VolumeValue>
									</xsl:for-each>
								</Properties>
							</Flow>
						</xsl:for-each>
					</Facility>
				</xsl:for-each>
				<xsl:for-each select="ns0:businessUnit">
					<BusinessUnit>
						<xsl:for-each select="@uid">
							<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<Kind>
							<xsl:sequence select="()"/>
						</Kind>
						<xsl:for-each select="ns0:name">
							<Name>
								<xsl:sequence select="fn:string(.)"/>
							</Name>
						</xsl:for-each>
						<xsl:for-each select="ns0:description">
							<Description>
								<xsl:sequence select="fn:string(.)"/>
							</Description>
						</xsl:for-each>
						<xsl:for-each select="ns0:subUnit">
							<SubUnit>
								<xsl:for-each select="@uid">
									<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<Kind>
									<xsl:sequence select="fn:string(ns0:kind)"/>
								</Kind>
							</SubUnit>
						</xsl:for-each>
					</BusinessUnit>
				</xsl:for-each>
			</xsl:for-each>
		</ProductVolume>
	</xsl:template>
</xsl:stylesheet>
