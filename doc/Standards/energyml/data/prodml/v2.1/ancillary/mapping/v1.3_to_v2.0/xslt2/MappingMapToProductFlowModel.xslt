<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2017sp2

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tbf="http://www.altova.com/MapForce/UDF/tbf" xmlns:ns0="http://www.prodml.org/schemas/1series" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" exclude-result-prefixes="tbf ns0 xs fn">
	<xsl:template name="tbf:tbf1_CustomData">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/node()">
			<xsl:choose>
				<xsl:when test="fn:boolean(self::*)">
					<xsl:if test="fn:boolean(self::*)">
						<xsl:element name="{fn:string(fn:node-name(.))}" namespace="{fn:namespace-uri-from-QName(fn:node-name(.))}">
							<xsl:sequence select="(./@node(), ./node())"/>
						</xsl:element>
					</xsl:if>
				</xsl:when>
				<xsl:otherwise>
					<xsl:if test="fn:not(fn:boolean(self::text()))">
						<xsl:sequence select="."/>
					</xsl:if>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:for-each>
	</xsl:template>
	<xsl:template name="tbf:tbf2_TimeMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf3_LengthPerLengthMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:output method="xml" encoding="UTF-8" byte-order-mark="no" indent="yes"/>
	<xsl:template match="/">
		<xsl:variable name="var1_productFlowModels" as="node()?" select="ns0:productFlowModels"/>
		<ProductFlowModel xmlns="http://www.energistics.org/energyml/data/prodmlv2" xmlns:eml="http://www.energistics.org/energyml/data/commonv2" xmlns:gco="http://www.isotc211.org/2005/gco" xmlns:gmd="http://www.isotc211.org/2005/gmd" xmlns:gsr="http://www.isotc211.org/2005/gsr" xmlns:gts="http://www.isotc211.org/2005/gts" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xlink="http://www.w3.org/1999/xlink">
			<xsl:attribute name="xsi:schemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance" select="'http://www.energistics.org/energyml/data/prodmlv2 file:///C:/Energistics2/energyml/data/prodml/v2.0/xsd_schemas/ProductFlowModel.xsd'"/>
			<xsl:for-each select="$var1_productFlowModels/ns0:productFlowModel">
				<xsl:attribute name="schemaVersion" namespace="" select="'2.0'"/>
				<xsl:attribute name="uuid" namespace="" select="'00000000-0000-0000-0000-000000000000'"/>
			</xsl:for-each>
			<xsl:for-each select="$var1_productFlowModels/ns0:productFlowModel">
				<eml:Citation>
					<eml:Title>
						<xsl:sequence select="fn:string(ns0:name)"/>
					</eml:Title>
					<eml:Originator>131_input</eml:Originator>
					<eml:Creation>
						<xsl:sequence select="xs:string(fn:current-dateTime())"/>
					</eml:Creation>
					<eml:Format>Mapforce</eml:Format>
				</eml:Citation>
				<xsl:for-each select="ns0:customData">
					<eml:CustomData>
						<xsl:call-template name="tbf:tbf1_CustomData">
							<xsl:with-param name="input" select="." as="node()"/>
						</xsl:call-template>
					</eml:CustomData>
				</xsl:for-each>
				<xsl:for-each select="ns0:installation">
					<Installation>
						<xsl:for-each select="@kind">
							<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="@siteKind">
							<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="@namingSystem">
							<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="@uidRef">
							<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:sequence select="fn:string(.)"/>
					</Installation>
				</xsl:for-each>
				<xsl:for-each select="ns0:contextFacility">
					<ContextFacility>
						<xsl:for-each select="@kind">
							<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="@siteKind">
							<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="@namingSystem">
							<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="@uidRef">
							<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:sequence select="fn:string(.)"/>
					</ContextFacility>
				</xsl:for-each>
				<xsl:for-each select="ns0:dTimStart">
					<DTimStart>
						<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
					</DTimStart>
				</xsl:for-each>
				<xsl:for-each select="ns0:dTimEnd">
					<DTimEnd>
						<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
					</DTimEnd>
				</xsl:for-each>
				<xsl:for-each select="ns0:existenceTime">
					<ExistenceTime>
						<xsl:for-each select="@endpoint">
							<xsl:attribute name="endpoint" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
					</ExistenceTime>
				</xsl:for-each>
				<xsl:for-each select="ns0:dTimMin">
					<DTimMin>
						<xsl:for-each select="@endpoint">
							<xsl:attribute name="endpoint" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
					</DTimMin>
				</xsl:for-each>
				<xsl:for-each select="ns0:dTimMax">
					<DTimMax>
						<xsl:for-each select="@endpoint">
							<xsl:attribute name="endpoint" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
					</DTimMax>
				</xsl:for-each>
				<xsl:for-each select="ns0:comment">
					<Comment>
						<xsl:sequence select="fn:string(.)"/>
					</Comment>
				</xsl:for-each>
				<xsl:for-each select="ns0:externalConnect">
					<ExternalConnect>
						<xsl:for-each select="@uid">
							<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="ns0:connectedInstallation">
							<ConnectedInstallation>
								<xsl:for-each select="@kind">
									<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@siteKind">
									<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@namingSystem">
									<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="@uidRef">
									<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:sequence select="fn:string(.)"/>
							</ConnectedInstallation>
						</xsl:for-each>
					</ExternalConnect>
				</xsl:for-each>
				<xsl:for-each select="ns0:network">
					<Network>
						<xsl:for-each select="@uid">
							<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<Name>
							<xsl:sequence select="fn:string(ns0:name)"/>
						</Name>
						<xsl:for-each select="ns0:planName">
							<PlanName>
								<xsl:sequence select="fn:string(.)"/>
							</PlanName>
						</xsl:for-each>
						<xsl:for-each select="ns0:comment">
							<Comment>
								<xsl:sequence select="fn:string(.)"/>
							</Comment>
						</xsl:for-each>
						<xsl:for-each select="ns0:port">
							<Port>
								<xsl:for-each select="@uid">
									<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<Name>
									<xsl:sequence select="fn:string(ns0:name)"/>
								</Name>
								<Direction>
									<xsl:sequence select="fn:string(ns0:direction)"/>
								</Direction>
								<xsl:for-each select="ns0:exposed">
									<Exposed>
										<xsl:sequence select="xs:string(xs:boolean(fn:string(.)))"/>
									</Exposed>
								</xsl:for-each>
								<ConnectedNode>
									<xsl:sequence select="fn:string(ns0:connectedNode)"/>
								</ConnectedNode>
								<xsl:for-each select="ns0:comment">
									<Comment>
										<xsl:sequence select="fn:string(.)"/>
									</Comment>
								</xsl:for-each>
							</Port>
						</xsl:for-each>
						<xsl:for-each select="ns0:plan">
							<Plan>
								<xsl:for-each select="@uid">
									<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<Name>
									<xsl:sequence select="fn:string(ns0:name)"/>
								</Name>
								<DTimStart>
									<xsl:sequence select="xs:string(xs:dateTime(fn:string(ns0:dTimStart)))"/>
								</DTimStart>
								<xsl:for-each select="ns0:purpose">
									<Purpose>
										<xsl:sequence select="fn:string(.)"/>
									</Purpose>
								</xsl:for-each>
								<xsl:for-each select="ns0:changeLog">
									<ChangeLog>
										<xsl:for-each select="@uid">
											<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<Name>
											<xsl:sequence select="fn:string(ns0:name)"/>
										</Name>
										<DTim>
											<xsl:sequence select="xs:string(xs:dateTime(fn:string(ns0:dTim)))"/>
										</DTim>
										<xsl:for-each select="ns0:reason">
											<Reason>
												<xsl:sequence select="fn:string(.)"/>
											</Reason>
										</xsl:for-each>
									</ChangeLog>
								</xsl:for-each>
							</Plan>
						</xsl:for-each>
						<xsl:for-each select="ns0:changeLog">
							<ChangeLog>
								<xsl:for-each select="@uid">
									<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<Name>
									<xsl:sequence select="fn:string(ns0:name)"/>
								</Name>
								<DTim>
									<xsl:sequence select="xs:string(xs:dateTime(fn:string(ns0:dTim)))"/>
								</DTim>
								<xsl:for-each select="ns0:reason">
									<Reason>
										<xsl:sequence select="fn:string(.)"/>
									</Reason>
								</xsl:for-each>
							</ChangeLog>
						</xsl:for-each>
						<xsl:for-each select="ns0:unit">
							<Unit>
								<xsl:for-each select="@uid">
									<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
								</xsl:for-each>
								<xsl:for-each select="ns0:name">
									<Name>
										<xsl:sequence select="fn:string(.)"/>
									</Name>
								</xsl:for-each>
								<xsl:for-each select="ns0:planName">
									<PlanName>
										<xsl:sequence select="fn:string(.)"/>
									</PlanName>
								</xsl:for-each>
								<xsl:for-each select="ns0:facility">
									<Facility>
										<xsl:for-each select="@kind">
											<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="@siteKind">
											<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="@namingSystem">
											<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="@uidRef">
											<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:sequence select="fn:string(.)"/>
									</Facility>
								</xsl:for-each>
								<xsl:for-each select="ns0:facilityParent1">
									<FacilityParent1>
										<xsl:for-each select="@kind">
											<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="@siteKind">
											<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="@namingSystem">
											<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="@uidRef">
											<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:sequence select="fn:string(.)"/>
									</FacilityParent1>
								</xsl:for-each>
								<xsl:for-each select="ns0:facilityParent2">
									<FacilityParent2>
										<xsl:for-each select="@kind">
											<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="@siteKind">
											<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="@namingSystem">
											<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="@uidRef">
											<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:sequence select="fn:string(.)"/>
									</FacilityParent2>
								</xsl:for-each>
								<xsl:for-each select="ns0:facilityAlias">
									<FacilityAlias>
										<xsl:sequence select="fn:string(.)"/>
									</FacilityAlias>
								</xsl:for-each>
								<xsl:for-each select="ns0:contextFacility">
									<ContextFacility>
										<xsl:for-each select="@kind">
											<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="@siteKind">
											<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="@namingSystem">
											<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="@uidRef">
											<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:sequence select="fn:string(.)"/>
									</ContextFacility>
								</xsl:for-each>
								<xsl:for-each select="ns0:comment">
									<Comment>
										<xsl:sequence select="fn:string(.)"/>
									</Comment>
								</xsl:for-each>
								<xsl:for-each select="ns0:expectedProperty">
									<ExpectedProperty>
										<xsl:for-each select="@uid">
											<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<Property>
											<xsl:sequence select="fn:string(ns0:property)"/>
										</Property>
										<xsl:for-each select="ns0:childFacilityIdentifier">
											<ChildFacilityIdentifier>
												<xsl:sequence select="xs:string(xs:anyURI(fn:string(.)))"/>
											</ChildFacilityIdentifier>
										</xsl:for-each>
										<xsl:for-each select="ns0:tagAlias">
											<TagAlias>
												<xsl:sequence select="fn:string(.)"/>
											</TagAlias>
										</xsl:for-each>
										<xsl:for-each select="ns0:deadband">
											<Deadband>
												<xsl:for-each select="@uom">
													<xsl:attribute name="uom" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
											</Deadband>
										</xsl:for-each>
										<xsl:for-each select="ns0:maximumFrequency">
											<MaximumFrequency>
												<xsl:call-template name="tbf:tbf2_TimeMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</MaximumFrequency>
										</xsl:for-each>
										<xsl:for-each select="ns0:comment">
											<Comment>
												<xsl:sequence select="fn:string(.)"/>
											</Comment>
										</xsl:for-each>
										<xsl:for-each select="ns0:expectedFlowProduct">
											<ExpectedFlowProduct>
												<xsl:for-each select="@uid">
													<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<Flow>
													<xsl:sequence select="fn:string(ns0:flow)"/>
												</Flow>
												<xsl:for-each select="ns0:product">
													<Product>
														<xsl:sequence select="fn:string(.)"/>
													</Product>
												</xsl:for-each>
												<xsl:for-each select="ns0:qualifier">
													<Qualifier>
														<xsl:sequence select="fn:string(.)"/>
													</Qualifier>
												</xsl:for-each>
											</ExpectedFlowProduct>
										</xsl:for-each>
									</ExpectedProperty>
								</xsl:for-each>
								<xsl:for-each select="ns0:port">
									<Port>
										<xsl:for-each select="@uid">
											<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<Direction>
											<xsl:sequence select="fn:string(ns0:direction)"/>
										</Direction>
										<Name>
											<xsl:sequence select="fn:string(ns0:name)"/>
										</Name>
										<xsl:for-each select="ns0:planName">
											<PlanName>
												<xsl:sequence select="fn:string(.)"/>
											</PlanName>
										</xsl:for-each>
										<xsl:for-each select="ns0:facility">
											<Facility>
												<xsl:for-each select="@kind">
													<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:for-each select="@siteKind">
													<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:for-each select="@namingSystem">
													<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:for-each select="@uidRef">
													<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<xsl:sequence select="fn:string(.)"/>
											</Facility>
										</xsl:for-each>
										<xsl:for-each select="ns0:facilityAlias">
											<FacilityAlias>
												<xsl:sequence select="fn:string(.)"/>
											</FacilityAlias>
										</xsl:for-each>
										<xsl:for-each select="ns0:exposed">
											<Exposed>
												<xsl:sequence select="xs:string(xs:boolean(fn:string(.)))"/>
											</Exposed>
										</xsl:for-each>
										<xsl:for-each select="ns0:comment">
											<Comment>
												<xsl:sequence select="fn:string(.)"/>
											</Comment>
										</xsl:for-each>
										<xsl:for-each select="ns0:expectedFlowProperty">
											<ExpectedFlowProperty>
												<xsl:for-each select="@uid">
													<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<Property>
													<xsl:sequence select="fn:string(ns0:property)"/>
												</Property>
												<xsl:for-each select="ns0:tagAlias">
													<TagAlias>
														<xsl:sequence select="fn:string(.)"/>
													</TagAlias>
												</xsl:for-each>
												<xsl:for-each select="ns0:deadband">
													<Deadband>
														<xsl:for-each select="@uom">
															<xsl:attribute name="uom" namespace="" select="fn:string(.)"/>
														</xsl:for-each>
													</Deadband>
												</xsl:for-each>
												<xsl:for-each select="ns0:maximumFrequency">
													<MaximumFrequency>
														<xsl:call-template name="tbf:tbf2_TimeMeasure">
															<xsl:with-param name="input" select="." as="node()"/>
														</xsl:call-template>
													</MaximumFrequency>
												</xsl:for-each>
												<xsl:for-each select="ns0:comment">
													<Comment>
														<xsl:sequence select="fn:string(.)"/>
													</Comment>
												</xsl:for-each>
												<xsl:for-each select="ns0:expectedFlowProduct">
													<ExpectedFlowProduct>
														<xsl:for-each select="@uid">
															<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
														</xsl:for-each>
														<Flow>
															<xsl:sequence select="fn:string(ns0:flow)"/>
														</Flow>
														<xsl:for-each select="ns0:product">
															<Product>
																<xsl:sequence select="fn:string(.)"/>
															</Product>
														</xsl:for-each>
														<xsl:for-each select="ns0:qualifier">
															<Qualifier>
																<xsl:sequence select="fn:string(.)"/>
															</Qualifier>
														</xsl:for-each>
													</ExpectedFlowProduct>
												</xsl:for-each>
											</ExpectedFlowProperty>
										</xsl:for-each>
										<xsl:for-each select="ns0:connectedNode">
											<ConnectedNode>
												<xsl:for-each select="@uid">
													<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<Node>
													<xsl:sequence select="fn:string(ns0:node)"/>
												</Node>
												<xsl:for-each select="ns0:planName">
													<PlanName>
														<xsl:sequence select="fn:string(.)"/>
													</PlanName>
												</xsl:for-each>
												<xsl:for-each select="ns0:dTimStart">
													<DTimStart>
														<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
													</DTimStart>
												</xsl:for-each>
												<xsl:for-each select="ns0:dTimEnd">
													<DTimEnd>
														<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
													</DTimEnd>
												</xsl:for-each>
												<xsl:for-each select="ns0:comment">
													<Comment>
														<xsl:sequence select="fn:string(.)"/>
													</Comment>
												</xsl:for-each>
											</ConnectedNode>
										</xsl:for-each>
										<xsl:for-each select="ns0:expectedFlowProduct">
											<ExpectedFlowProduct>
												<xsl:for-each select="@uid">
													<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
												</xsl:for-each>
												<Flow>
													<xsl:sequence select="fn:string(ns0:flow)"/>
												</Flow>
												<xsl:for-each select="ns0:product">
													<Product>
														<xsl:sequence select="fn:string(.)"/>
													</Product>
												</xsl:for-each>
												<xsl:for-each select="ns0:qualifier">
													<Qualifier>
														<xsl:sequence select="fn:string(.)"/>
													</Qualifier>
												</xsl:for-each>
											</ExpectedFlowProduct>
										</xsl:for-each>
									</Port>
								</xsl:for-each>
								<xsl:for-each select="ns0:relativeCoordinate">
									<RelativeCoordinate>
										<xsl:for-each select="ns0:x">
											<X>
												<xsl:call-template name="tbf:tbf3_LengthPerLengthMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</X>
										</xsl:for-each>
										<xsl:for-each select="ns0:y">
											<Y>
												<xsl:call-template name="tbf:tbf3_LengthPerLengthMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</Y>
										</xsl:for-each>
										<xsl:for-each select="ns0:z">
											<Z>
												<xsl:call-template name="tbf:tbf3_LengthPerLengthMeasure">
													<xsl:with-param name="input" select="." as="node()"/>
												</xsl:call-template>
											</Z>
										</xsl:for-each>
									</RelativeCoordinate>
								</xsl:for-each>
							</Unit>
						</xsl:for-each>
					</Network>
				</xsl:for-each>
			</xsl:for-each>
		</ProductFlowModel>
	</xsl:template>
</xsl:stylesheet>
