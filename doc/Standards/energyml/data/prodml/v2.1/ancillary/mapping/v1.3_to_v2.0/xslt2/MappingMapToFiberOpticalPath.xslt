<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2017sp2

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tbf="http://www.altova.com/MapForce/UDF/tbf" xmlns:ns0="http://www.prodml.org/schemas/1series" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" exclude-result-prefixes="tbf ns0 xs fn">
	<xsl:template name="tbf:tbf1_DimensionlessMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf2_LengthMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf3_IndexedObject">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@index">
			<xsl:attribute name="index" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:for-each select="$input/@name">
			<xsl:attribute name="name" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:for-each select="$input/@description">
			<xsl:attribute name="description" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf4_LogarithmicPowerRatioPerLengthMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf5_FrequencyMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf6_StringMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf7_TimeMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:template name="tbf:tbf8_LengthPerLengthMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:output method="xml" encoding="UTF-8" byte-order-mark="no" indent="yes"/>
	<xsl:template match="/">
		<xsl:variable name="var6_fiberOpticalPaths" as="node()?" select="ns0:fiberOpticalPaths"/>
		<FiberOpticalPath xmlns="http://www.energistics.org/energyml/data/prodmlv2" xmlns:eml="http://www.energistics.org/energyml/data/commonv2" xmlns:gco="http://www.isotc211.org/2005/gco" xmlns:gmd="http://www.isotc211.org/2005/gmd" xmlns:gsr="http://www.isotc211.org/2005/gsr" xmlns:gts="http://www.isotc211.org/2005/gts" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xlink="http://www.w3.org/1999/xlink">
			<xsl:attribute name="xsi:schemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance" select="'http://www.energistics.org/energyml/data/prodmlv2 file:///C:/Energistics2/energyml/data/prodml/v2.0/xsd_schemas/FiberOpticalPath.xsd'"/>
			<xsl:attribute name="schemaVersion" namespace="" select="'2.0'"/>
			<xsl:attribute name="uuid" namespace="" select="'00000000-0000-0000-0000-000000000000'"/>
			<eml:Citation>
				<xsl:for-each select="$var6_fiberOpticalPaths/ns0:fiberOpticalPath">
					<eml:Title>
						<xsl:sequence select="fn:string(ns0:name)"/>
					</eml:Title>
				</xsl:for-each>
				<eml:Originator>131_input</eml:Originator>
				<eml:Creation>
					<xsl:sequence select="xs:string(fn:current-dateTime())"/>
				</eml:Creation>
				<eml:Format>Mapforce</eml:Format>
			</eml:Citation>
			<xsl:for-each select="$var6_fiberOpticalPaths/ns0:fiberOpticalPath">
				<xsl:variable name="var2_inventory" as="node()" select="ns0:inventory"/>
				<Inventory>
					<xsl:for-each select="$var2_inventory/ns0:connection">
						<Connection>
							<xsl:for-each select="@uid">
								<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<Name>
								<xsl:sequence select="fn:string(ns0:name)"/>
							</Name>
							<xsl:for-each select="ns0:manufacturer">
								<Manufacturer>
									<xsl:sequence select="fn:string(.)"/>
								</Manufacturer>
							</xsl:for-each>
							<xsl:for-each select="ns0:manufacturingDate">
								<ManufacturingDate>
									<xsl:sequence select="xs:string(xs:date(fn:string(.)))"/>
								</ManufacturingDate>
							</xsl:for-each>
							<xsl:for-each select="ns0:type">
								<Type>
									<xsl:sequence select="fn:string(.)"/>
								</Type>
							</xsl:for-each>
							<xsl:for-each select="ns0:supplyDate">
								<SupplyDate>
									<xsl:sequence select="xs:string(xs:date(fn:string(.)))"/>
								</SupplyDate>
							</xsl:for-each>
							<xsl:for-each select="ns0:supplierModelNumber">
								<SupplierModelNumber>
									<xsl:sequence select="fn:string(.)"/>
								</SupplierModelNumber>
							</xsl:for-each>
							<xsl:for-each select="ns0:softwareVersion">
								<SoftwareVersion>
									<xsl:sequence select="fn:string(.)"/>
								</SoftwareVersion>
							</xsl:for-each>
							<xsl:for-each select="ns0:comment">
								<Comment>
									<xsl:sequence select="fn:string(.)"/>
								</Comment>
							</xsl:for-each>
							<xsl:for-each select="ns0:supplier">
								<Supplier>
									<Name>
										<xsl:sequence select="fn:string(ns0:name)"/>
									</Name>
									<xsl:for-each select="ns0:role">
										<Role>
											<xsl:sequence select="fn:string(.)"/>
										</Role>
									</xsl:for-each>
									<xsl:for-each select="ns0:alias">
										<Alias>
											<xsl:sequence select="fn:string(.)"/>
										</Alias>
									</xsl:for-each>
									<xsl:for-each select="ns0:address">
										<Address>
											<xsl:for-each select="@uid">
												<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@kind">
												<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="ns0:name">
												<Name>
													<xsl:sequence select="fn:string(.)"/>
												</Name>
											</xsl:for-each>
											<xsl:for-each select="ns0:street">
												<Street>
													<xsl:sequence select="fn:string(.)"/>
												</Street>
											</xsl:for-each>
											<City>
												<xsl:sequence select="fn:string(ns0:city)"/>
											</City>
											<xsl:for-each select="ns0:country">
												<Country>
													<xsl:sequence select="fn:string(.)"/>
												</Country>
											</xsl:for-each>
											<xsl:for-each select="ns0:county">
												<County>
													<xsl:sequence select="fn:string(.)"/>
												</County>
											</xsl:for-each>
											<xsl:for-each select="ns0:postalCode">
												<PostalCode>
													<xsl:sequence select="fn:string(.)"/>
												</PostalCode>
											</xsl:for-each>
											<xsl:for-each select="ns0:state">
												<State>
													<xsl:sequence select="fn:string(.)"/>
												</State>
											</xsl:for-each>
											<xsl:for-each select="ns0:province">
												<Province>
													<xsl:sequence select="fn:string(.)"/>
												</Province>
											</xsl:for-each>
										</Address>
									</xsl:for-each>
									<xsl:for-each select="ns0:phoneNumber">
										<PhoneNumber>
											<xsl:attribute name="type" namespace="" select="fn:string(@type)"/>
											<xsl:for-each select="@qualifier">
												<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@extension">
												<xsl:attribute name="extension" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:sequence select="fn:string(.)"/>
										</PhoneNumber>
									</xsl:for-each>
									<xsl:for-each select="ns0:email">
										<Email>
											<xsl:for-each select="@qualifier">
												<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
										</Email>
									</xsl:for-each>
									<xsl:for-each select="ns0:associatedWith">
										<AssociatedWith>
											<xsl:sequence select="fn:string(.)"/>
										</AssociatedWith>
									</xsl:for-each>
									<xsl:for-each select="ns0:contact">
										<Contact>
											<xsl:sequence select="fn:string(.)"/>
										</Contact>
									</xsl:for-each>
									<xsl:for-each select="ns0:personnelCount">
										<PersonnelCount>
											<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
										</PersonnelCount>
									</xsl:for-each>
									<xsl:for-each select="ns0:personName">
										<PersonName>
											<xsl:for-each select="ns0:prefix">
												<Prefix>
													<xsl:sequence select="fn:string(.)"/>
												</Prefix>
											</xsl:for-each>
											<First>
												<xsl:sequence select="fn:string(ns0:first)"/>
											</First>
											<xsl:for-each select="ns0:middle">
												<Middle>
													<xsl:sequence select="fn:string(.)"/>
												</Middle>
											</xsl:for-each>
											<Last>
												<xsl:sequence select="fn:string(ns0:last)"/>
											</Last>
											<xsl:for-each select="ns0:suffix">
												<Suffix>
													<xsl:sequence select="fn:string(.)"/>
												</Suffix>
											</xsl:for-each>
										</PersonName>
									</xsl:for-each>
								</Supplier>
							</xsl:for-each>
							<xsl:for-each select="ns0:reflectance">
								<Reflectance>
									<xsl:call-template name="tbf:tbf1_DimensionlessMeasure">
										<xsl:with-param name="input" select="." as="node()"/>
									</xsl:call-template>
								</Reflectance>
							</xsl:for-each>
							<xsl:for-each select="ns0:loss">
								<Loss>
									<xsl:call-template name="tbf:tbf1_DimensionlessMeasure">
										<xsl:with-param name="input" select="." as="node()"/>
									</xsl:call-template>
								</Loss>
							</xsl:for-each>
							<xsl:for-each select="ns0:reasonForDecommissioning">
								<ReasonForDecommissioning>
									<xsl:sequence select="fn:string(.)"/>
								</ReasonForDecommissioning>
							</xsl:for-each>
							<xsl:for-each select="ns0:connectorType">
								<ConnectorType>
									<xsl:sequence select="fn:string(.)"/>
								</ConnectorType>
							</xsl:for-each>
							<xsl:for-each select="ns0:endType">
								<EndType>
									<xsl:sequence select="fn:string(.)"/>
								</EndType>
							</xsl:for-each>
						</Connection>
					</xsl:for-each>
					<xsl:for-each select="$var2_inventory/ns0:turnaround">
						<Turnaround>
							<xsl:for-each select="@uid">
								<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<Name>
								<xsl:sequence select="fn:string(ns0:name)"/>
							</Name>
							<xsl:for-each select="ns0:manufacturer">
								<Manufacturer>
									<xsl:sequence select="fn:string(.)"/>
								</Manufacturer>
							</xsl:for-each>
							<xsl:for-each select="ns0:manufacturingDate">
								<ManufacturingDate>
									<xsl:sequence select="xs:string(xs:date(fn:string(.)))"/>
								</ManufacturingDate>
							</xsl:for-each>
							<xsl:for-each select="ns0:type">
								<Type>
									<xsl:sequence select="fn:string(.)"/>
								</Type>
							</xsl:for-each>
							<xsl:for-each select="ns0:supplyDate">
								<SupplyDate>
									<xsl:sequence select="xs:string(xs:date(fn:string(.)))"/>
								</SupplyDate>
							</xsl:for-each>
							<xsl:for-each select="ns0:supplierModelNumber">
								<SupplierModelNumber>
									<xsl:sequence select="fn:string(.)"/>
								</SupplierModelNumber>
							</xsl:for-each>
							<xsl:for-each select="ns0:softwareVersion">
								<SoftwareVersion>
									<xsl:sequence select="fn:string(.)"/>
								</SoftwareVersion>
							</xsl:for-each>
							<xsl:for-each select="ns0:comment">
								<Comment>
									<xsl:sequence select="fn:string(.)"/>
								</Comment>
							</xsl:for-each>
							<xsl:for-each select="ns0:supplier">
								<Supplier>
									<Name>
										<xsl:sequence select="fn:string(ns0:name)"/>
									</Name>
									<xsl:for-each select="ns0:role">
										<Role>
											<xsl:sequence select="fn:string(.)"/>
										</Role>
									</xsl:for-each>
									<xsl:for-each select="ns0:alias">
										<Alias>
											<xsl:sequence select="fn:string(.)"/>
										</Alias>
									</xsl:for-each>
									<xsl:for-each select="ns0:address">
										<Address>
											<xsl:for-each select="@uid">
												<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@kind">
												<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="ns0:name">
												<Name>
													<xsl:sequence select="fn:string(.)"/>
												</Name>
											</xsl:for-each>
											<xsl:for-each select="ns0:street">
												<Street>
													<xsl:sequence select="fn:string(.)"/>
												</Street>
											</xsl:for-each>
											<City>
												<xsl:sequence select="fn:string(ns0:city)"/>
											</City>
											<xsl:for-each select="ns0:country">
												<Country>
													<xsl:sequence select="fn:string(.)"/>
												</Country>
											</xsl:for-each>
											<xsl:for-each select="ns0:county">
												<County>
													<xsl:sequence select="fn:string(.)"/>
												</County>
											</xsl:for-each>
											<xsl:for-each select="ns0:postalCode">
												<PostalCode>
													<xsl:sequence select="fn:string(.)"/>
												</PostalCode>
											</xsl:for-each>
											<xsl:for-each select="ns0:state">
												<State>
													<xsl:sequence select="fn:string(.)"/>
												</State>
											</xsl:for-each>
											<xsl:for-each select="ns0:province">
												<Province>
													<xsl:sequence select="fn:string(.)"/>
												</Province>
											</xsl:for-each>
										</Address>
									</xsl:for-each>
									<xsl:for-each select="ns0:phoneNumber">
										<PhoneNumber>
											<xsl:attribute name="type" namespace="" select="fn:string(@type)"/>
											<xsl:for-each select="@qualifier">
												<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@extension">
												<xsl:attribute name="extension" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:sequence select="fn:string(.)"/>
										</PhoneNumber>
									</xsl:for-each>
									<xsl:for-each select="ns0:email">
										<Email>
											<xsl:for-each select="@qualifier">
												<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
										</Email>
									</xsl:for-each>
									<xsl:for-each select="ns0:associatedWith">
										<AssociatedWith>
											<xsl:sequence select="fn:string(.)"/>
										</AssociatedWith>
									</xsl:for-each>
									<xsl:for-each select="ns0:contact">
										<Contact>
											<xsl:sequence select="fn:string(.)"/>
										</Contact>
									</xsl:for-each>
									<xsl:for-each select="ns0:personnelCount">
										<PersonnelCount>
											<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
										</PersonnelCount>
									</xsl:for-each>
									<xsl:for-each select="ns0:personName">
										<PersonName>
											<xsl:for-each select="ns0:prefix">
												<Prefix>
													<xsl:sequence select="fn:string(.)"/>
												</Prefix>
											</xsl:for-each>
											<First>
												<xsl:sequence select="fn:string(ns0:first)"/>
											</First>
											<xsl:for-each select="ns0:middle">
												<Middle>
													<xsl:sequence select="fn:string(.)"/>
												</Middle>
											</xsl:for-each>
											<Last>
												<xsl:sequence select="fn:string(ns0:last)"/>
											</Last>
											<xsl:for-each select="ns0:suffix">
												<Suffix>
													<xsl:sequence select="fn:string(.)"/>
												</Suffix>
											</xsl:for-each>
										</PersonName>
									</xsl:for-each>
								</Supplier>
							</xsl:for-each>
							<xsl:for-each select="ns0:reflectance">
								<Reflectance>
									<xsl:call-template name="tbf:tbf1_DimensionlessMeasure">
										<xsl:with-param name="input" select="." as="node()"/>
									</xsl:call-template>
								</Reflectance>
							</xsl:for-each>
							<xsl:for-each select="ns0:loss">
								<Loss>
									<xsl:call-template name="tbf:tbf1_DimensionlessMeasure">
										<xsl:with-param name="input" select="." as="node()"/>
									</xsl:call-template>
								</Loss>
							</xsl:for-each>
							<xsl:for-each select="ns0:reasonForDecommissioning">
								<ReasonForDecommissioning>
									<xsl:sequence select="fn:string(.)"/>
								</ReasonForDecommissioning>
							</xsl:for-each>
						</Turnaround>
					</xsl:for-each>
					<xsl:for-each select="$var2_inventory/ns0:segment">
						<Segment>
							<xsl:for-each select="@uid">
								<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<Name>
								<xsl:sequence select="fn:string(ns0:name)"/>
							</Name>
							<xsl:for-each select="ns0:manufacturer">
								<Manufacturer>
									<xsl:sequence select="fn:string(.)"/>
								</Manufacturer>
							</xsl:for-each>
							<xsl:for-each select="ns0:manufacturingDate">
								<ManufacturingDate>
									<xsl:sequence select="xs:string(xs:date(fn:string(.)))"/>
								</ManufacturingDate>
							</xsl:for-each>
							<xsl:for-each select="ns0:type">
								<Type>
									<xsl:sequence select="fn:string(.)"/>
								</Type>
							</xsl:for-each>
							<xsl:for-each select="ns0:supplyDate">
								<SupplyDate>
									<xsl:sequence select="xs:string(xs:date(fn:string(.)))"/>
								</SupplyDate>
							</xsl:for-each>
							<xsl:for-each select="ns0:supplierModelNumber">
								<SupplierModelNumber>
									<xsl:sequence select="fn:string(.)"/>
								</SupplierModelNumber>
							</xsl:for-each>
							<xsl:for-each select="ns0:softwareVersion">
								<SoftwareVersion>
									<xsl:sequence select="fn:string(.)"/>
								</SoftwareVersion>
							</xsl:for-each>
							<xsl:for-each select="ns0:comment">
								<Comment>
									<xsl:sequence select="fn:string(.)"/>
								</Comment>
							</xsl:for-each>
							<xsl:for-each select="ns0:supplier">
								<Supplier>
									<Name>
										<xsl:sequence select="fn:string(ns0:name)"/>
									</Name>
									<xsl:for-each select="ns0:role">
										<Role>
											<xsl:sequence select="fn:string(.)"/>
										</Role>
									</xsl:for-each>
									<xsl:for-each select="ns0:alias">
										<Alias>
											<xsl:sequence select="fn:string(.)"/>
										</Alias>
									</xsl:for-each>
									<xsl:for-each select="ns0:address">
										<Address>
											<xsl:for-each select="@uid">
												<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@kind">
												<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="ns0:name">
												<Name>
													<xsl:sequence select="fn:string(.)"/>
												</Name>
											</xsl:for-each>
											<xsl:for-each select="ns0:street">
												<Street>
													<xsl:sequence select="fn:string(.)"/>
												</Street>
											</xsl:for-each>
											<City>
												<xsl:sequence select="fn:string(ns0:city)"/>
											</City>
											<xsl:for-each select="ns0:country">
												<Country>
													<xsl:sequence select="fn:string(.)"/>
												</Country>
											</xsl:for-each>
											<xsl:for-each select="ns0:county">
												<County>
													<xsl:sequence select="fn:string(.)"/>
												</County>
											</xsl:for-each>
											<xsl:for-each select="ns0:postalCode">
												<PostalCode>
													<xsl:sequence select="fn:string(.)"/>
												</PostalCode>
											</xsl:for-each>
											<xsl:for-each select="ns0:state">
												<State>
													<xsl:sequence select="fn:string(.)"/>
												</State>
											</xsl:for-each>
											<xsl:for-each select="ns0:province">
												<Province>
													<xsl:sequence select="fn:string(.)"/>
												</Province>
											</xsl:for-each>
										</Address>
									</xsl:for-each>
									<xsl:for-each select="ns0:phoneNumber">
										<PhoneNumber>
											<xsl:attribute name="type" namespace="" select="fn:string(@type)"/>
											<xsl:for-each select="@qualifier">
												<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@extension">
												<xsl:attribute name="extension" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:sequence select="fn:string(.)"/>
										</PhoneNumber>
									</xsl:for-each>
									<xsl:for-each select="ns0:email">
										<Email>
											<xsl:for-each select="@qualifier">
												<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
										</Email>
									</xsl:for-each>
									<xsl:for-each select="ns0:associatedWith">
										<AssociatedWith>
											<xsl:sequence select="fn:string(.)"/>
										</AssociatedWith>
									</xsl:for-each>
									<xsl:for-each select="ns0:contact">
										<Contact>
											<xsl:sequence select="fn:string(.)"/>
										</Contact>
									</xsl:for-each>
									<xsl:for-each select="ns0:personnelCount">
										<PersonnelCount>
											<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
										</PersonnelCount>
									</xsl:for-each>
									<xsl:for-each select="ns0:personName">
										<PersonName>
											<xsl:for-each select="ns0:prefix">
												<Prefix>
													<xsl:sequence select="fn:string(.)"/>
												</Prefix>
											</xsl:for-each>
											<First>
												<xsl:sequence select="fn:string(ns0:first)"/>
											</First>
											<xsl:for-each select="ns0:middle">
												<Middle>
													<xsl:sequence select="fn:string(.)"/>
												</Middle>
											</xsl:for-each>
											<Last>
												<xsl:sequence select="fn:string(ns0:last)"/>
											</Last>
											<xsl:for-each select="ns0:suffix">
												<Suffix>
													<xsl:sequence select="fn:string(.)"/>
												</Suffix>
											</xsl:for-each>
										</PersonName>
									</xsl:for-each>
								</Supplier>
							</xsl:for-each>
							<xsl:for-each select="ns0:reflectance">
								<Reflectance>
									<xsl:call-template name="tbf:tbf1_DimensionlessMeasure">
										<xsl:with-param name="input" select="." as="node()"/>
									</xsl:call-template>
								</Reflectance>
							</xsl:for-each>
							<xsl:for-each select="ns0:loss">
								<Loss>
									<xsl:call-template name="tbf:tbf1_DimensionlessMeasure">
										<xsl:with-param name="input" select="." as="node()"/>
									</xsl:call-template>
								</Loss>
							</xsl:for-each>
							<xsl:for-each select="ns0:reasonForDecommissioning">
								<ReasonForDecommissioning>
									<xsl:sequence select="fn:string(.)"/>
								</ReasonForDecommissioning>
							</xsl:for-each>
							<FiberLength>
								<xsl:call-template name="tbf:tbf2_LengthMeasure">
									<xsl:with-param name="input" select="ns0:fiberLength" as="node()"/>
								</xsl:call-template>
							</FiberLength>
							<xsl:for-each select="ns0:overStuffing">
								<OverStuffing>
									<xsl:call-template name="tbf:tbf2_LengthMeasure">
										<xsl:with-param name="input" select="." as="node()"/>
									</xsl:call-template>
								</OverStuffing>
							</xsl:for-each>
							<xsl:for-each select="ns0:coreDiameter">
								<CoreDiameter>
									<xsl:call-template name="tbf:tbf2_LengthMeasure">
										<xsl:with-param name="input" select="." as="node()"/>
									</xsl:call-template>
								</CoreDiameter>
							</xsl:for-each>
							<xsl:for-each select="ns0:claddedDiameter">
								<CladdedDiameter>
									<xsl:call-template name="tbf:tbf2_LengthMeasure">
										<xsl:with-param name="input" select="." as="node()"/>
									</xsl:call-template>
								</CladdedDiameter>
							</xsl:for-each>
							<xsl:for-each select="ns0:outsideDiameter">
								<OutsideDiameter>
									<xsl:call-template name="tbf:tbf2_LengthMeasure">
										<xsl:with-param name="input" select="." as="node()"/>
									</xsl:call-template>
								</OutsideDiameter>
							</xsl:for-each>
							<xsl:for-each select="ns0:mode">
								<Mode>
									<xsl:sequence select="fn:string(.)"/>
								</Mode>
							</xsl:for-each>
							<xsl:for-each select="ns0:coating">
								<Coating>
									<xsl:sequence select="fn:string(.)"/>
								</Coating>
							</xsl:for-each>
							<xsl:for-each select="ns0:jacket">
								<Jacket>
									<xsl:sequence select="fn:string(.)"/>
								</Jacket>
							</xsl:for-each>
							<xsl:for-each select="ns0:coreType">
								<CoreType>
									<xsl:sequence select="fn:string(.)"/>
								</CoreType>
							</xsl:for-each>
							<xsl:for-each select="ns0:parameter">
								<Parameter>
									<xsl:call-template name="tbf:tbf3_IndexedObject">
										<xsl:with-param name="input" select="." as="node()"/>
									</xsl:call-template>
								</Parameter>
							</xsl:for-each>
							<xsl:for-each select="ns0:spoolNumberTag">
								<SpoolNumberTag>
									<xsl:sequence select="fn:string(.)"/>
								</SpoolNumberTag>
							</xsl:for-each>
							<xsl:for-each select="ns0:spoolLength">
								<SpoolLength>
									<xsl:call-template name="tbf:tbf2_LengthMeasure">
										<xsl:with-param name="input" select="." as="node()"/>
									</xsl:call-template>
								</SpoolLength>
							</xsl:for-each>
							<xsl:for-each select="ns0:cableType">
								<CableType>
									<xsl:sequence select="fn:string(.)"/>
								</CableType>
							</xsl:for-each>
							<xsl:for-each select="ns0:refractiveIndex">
								<RefractiveIndex>
									<xsl:for-each select="@uid">
										<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<Value>
										<xsl:call-template name="tbf:tbf4_LogarithmicPowerRatioPerLengthMeasure">
											<xsl:with-param name="input" select="ns0:value" as="node()"/>
										</xsl:call-template>
									</Value>
									<xsl:for-each select="ns0:frequency">
										<Frequency>
											<xsl:call-template name="tbf:tbf5_FrequencyMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</Frequency>
									</xsl:for-each>
									<xsl:for-each select="ns0:wavelength">
										<Wavelength>
											<xsl:call-template name="tbf:tbf2_LengthMeasure">
												<xsl:with-param name="input" select="." as="node()"/>
											</xsl:call-template>
										</Wavelength>
									</xsl:for-each>
								</RefractiveIndex>
							</xsl:for-each>
							<xsl:for-each select="ns0:fiberConveyance">
								<FiberConveyance>
									<xsl:for-each select="ns0:fiberControlLine">
										<Cable>
											<xsl:attribute name="xsi:type" namespace="http://www.w3.org/2001/XMLSchema-instance" select="xs:QName('FiberControlLine')"/>
											<Size>
												<xsl:sequence select="fn:string(ns0:size)"/>
											</Size>
											<Material>
												<xsl:sequence select="fn:string(ns0:material)"/>
											</Material>
											<EncapsulationType>
												<xsl:sequence select="fn:string(ns0:encapsulationType)"/>
											</EncapsulationType>
											<EncapsulationSize>
												<xsl:sequence select="fn:string(ns0:encapsulationSize)"/>
											</EncapsulationSize>
											<xsl:for-each select="ns0:comment">
												<Comment>
													<xsl:sequence select="fn:string(.)"/>
												</Comment>
											</xsl:for-each>
											<xsl:for-each select="ns0:pumpActivity">
												<PumpActivity>
													<xsl:for-each select="ns0:name">
														<Name>
															<xsl:sequence select="fn:string(.)"/>
														</Name>
													</xsl:for-each>
													<xsl:for-each select="ns0:installedFiber">
														<InstalledFiber>
															<xsl:sequence select="fn:string(.)"/>
														</InstalledFiber>
													</xsl:for-each>
													<xsl:for-each select="ns0:pumpingDate">
														<PumpingDate>
															<xsl:sequence select="xs:string(xs:date(fn:string(.)))"/>
														</PumpingDate>
													</xsl:for-each>
													<xsl:for-each select="ns0:engineerName">
														<EngineerName>
															<xsl:sequence select="fn:string(.)"/>
														</EngineerName>
													</xsl:for-each>
													<xsl:for-each select="ns0:serviceCompany">
														<ServiceCompany>
															<xsl:sequence select="fn:string(.)"/>
														</ServiceCompany>
													</xsl:for-each>
													<xsl:for-each select="ns0:pumpFluidType">
														<PumpFluidType>
															<xsl:sequence select="fn:string(.)"/>
														</PumpFluidType>
													</xsl:for-each>
													<xsl:for-each select="ns0:controlLineFluid">
														<ControlLineFluid>
															<xsl:sequence select="fn:string(.)"/>
														</ControlLineFluid>
													</xsl:for-each>
													<xsl:for-each select="ns0:pumpDirection">
														<PumpDirection>
															<xsl:sequence select="fn:string(.)"/>
														</PumpDirection>
													</xsl:for-each>
													<xsl:for-each select="ns0:fiberEndSeal">
														<FiberEndSeal>
															<xsl:sequence select="fn:string(.)"/>
														</FiberEndSeal>
													</xsl:for-each>
													<xsl:for-each select="ns0:cableMeterType">
														<CableMeterType>
															<xsl:sequence select="fn:string(.)"/>
														</CableMeterType>
													</xsl:for-each>
													<xsl:for-each select="ns0:cableMeterSerialNumber">
														<CableMeterSerialNumber>
															<xsl:sequence select="fn:string(.)"/>
														</CableMeterSerialNumber>
													</xsl:for-each>
													<xsl:for-each select="ns0:cableMeterCalibrationDate">
														<CableMeterCalibrationDate>
															<xsl:sequence select="xs:string(xs:date(fn:string(.)))"/>
														</CableMeterCalibrationDate>
													</xsl:for-each>
													<xsl:for-each select="ns0:excessFiberRecovered">
														<ExcessFiberRecovered>
															<xsl:call-template name="tbf:tbf2_LengthMeasure">
																<xsl:with-param name="input" select="." as="node()"/>
															</xsl:call-template>
														</ExcessFiberRecovered>
													</xsl:for-each>
													<xsl:for-each select="ns0:comment">
														<Comment>
															<xsl:sequence select="fn:string(.)"/>
														</Comment>
													</xsl:for-each>
													<xsl:for-each select="ns0:extensionNameValue">
														<ExtensionNameValue>
															<eml:Name>
																<xsl:sequence select="fn:string(ns0:name)"/>
															</eml:Name>
															<eml:Value>
																<xsl:call-template name="tbf:tbf6_StringMeasure">
																	<xsl:with-param name="input" select="ns0:value" as="node()"/>
																</xsl:call-template>
															</eml:Value>
															<xsl:for-each select="ns0:measureClass">
																<eml:MeasureClass>
																	<xsl:sequence select="fn:string(.)"/>
																</eml:MeasureClass>
															</xsl:for-each>
															<xsl:for-each select="ns0:dTim">
																<eml:DTim>
																	<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
																</eml:DTim>
															</xsl:for-each>
															<xsl:for-each select="ns0:index">
																<eml:Index>
																	<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
																</eml:Index>
															</xsl:for-each>
															<xsl:for-each select="ns0:description">
																<eml:Description>
																	<xsl:sequence select="fn:string(.)"/>
																</eml:Description>
															</xsl:for-each>
														</ExtensionNameValue>
													</xsl:for-each>
												</PumpActivity>
											</xsl:for-each>
										</Cable>
									</xsl:for-each>
									<xsl:for-each select="ns0:intervention">
										<Cable>
											<xsl:attribute name="xsi:type" namespace="http://www.w3.org/2001/XMLSchema-instance" select="xs:QName('InterventionConveyance')"/>
											<InterventionConveyanceType>
												<xsl:sequence select="fn:string(ns0:interventionConveyanceType)"/>
											</InterventionConveyanceType>
											<xsl:for-each select="ns0:comment">
												<Comment>
													<xsl:sequence select="fn:string(.)"/>
												</Comment>
											</xsl:for-each>
										</Cable>
									</xsl:for-each>
									<xsl:for-each select="ns0:permanent">
										<Cable>
											<xsl:attribute name="xsi:type" namespace="http://www.w3.org/2001/XMLSchema-instance" select="xs:QName('PermanentCable')"/>
											<PermanentCableInstallationType>
												<xsl:sequence select="fn:string(ns0:permanentCableInstallationType)"/>
											</PermanentCableInstallationType>
											<xsl:for-each select="ns0:comment">
												<Comment>
													<xsl:sequence select="fn:string(.)"/>
												</Comment>
											</xsl:for-each>
										</Cable>
									</xsl:for-each>
								</FiberConveyance>
							</xsl:for-each>
							<xsl:for-each select="ns0:oneWayAttenuation">
								<OneWayAttenuation>
									<xsl:for-each select="@uid">
										<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<Value>
										<xsl:call-template name="tbf:tbf4_LogarithmicPowerRatioPerLengthMeasure">
											<xsl:with-param name="input" select="ns0:value" as="node()"/>
										</xsl:call-template>
									</Value>
								</OneWayAttenuation>
							</xsl:for-each>
						</Segment>
					</xsl:for-each>
					<xsl:variable name="var1_terminator" as="node()" select="$var2_inventory/ns0:terminator"/>
					<Terminator>
						<xsl:for-each select="$var1_terminator/@uid">
							<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<Name>
							<xsl:sequence select="fn:string($var1_terminator/ns0:name)"/>
						</Name>
						<xsl:for-each select="$var1_terminator/ns0:manufacturer">
							<Manufacturer>
								<xsl:sequence select="fn:string(.)"/>
							</Manufacturer>
						</xsl:for-each>
						<xsl:for-each select="$var1_terminator/ns0:manufacturingDate">
							<ManufacturingDate>
								<xsl:sequence select="xs:string(xs:date(fn:string(.)))"/>
							</ManufacturingDate>
						</xsl:for-each>
						<xsl:for-each select="$var1_terminator/ns0:type">
							<Type>
								<xsl:sequence select="fn:string(.)"/>
							</Type>
						</xsl:for-each>
						<xsl:for-each select="$var1_terminator/ns0:supplyDate">
							<SupplyDate>
								<xsl:sequence select="xs:string(xs:date(fn:string(.)))"/>
							</SupplyDate>
						</xsl:for-each>
						<xsl:for-each select="$var1_terminator/ns0:supplierModelNumber">
							<SupplierModelNumber>
								<xsl:sequence select="fn:string(.)"/>
							</SupplierModelNumber>
						</xsl:for-each>
						<xsl:for-each select="$var1_terminator/ns0:softwareVersion">
							<SoftwareVersion>
								<xsl:sequence select="fn:string(.)"/>
							</SoftwareVersion>
						</xsl:for-each>
						<xsl:for-each select="$var1_terminator/ns0:comment">
							<Comment>
								<xsl:sequence select="fn:string(.)"/>
							</Comment>
						</xsl:for-each>
						<xsl:for-each select="$var1_terminator/ns0:supplier">
							<Supplier>
								<Name>
									<xsl:sequence select="fn:string(ns0:name)"/>
								</Name>
								<xsl:for-each select="ns0:role">
									<Role>
										<xsl:sequence select="fn:string(.)"/>
									</Role>
								</xsl:for-each>
								<xsl:for-each select="ns0:alias">
									<Alias>
										<xsl:sequence select="fn:string(.)"/>
									</Alias>
								</xsl:for-each>
								<xsl:for-each select="ns0:address">
									<Address>
										<xsl:for-each select="@uid">
											<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="@kind">
											<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="ns0:name">
											<Name>
												<xsl:sequence select="fn:string(.)"/>
											</Name>
										</xsl:for-each>
										<xsl:for-each select="ns0:street">
											<Street>
												<xsl:sequence select="fn:string(.)"/>
											</Street>
										</xsl:for-each>
										<City>
											<xsl:sequence select="fn:string(ns0:city)"/>
										</City>
										<xsl:for-each select="ns0:country">
											<Country>
												<xsl:sequence select="fn:string(.)"/>
											</Country>
										</xsl:for-each>
										<xsl:for-each select="ns0:county">
											<County>
												<xsl:sequence select="fn:string(.)"/>
											</County>
										</xsl:for-each>
										<xsl:for-each select="ns0:postalCode">
											<PostalCode>
												<xsl:sequence select="fn:string(.)"/>
											</PostalCode>
										</xsl:for-each>
										<xsl:for-each select="ns0:state">
											<State>
												<xsl:sequence select="fn:string(.)"/>
											</State>
										</xsl:for-each>
										<xsl:for-each select="ns0:province">
											<Province>
												<xsl:sequence select="fn:string(.)"/>
											</Province>
										</xsl:for-each>
									</Address>
								</xsl:for-each>
								<xsl:for-each select="ns0:phoneNumber">
									<PhoneNumber>
										<xsl:attribute name="type" namespace="" select="fn:string(@type)"/>
										<xsl:for-each select="@qualifier">
											<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:for-each select="@extension">
											<xsl:attribute name="extension" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
										<xsl:sequence select="fn:string(.)"/>
									</PhoneNumber>
								</xsl:for-each>
								<xsl:for-each select="ns0:email">
									<Email>
										<xsl:for-each select="@qualifier">
											<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
										</xsl:for-each>
									</Email>
								</xsl:for-each>
								<xsl:for-each select="ns0:associatedWith">
									<AssociatedWith>
										<xsl:sequence select="fn:string(.)"/>
									</AssociatedWith>
								</xsl:for-each>
								<xsl:for-each select="ns0:contact">
									<Contact>
										<xsl:sequence select="fn:string(.)"/>
									</Contact>
								</xsl:for-each>
								<xsl:for-each select="ns0:personnelCount">
									<PersonnelCount>
										<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
									</PersonnelCount>
								</xsl:for-each>
								<xsl:for-each select="ns0:personName">
									<PersonName>
										<xsl:for-each select="ns0:prefix">
											<Prefix>
												<xsl:sequence select="fn:string(.)"/>
											</Prefix>
										</xsl:for-each>
										<First>
											<xsl:sequence select="fn:string(ns0:first)"/>
										</First>
										<xsl:for-each select="ns0:middle">
											<Middle>
												<xsl:sequence select="fn:string(.)"/>
											</Middle>
										</xsl:for-each>
										<Last>
											<xsl:sequence select="fn:string(ns0:last)"/>
										</Last>
										<xsl:for-each select="ns0:suffix">
											<Suffix>
												<xsl:sequence select="fn:string(.)"/>
											</Suffix>
										</xsl:for-each>
									</PersonName>
								</xsl:for-each>
							</Supplier>
						</xsl:for-each>
						<xsl:for-each select="$var1_terminator/ns0:reflectance">
							<Reflectance>
								<xsl:call-template name="tbf:tbf1_DimensionlessMeasure">
									<xsl:with-param name="input" select="." as="node()"/>
								</xsl:call-template>
							</Reflectance>
						</xsl:for-each>
						<xsl:for-each select="$var1_terminator/ns0:loss">
							<Loss>
								<xsl:call-template name="tbf:tbf1_DimensionlessMeasure">
									<xsl:with-param name="input" select="." as="node()"/>
								</xsl:call-template>
							</Loss>
						</xsl:for-each>
						<xsl:for-each select="$var1_terminator/ns0:reasonForDecommissioning">
							<ReasonForDecommissioning>
								<xsl:sequence select="fn:string(.)"/>
							</ReasonForDecommissioning>
						</xsl:for-each>
						<TerminationType>
							<xsl:sequence select="fn:string($var1_terminator/ns0:terminationType)"/>
						</TerminationType>
					</Terminator>
					<xsl:for-each select="$var2_inventory/ns0:splice">
						<Splice>
							<xsl:for-each select="@uid">
								<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<Name>
								<xsl:sequence select="fn:string(ns0:name)"/>
							</Name>
							<xsl:for-each select="ns0:manufacturer">
								<Manufacturer>
									<xsl:sequence select="fn:string(.)"/>
								</Manufacturer>
							</xsl:for-each>
							<xsl:for-each select="ns0:manufacturingDate">
								<ManufacturingDate>
									<xsl:sequence select="xs:string(xs:date(fn:string(.)))"/>
								</ManufacturingDate>
							</xsl:for-each>
							<xsl:for-each select="ns0:type">
								<Type>
									<xsl:sequence select="fn:string(.)"/>
								</Type>
							</xsl:for-each>
							<xsl:for-each select="ns0:supplyDate">
								<SupplyDate>
									<xsl:sequence select="xs:string(xs:date(fn:string(.)))"/>
								</SupplyDate>
							</xsl:for-each>
							<xsl:for-each select="ns0:supplierModelNumber">
								<SupplierModelNumber>
									<xsl:sequence select="fn:string(.)"/>
								</SupplierModelNumber>
							</xsl:for-each>
							<xsl:for-each select="ns0:softwareVersion">
								<SoftwareVersion>
									<xsl:sequence select="fn:string(.)"/>
								</SoftwareVersion>
							</xsl:for-each>
							<xsl:for-each select="ns0:comment">
								<Comment>
									<xsl:sequence select="fn:string(.)"/>
								</Comment>
							</xsl:for-each>
							<xsl:for-each select="ns0:supplier">
								<Supplier>
									<Name>
										<xsl:sequence select="fn:string(ns0:name)"/>
									</Name>
									<xsl:for-each select="ns0:role">
										<Role>
											<xsl:sequence select="fn:string(.)"/>
										</Role>
									</xsl:for-each>
									<xsl:for-each select="ns0:alias">
										<Alias>
											<xsl:sequence select="fn:string(.)"/>
										</Alias>
									</xsl:for-each>
									<xsl:for-each select="ns0:address">
										<Address>
											<xsl:for-each select="@uid">
												<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@kind">
												<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="ns0:name">
												<Name>
													<xsl:sequence select="fn:string(.)"/>
												</Name>
											</xsl:for-each>
											<xsl:for-each select="ns0:street">
												<Street>
													<xsl:sequence select="fn:string(.)"/>
												</Street>
											</xsl:for-each>
											<City>
												<xsl:sequence select="fn:string(ns0:city)"/>
											</City>
											<xsl:for-each select="ns0:country">
												<Country>
													<xsl:sequence select="fn:string(.)"/>
												</Country>
											</xsl:for-each>
											<xsl:for-each select="ns0:county">
												<County>
													<xsl:sequence select="fn:string(.)"/>
												</County>
											</xsl:for-each>
											<xsl:for-each select="ns0:postalCode">
												<PostalCode>
													<xsl:sequence select="fn:string(.)"/>
												</PostalCode>
											</xsl:for-each>
											<xsl:for-each select="ns0:state">
												<State>
													<xsl:sequence select="fn:string(.)"/>
												</State>
											</xsl:for-each>
											<xsl:for-each select="ns0:province">
												<Province>
													<xsl:sequence select="fn:string(.)"/>
												</Province>
											</xsl:for-each>
										</Address>
									</xsl:for-each>
									<xsl:for-each select="ns0:phoneNumber">
										<PhoneNumber>
											<xsl:attribute name="type" namespace="" select="fn:string(@type)"/>
											<xsl:for-each select="@qualifier">
												<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@extension">
												<xsl:attribute name="extension" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:sequence select="fn:string(.)"/>
										</PhoneNumber>
									</xsl:for-each>
									<xsl:for-each select="ns0:email">
										<Email>
											<xsl:for-each select="@qualifier">
												<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
										</Email>
									</xsl:for-each>
									<xsl:for-each select="ns0:associatedWith">
										<AssociatedWith>
											<xsl:sequence select="fn:string(.)"/>
										</AssociatedWith>
									</xsl:for-each>
									<xsl:for-each select="ns0:contact">
										<Contact>
											<xsl:sequence select="fn:string(.)"/>
										</Contact>
									</xsl:for-each>
									<xsl:for-each select="ns0:personnelCount">
										<PersonnelCount>
											<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
										</PersonnelCount>
									</xsl:for-each>
									<xsl:for-each select="ns0:personName">
										<PersonName>
											<xsl:for-each select="ns0:prefix">
												<Prefix>
													<xsl:sequence select="fn:string(.)"/>
												</Prefix>
											</xsl:for-each>
											<First>
												<xsl:sequence select="fn:string(ns0:first)"/>
											</First>
											<xsl:for-each select="ns0:middle">
												<Middle>
													<xsl:sequence select="fn:string(.)"/>
												</Middle>
											</xsl:for-each>
											<Last>
												<xsl:sequence select="fn:string(ns0:last)"/>
											</Last>
											<xsl:for-each select="ns0:suffix">
												<Suffix>
													<xsl:sequence select="fn:string(.)"/>
												</Suffix>
											</xsl:for-each>
										</PersonName>
									</xsl:for-each>
								</Supplier>
							</xsl:for-each>
							<xsl:for-each select="ns0:reflectance">
								<Reflectance>
									<xsl:call-template name="tbf:tbf1_DimensionlessMeasure">
										<xsl:with-param name="input" select="." as="node()"/>
									</xsl:call-template>
								</Reflectance>
							</xsl:for-each>
							<xsl:for-each select="ns0:loss">
								<Loss>
									<xsl:call-template name="tbf:tbf1_DimensionlessMeasure">
										<xsl:with-param name="input" select="." as="node()"/>
									</xsl:call-template>
								</Loss>
							</xsl:for-each>
							<xsl:for-each select="ns0:reasonForDecommissioning">
								<ReasonForDecommissioning>
									<xsl:sequence select="fn:string(.)"/>
								</ReasonForDecommissioning>
							</xsl:for-each>
							<xsl:for-each select="ns0:strippingType">
								<StrippingType>
									<xsl:sequence select="fn:string(.)"/>
								</StrippingType>
							</xsl:for-each>
							<xsl:for-each select="ns0:protectorType">
								<ProtectorType>
									<xsl:sequence select="fn:string(.)"/>
								</ProtectorType>
							</xsl:for-each>
							<FiberSpliceType>
								<xsl:sequence select="fn:string(ns0:fiberSpliceType)"/>
							</FiberSpliceType>
							<xsl:for-each select="ns0:pressureRating">
								<PressureRating>
									<xsl:sequence select="fn:string(.)"/>
								</PressureRating>
							</xsl:for-each>
							<xsl:for-each select="ns0:bendAngle">
								<BendAngle>
									<xsl:sequence select="fn:string(.)"/>
								</BendAngle>
							</xsl:for-each>
						</Splice>
					</xsl:for-each>
				</Inventory>
			</xsl:for-each>
			<xsl:for-each select="$var6_fiberOpticalPaths/ns0:fiberOpticalPath/ns0:opticalPathNetwork">
				<xsl:variable name="var3_contextFacility" as="node()*" select="ns0:contextFacility"/>
				<OpticalPathNetwork>
					<xsl:for-each select="ns0:installation">
						<Installation>
							<xsl:for-each select="@kind">
								<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:for-each select="@siteKind">
								<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:for-each select="@namingSystem">
								<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:for-each select="@uidRef">
								<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:sequence select="fn:string(.)"/>
						</Installation>
					</xsl:for-each>
					<ContextFacility>
						<xsl:for-each select="$var3_contextFacility/@kind">
							<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="$var3_contextFacility/@siteKind">
							<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="$var3_contextFacility/@namingSystem">
							<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:for-each select="$var3_contextFacility/@uidRef">
							<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
						</xsl:for-each>
						<xsl:sequence select="'unknown'"/>
					</ContextFacility>
					<xsl:for-each select="ns0:dTimStart">
						<DTimStart>
							<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
						</DTimStart>
					</xsl:for-each>
					<xsl:for-each select="ns0:existenceTime">
						<ExistenceTime>
							<xsl:for-each select="@endpoint">
								<xsl:attribute name="endpoint" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
						</ExistenceTime>
					</xsl:for-each>
					<xsl:for-each select="ns0:dTimMin">
						<DTimMin>
							<xsl:for-each select="@endpoint">
								<xsl:attribute name="endpoint" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
						</DTimMin>
					</xsl:for-each>
					<xsl:for-each select="ns0:dTimMax">
						<DTimMax>
							<xsl:for-each select="@endpoint">
								<xsl:attribute name="endpoint" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
						</DTimMax>
					</xsl:for-each>
					<xsl:for-each select="ns0:comment">
						<Comment>
							<xsl:sequence select="fn:string(.)"/>
						</Comment>
					</xsl:for-each>
					<xsl:for-each select="ns0:externalConnect">
						<ExternalConnect>
							<xsl:for-each select="@uid">
								<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:for-each select="ns0:connectedInstallation">
								<ConnectedInstallation>
									<xsl:for-each select="@kind">
										<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<xsl:for-each select="@siteKind">
										<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<xsl:for-each select="@namingSystem">
										<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<xsl:for-each select="@uidRef">
										<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<xsl:sequence select="fn:string(.)"/>
								</ConnectedInstallation>
							</xsl:for-each>
						</ExternalConnect>
					</xsl:for-each>
					<xsl:for-each select="ns0:network">
						<Network>
							<xsl:for-each select="@uid">
								<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<Name>
								<xsl:sequence select="fn:string(ns0:name)"/>
							</Name>
							<xsl:for-each select="ns0:planName">
								<PlanName>
									<xsl:sequence select="fn:string(.)"/>
								</PlanName>
							</xsl:for-each>
							<xsl:for-each select="ns0:comment">
								<Comment>
									<xsl:sequence select="fn:string(.)"/>
								</Comment>
							</xsl:for-each>
							<xsl:for-each select="ns0:port">
								<Port>
									<xsl:for-each select="@uid">
										<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<Name>
										<xsl:sequence select="fn:string(ns0:name)"/>
									</Name>
									<Direction>
										<xsl:sequence select="fn:string(ns0:direction)"/>
									</Direction>
									<xsl:for-each select="ns0:exposed">
										<Exposed>
											<xsl:sequence select="xs:string(xs:boolean(fn:string(.)))"/>
										</Exposed>
									</xsl:for-each>
									<ConnectedNode>
										<xsl:sequence select="fn:string(ns0:connectedNode)"/>
									</ConnectedNode>
									<xsl:for-each select="ns0:comment">
										<Comment>
											<xsl:sequence select="fn:string(.)"/>
										</Comment>
									</xsl:for-each>
								</Port>
							</xsl:for-each>
							<xsl:for-each select="ns0:plan">
								<Plan>
									<xsl:for-each select="@uid">
										<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<Name>
										<xsl:sequence select="fn:string(ns0:name)"/>
									</Name>
									<DTimStart>
										<xsl:sequence select="xs:string(xs:dateTime(fn:string(ns0:dTimStart)))"/>
									</DTimStart>
									<xsl:for-each select="ns0:purpose">
										<Purpose>
											<xsl:sequence select="fn:string(.)"/>
										</Purpose>
									</xsl:for-each>
									<xsl:for-each select="ns0:changeLog">
										<ChangeLog>
											<xsl:for-each select="@uid">
												<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<Name>
												<xsl:sequence select="fn:string(ns0:name)"/>
											</Name>
											<DTim>
												<xsl:sequence select="xs:string(xs:dateTime(fn:string(ns0:dTim)))"/>
											</DTim>
											<xsl:for-each select="ns0:reason">
												<Reason>
													<xsl:sequence select="fn:string(.)"/>
												</Reason>
											</xsl:for-each>
										</ChangeLog>
									</xsl:for-each>
								</Plan>
							</xsl:for-each>
							<xsl:for-each select="ns0:changeLog">
								<ChangeLog>
									<xsl:for-each select="@uid">
										<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<Name>
										<xsl:sequence select="fn:string(ns0:name)"/>
									</Name>
									<DTim>
										<xsl:sequence select="xs:string(xs:dateTime(fn:string(ns0:dTim)))"/>
									</DTim>
									<xsl:for-each select="ns0:reason">
										<Reason>
											<xsl:sequence select="fn:string(.)"/>
										</Reason>
									</xsl:for-each>
								</ChangeLog>
							</xsl:for-each>
							<xsl:for-each select="ns0:unit">
								<Unit>
									<xsl:for-each select="@uid">
										<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<xsl:for-each select="ns0:name">
										<Name>
											<xsl:sequence select="fn:string(.)"/>
										</Name>
									</xsl:for-each>
									<xsl:for-each select="ns0:planName">
										<PlanName>
											<xsl:sequence select="fn:string(.)"/>
										</PlanName>
									</xsl:for-each>
									<xsl:for-each select="ns0:facility">
										<Facility>
											<xsl:for-each select="@kind">
												<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@siteKind">
												<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@namingSystem">
												<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@uidRef">
												<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:sequence select="fn:string(.)"/>
										</Facility>
									</xsl:for-each>
									<xsl:for-each select="ns0:facilityParent1">
										<FacilityParent1>
											<xsl:for-each select="@kind">
												<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@siteKind">
												<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@namingSystem">
												<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@uidRef">
												<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:sequence select="fn:string(.)"/>
										</FacilityParent1>
									</xsl:for-each>
									<xsl:for-each select="ns0:facilityParent2">
										<FacilityParent2>
											<xsl:for-each select="@kind">
												<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@siteKind">
												<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@namingSystem">
												<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@uidRef">
												<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:sequence select="fn:string(.)"/>
										</FacilityParent2>
									</xsl:for-each>
									<xsl:for-each select="ns0:facilityAlias">
										<FacilityAlias>
											<xsl:sequence select="fn:string(.)"/>
										</FacilityAlias>
									</xsl:for-each>
									<xsl:for-each select="ns0:contextFacility">
										<ContextFacility>
											<xsl:for-each select="@kind">
												<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@siteKind">
												<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@namingSystem">
												<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@uidRef">
												<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:sequence select="fn:string(.)"/>
										</ContextFacility>
									</xsl:for-each>
									<xsl:for-each select="ns0:comment">
										<Comment>
											<xsl:sequence select="fn:string(.)"/>
										</Comment>
									</xsl:for-each>
									<xsl:for-each select="ns0:expectedProperty">
										<ExpectedProperty>
											<xsl:for-each select="@uid">
												<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<Property>
												<xsl:sequence select="fn:string(ns0:property)"/>
											</Property>
											<xsl:for-each select="ns0:childFacilityIdentifier">
												<ChildFacilityIdentifier>
													<xsl:sequence select="xs:string(xs:anyURI(fn:string(.)))"/>
												</ChildFacilityIdentifier>
											</xsl:for-each>
											<xsl:for-each select="ns0:tagAlias">
												<TagAlias>
													<xsl:sequence select="fn:string(.)"/>
												</TagAlias>
											</xsl:for-each>
											<xsl:for-each select="ns0:deadband">
												<Deadband>
													<xsl:for-each select="@uom">
														<xsl:attribute name="uom" namespace="" select="fn:string(.)"/>
													</xsl:for-each>
												</Deadband>
											</xsl:for-each>
											<xsl:for-each select="ns0:maximumFrequency">
												<MaximumFrequency>
													<xsl:call-template name="tbf:tbf7_TimeMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</MaximumFrequency>
											</xsl:for-each>
											<xsl:for-each select="ns0:comment">
												<Comment>
													<xsl:sequence select="fn:string(.)"/>
												</Comment>
											</xsl:for-each>
											<xsl:for-each select="ns0:expectedFlowProduct">
												<ExpectedFlowProduct>
													<xsl:for-each select="@uid">
														<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
													</xsl:for-each>
													<Flow>
														<xsl:sequence select="fn:string(ns0:flow)"/>
													</Flow>
													<xsl:for-each select="ns0:product">
														<Product>
															<xsl:sequence select="fn:string(.)"/>
														</Product>
													</xsl:for-each>
													<xsl:for-each select="ns0:qualifier">
														<Qualifier>
															<xsl:sequence select="fn:string(.)"/>
														</Qualifier>
													</xsl:for-each>
												</ExpectedFlowProduct>
											</xsl:for-each>
										</ExpectedProperty>
									</xsl:for-each>
									<xsl:for-each select="ns0:port">
										<Port>
											<xsl:for-each select="@uid">
												<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<Direction>
												<xsl:sequence select="fn:string(ns0:direction)"/>
											</Direction>
											<Name>
												<xsl:sequence select="fn:string(ns0:name)"/>
											</Name>
											<xsl:for-each select="ns0:planName">
												<PlanName>
													<xsl:sequence select="fn:string(.)"/>
												</PlanName>
											</xsl:for-each>
											<xsl:for-each select="ns0:facility">
												<Facility>
													<xsl:for-each select="@kind">
														<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
													</xsl:for-each>
													<xsl:for-each select="@siteKind">
														<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
													</xsl:for-each>
													<xsl:for-each select="@namingSystem">
														<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
													</xsl:for-each>
													<xsl:for-each select="@uidRef">
														<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
													</xsl:for-each>
													<xsl:sequence select="fn:string(.)"/>
												</Facility>
											</xsl:for-each>
											<xsl:for-each select="ns0:facilityAlias">
												<FacilityAlias>
													<xsl:sequence select="fn:string(.)"/>
												</FacilityAlias>
											</xsl:for-each>
											<xsl:for-each select="ns0:exposed">
												<Exposed>
													<xsl:sequence select="xs:string(xs:boolean(fn:string(.)))"/>
												</Exposed>
											</xsl:for-each>
											<xsl:for-each select="ns0:comment">
												<Comment>
													<xsl:sequence select="fn:string(.)"/>
												</Comment>
											</xsl:for-each>
											<xsl:for-each select="ns0:expectedFlowProperty">
												<ExpectedFlowProperty>
													<xsl:for-each select="@uid">
														<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
													</xsl:for-each>
													<Property>
														<xsl:sequence select="fn:string(ns0:property)"/>
													</Property>
													<xsl:for-each select="ns0:tagAlias">
														<TagAlias>
															<xsl:sequence select="fn:string(.)"/>
														</TagAlias>
													</xsl:for-each>
													<xsl:for-each select="ns0:deadband">
														<Deadband>
															<xsl:for-each select="@uom">
																<xsl:attribute name="uom" namespace="" select="fn:string(.)"/>
															</xsl:for-each>
														</Deadband>
													</xsl:for-each>
													<xsl:for-each select="ns0:maximumFrequency">
														<MaximumFrequency>
															<xsl:call-template name="tbf:tbf7_TimeMeasure">
																<xsl:with-param name="input" select="." as="node()"/>
															</xsl:call-template>
														</MaximumFrequency>
													</xsl:for-each>
													<xsl:for-each select="ns0:comment">
														<Comment>
															<xsl:sequence select="fn:string(.)"/>
														</Comment>
													</xsl:for-each>
													<xsl:for-each select="ns0:expectedFlowProduct">
														<ExpectedFlowProduct>
															<xsl:for-each select="@uid">
																<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
															</xsl:for-each>
															<Flow>
																<xsl:sequence select="fn:string(ns0:flow)"/>
															</Flow>
															<xsl:for-each select="ns0:product">
																<Product>
																	<xsl:sequence select="fn:string(.)"/>
																</Product>
															</xsl:for-each>
															<xsl:for-each select="ns0:qualifier">
																<Qualifier>
																	<xsl:sequence select="fn:string(.)"/>
																</Qualifier>
															</xsl:for-each>
														</ExpectedFlowProduct>
													</xsl:for-each>
												</ExpectedFlowProperty>
											</xsl:for-each>
											<xsl:for-each select="ns0:connectedNode">
												<ConnectedNode>
													<xsl:for-each select="@uid">
														<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
													</xsl:for-each>
													<Node>
														<xsl:sequence select="fn:string(ns0:node)"/>
													</Node>
													<xsl:for-each select="ns0:planName">
														<PlanName>
															<xsl:sequence select="fn:string(.)"/>
														</PlanName>
													</xsl:for-each>
													<xsl:for-each select="ns0:dTimStart">
														<DTimStart>
															<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
														</DTimStart>
													</xsl:for-each>
													<xsl:for-each select="ns0:dTimEnd">
														<DTimEnd>
															<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
														</DTimEnd>
													</xsl:for-each>
													<xsl:for-each select="ns0:comment">
														<Comment>
															<xsl:sequence select="fn:string(.)"/>
														</Comment>
													</xsl:for-each>
												</ConnectedNode>
											</xsl:for-each>
											<xsl:for-each select="ns0:expectedFlowProduct">
												<ExpectedFlowProduct>
													<xsl:for-each select="@uid">
														<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
													</xsl:for-each>
													<Flow>
														<xsl:sequence select="fn:string(ns0:flow)"/>
													</Flow>
													<xsl:for-each select="ns0:product">
														<Product>
															<xsl:sequence select="fn:string(.)"/>
														</Product>
													</xsl:for-each>
													<xsl:for-each select="ns0:qualifier">
														<Qualifier>
															<xsl:sequence select="fn:string(.)"/>
														</Qualifier>
													</xsl:for-each>
												</ExpectedFlowProduct>
											</xsl:for-each>
										</Port>
									</xsl:for-each>
									<xsl:for-each select="ns0:relativeCoordinate">
										<RelativeCoordinate>
											<xsl:for-each select="ns0:x">
												<X>
													<xsl:call-template name="tbf:tbf8_LengthPerLengthMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</X>
											</xsl:for-each>
											<xsl:for-each select="ns0:y">
												<Y>
													<xsl:call-template name="tbf:tbf8_LengthPerLengthMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</Y>
											</xsl:for-each>
											<xsl:for-each select="ns0:z">
												<Z>
													<xsl:call-template name="tbf:tbf8_LengthPerLengthMeasure">
														<xsl:with-param name="input" select="." as="node()"/>
													</xsl:call-template>
												</Z>
											</xsl:for-each>
										</RelativeCoordinate>
									</xsl:for-each>
								</Unit>
							</xsl:for-each>
						</Network>
					</xsl:for-each>
				</OpticalPathNetwork>
			</xsl:for-each>
			<xsl:for-each select="$var6_fiberOpticalPaths/ns0:fiberOpticalPath/ns0:facilityMapping">
				<FacilityMapping>
					<TimeStart>
						<xsl:sequence select="xs:string(xs:dateTime(fn:string(ns0:timeStart)))"/>
					</TimeStart>
					<xsl:for-each select="ns0:timeEnd">
						<TimeEnd>
							<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
						</TimeEnd>
					</xsl:for-each>
					<xsl:for-each select="ns0:comment">
						<Comment>
							<xsl:sequence select="fn:string(.)"/>
						</Comment>
					</xsl:for-each>
					<xsl:for-each select="ns0:fiberFacilityMappingPart">
						<FiberFacilityMappingPart>
							<xsl:attribute name="uid" namespace="" select="fn:string(@mappingPartID)"/>
							<xsl:for-each select="ns0:opticalPathDistanceStart">
								<OpticalPathDistanceStart>
									<xsl:call-template name="tbf:tbf2_LengthMeasure">
										<xsl:with-param name="input" select="." as="node()"/>
									</xsl:call-template>
								</OpticalPathDistanceStart>
							</xsl:for-each>
							<xsl:for-each select="ns0:opticalPathDistanceEnd">
								<OpticalPathDistanceEnd>
									<xsl:call-template name="tbf:tbf2_LengthMeasure">
										<xsl:with-param name="input" select="." as="node()"/>
									</xsl:call-template>
								</OpticalPathDistanceEnd>
							</xsl:for-each>
							<xsl:for-each select="ns0:facilityLengthStart">
								<FacilityLengthStart>
									<xsl:call-template name="tbf:tbf2_LengthMeasure">
										<xsl:with-param name="input" select="." as="node()"/>
									</xsl:call-template>
								</FacilityLengthStart>
							</xsl:for-each>
							<xsl:for-each select="ns0:facilityLengthEnd">
								<FacilityLengthEnd>
									<xsl:call-template name="tbf:tbf2_LengthMeasure">
										<xsl:with-param name="input" select="." as="node()"/>
									</xsl:call-template>
								</FacilityLengthEnd>
							</xsl:for-each>
							<xsl:for-each select="ns0:comment">
								<Comment>
									<xsl:sequence select="fn:string(.)"/>
								</Comment>
							</xsl:for-each>
							<xsl:for-each select="ns0:pipeline">
								<FiberFacility>
									<xsl:attribute name="xsi:type" namespace="http://www.w3.org/2001/XMLSchema-instance" select="xs:QName('FiberFacilityPipeline')"/>
									<Name>
										<xsl:sequence select="fn:string(ns0:name)"/>
									</Name>
									<xsl:for-each select="ns0:datumPortReference">
										<DatumPortReference>
											<xsl:sequence select="fn:string(.)"/>
										</DatumPortReference>
									</xsl:for-each>
									<xsl:for-each select="ns0:installation">
										<Installation>
											<xsl:for-each select="@kind">
												<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@siteKind">
												<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@namingSystem">
												<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@uidRef">
												<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:sequence select="fn:string(.)"/>
										</Installation>
									</xsl:for-each>
									<xsl:for-each select="ns0:kind">
										<Kind>
											<xsl:sequence select="fn:string(.)"/>
										</Kind>
									</xsl:for-each>
									<xsl:for-each select="ns0:contextFacility">
										<ContextFacility>
											<xsl:for-each select="@kind">
												<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@siteKind">
												<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@namingSystem">
												<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:for-each select="@uidRef">
												<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
											</xsl:for-each>
											<xsl:sequence select="fn:string(.)"/>
										</ContextFacility>
									</xsl:for-each>
								</FiberFacility>
							</xsl:for-each>
							<xsl:for-each select="ns0:well">
								<FiberFacility>
									<xsl:attribute name="xsi:type" namespace="http://www.w3.org/2001/XMLSchema-instance" select="xs:QName('FiberFacilityWell')"/>
									<xsl:for-each select="@uidWell">
										<xsl:attribute name="uidWell" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<xsl:for-each select="@uidWellbore">
										<xsl:attribute name="uidWellbore" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<Name>
										<xsl:sequence select="fn:string(ns0:name)"/>
									</Name>
									<NameWell>
										<xsl:sequence select="fn:string(ns0:nameWell)"/>
									</NameWell>
									<NameWellbore>
										<xsl:sequence select="fn:string(ns0:nameWellbore)"/>
									</NameWellbore>
									<xsl:for-each select="ns0:wellDatum">
										<WellDatum>
											<xsl:sequence select="fn:string(.)"/>
										</WellDatum>
									</xsl:for-each>
								</FiberFacility>
							</xsl:for-each>
						</FiberFacilityMappingPart>
					</xsl:for-each>
				</FacilityMapping>
			</xsl:for-each>
			<xsl:for-each select="$var6_fiberOpticalPaths/ns0:fiberOpticalPath/ns0:defect">
				<Defect>
					<xsl:for-each select="@defectID">
						<xsl:attribute name="defectID" namespace="" select="fn:string(.)"/>
					</xsl:for-each>
					<xsl:for-each select="ns0:opticalPathDistanceStart">
						<OpticalPathDistanceStart>
							<xsl:call-template name="tbf:tbf2_LengthMeasure">
								<xsl:with-param name="input" select="." as="node()"/>
							</xsl:call-template>
						</OpticalPathDistanceStart>
					</xsl:for-each>
					<xsl:for-each select="ns0:opticalPathDistanceEnd">
						<OpticalPathDistanceEnd>
							<xsl:call-template name="tbf:tbf2_LengthMeasure">
								<xsl:with-param name="input" select="." as="node()"/>
							</xsl:call-template>
						</OpticalPathDistanceEnd>
					</xsl:for-each>
					<xsl:for-each select="ns0:defectType">
						<DefectType>
							<xsl:sequence select="fn:string(.)"/>
						</DefectType>
					</xsl:for-each>
					<xsl:for-each select="ns0:timeStart">
						<TimeStart>
							<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
						</TimeStart>
					</xsl:for-each>
					<xsl:for-each select="ns0:timeEnd">
						<TimeEnd>
							<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
						</TimeEnd>
					</xsl:for-each>
					<xsl:for-each select="ns0:comment">
						<Comment>
							<xsl:sequence select="fn:string(.)"/>
						</Comment>
					</xsl:for-each>
				</Defect>
			</xsl:for-each>
			<xsl:for-each select="$var6_fiberOpticalPaths/ns0:fiberOpticalPath/ns0:otdr">
				<Otdr>
					<xsl:for-each select="@uid">
						<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
					</xsl:for-each>
					<Name>
						<xsl:sequence select="fn:string(ns0:name)"/>
					</Name>
					<xsl:for-each select="ns0:reasonForRun">
						<ReasonForRun>
							<xsl:sequence select="fn:string(.)"/>
						</ReasonForRun>
					</xsl:for-each>
					<DTimRun>
						<xsl:sequence select="xs:string(xs:dateTime(fn:string(ns0:dTimRun)))"/>
					</DTimRun>
					<xsl:for-each select="ns0:dataInOTDRFile">
						<DataInOTDRFile>
							<xsl:sequence select="fn:string(.)"/>
						</DataInOTDRFile>
					</xsl:for-each>
					<xsl:for-each select="ns0:OTDRImageFile">
						<OTDRImageFile>
							<xsl:sequence select="fn:string(.)"/>
						</OTDRImageFile>
					</xsl:for-each>
					<OpticalPathDistanceStart>
						<xsl:call-template name="tbf:tbf2_LengthMeasure">
							<xsl:with-param name="input" select="ns0:opticalPathDistanceStart" as="node()"/>
						</xsl:call-template>
					</OpticalPathDistanceStart>
					<OpticalPathDistanceEnd>
						<xsl:call-template name="tbf:tbf2_LengthMeasure">
							<xsl:with-param name="input" select="ns0:opticalPathDistanceEnd" as="node()"/>
						</xsl:call-template>
					</OpticalPathDistanceEnd>
					<Direction>
						<xsl:sequence select="fn:string(ns0:direction)"/>
					</Direction>
					<Wavelength>
						<xsl:call-template name="tbf:tbf2_LengthMeasure">
							<xsl:with-param name="input" select="ns0:wavelength" as="node()"/>
						</xsl:call-template>
					</Wavelength>
					<xsl:for-each select="ns0:measurementContact">
						<MeasurementContact>
							<Name>
								<xsl:sequence select="fn:string(ns0:name)"/>
							</Name>
							<xsl:for-each select="ns0:role">
								<Role>
									<xsl:sequence select="fn:string(.)"/>
								</Role>
							</xsl:for-each>
							<xsl:for-each select="ns0:alias">
								<Alias>
									<xsl:sequence select="fn:string(.)"/>
								</Alias>
							</xsl:for-each>
							<xsl:for-each select="ns0:address">
								<Address>
									<xsl:for-each select="@uid">
										<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<xsl:for-each select="@kind">
										<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<xsl:for-each select="ns0:name">
										<Name>
											<xsl:sequence select="fn:string(.)"/>
										</Name>
									</xsl:for-each>
									<xsl:for-each select="ns0:street">
										<Street>
											<xsl:sequence select="fn:string(.)"/>
										</Street>
									</xsl:for-each>
									<City>
										<xsl:sequence select="fn:string(ns0:city)"/>
									</City>
									<xsl:for-each select="ns0:country">
										<Country>
											<xsl:sequence select="fn:string(.)"/>
										</Country>
									</xsl:for-each>
									<xsl:for-each select="ns0:county">
										<County>
											<xsl:sequence select="fn:string(.)"/>
										</County>
									</xsl:for-each>
									<xsl:for-each select="ns0:postalCode">
										<PostalCode>
											<xsl:sequence select="fn:string(.)"/>
										</PostalCode>
									</xsl:for-each>
									<xsl:for-each select="ns0:state">
										<State>
											<xsl:sequence select="fn:string(.)"/>
										</State>
									</xsl:for-each>
									<xsl:for-each select="ns0:province">
										<Province>
											<xsl:sequence select="fn:string(.)"/>
										</Province>
									</xsl:for-each>
								</Address>
							</xsl:for-each>
							<xsl:for-each select="ns0:phoneNumber">
								<PhoneNumber>
									<xsl:attribute name="type" namespace="" select="fn:string(@type)"/>
									<xsl:for-each select="@qualifier">
										<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<xsl:for-each select="@extension">
										<xsl:attribute name="extension" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<xsl:sequence select="fn:string(.)"/>
								</PhoneNumber>
							</xsl:for-each>
							<xsl:for-each select="ns0:email">
								<Email>
									<xsl:for-each select="@qualifier">
										<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
								</Email>
							</xsl:for-each>
							<xsl:for-each select="ns0:associatedWith">
								<AssociatedWith>
									<xsl:sequence select="fn:string(.)"/>
								</AssociatedWith>
							</xsl:for-each>
							<xsl:for-each select="ns0:contact">
								<Contact>
									<xsl:sequence select="fn:string(.)"/>
								</Contact>
							</xsl:for-each>
							<xsl:for-each select="ns0:personnelCount">
								<PersonnelCount>
									<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
								</PersonnelCount>
							</xsl:for-each>
							<xsl:for-each select="ns0:personName">
								<PersonName>
									<xsl:for-each select="ns0:prefix">
										<Prefix>
											<xsl:sequence select="fn:string(.)"/>
										</Prefix>
									</xsl:for-each>
									<First>
										<xsl:sequence select="fn:string(ns0:first)"/>
									</First>
									<xsl:for-each select="ns0:middle">
										<Middle>
											<xsl:sequence select="fn:string(.)"/>
										</Middle>
									</xsl:for-each>
									<Last>
										<xsl:sequence select="fn:string(ns0:last)"/>
									</Last>
									<xsl:for-each select="ns0:suffix">
										<Suffix>
											<xsl:sequence select="fn:string(.)"/>
										</Suffix>
									</xsl:for-each>
								</PersonName>
							</xsl:for-each>
						</MeasurementContact>
					</xsl:for-each>
					<xsl:for-each select="ns0:extensionNameValue">
						<ExtensionNameValue>
							<eml:Name>
								<xsl:sequence select="fn:string(ns0:name)"/>
							</eml:Name>
							<eml:Value>
								<xsl:call-template name="tbf:tbf6_StringMeasure">
									<xsl:with-param name="input" select="ns0:value" as="node()"/>
								</xsl:call-template>
							</eml:Value>
							<xsl:for-each select="ns0:measureClass">
								<eml:MeasureClass>
									<xsl:sequence select="fn:string(.)"/>
								</eml:MeasureClass>
							</xsl:for-each>
							<xsl:for-each select="ns0:dTim">
								<eml:DTim>
									<xsl:sequence select="xs:string(xs:dateTime(fn:string(.)))"/>
								</eml:DTim>
							</xsl:for-each>
							<xsl:for-each select="ns0:index">
								<eml:Index>
									<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
								</eml:Index>
							</xsl:for-each>
							<xsl:for-each select="ns0:description">
								<eml:Description>
									<xsl:sequence select="fn:string(.)"/>
								</eml:Description>
							</xsl:for-each>
						</ExtensionNameValue>
					</xsl:for-each>
				</Otdr>
			</xsl:for-each>
			<xsl:for-each select="$var6_fiberOpticalPaths/ns0:fiberOpticalPath/ns0:installingVendor">
				<InstallingVendor>
					<Name>
						<xsl:sequence select="fn:string(ns0:name)"/>
					</Name>
					<xsl:for-each select="ns0:role">
						<Role>
							<xsl:sequence select="fn:string(.)"/>
						</Role>
					</xsl:for-each>
					<xsl:for-each select="ns0:alias">
						<Alias>
							<xsl:sequence select="fn:string(.)"/>
						</Alias>
					</xsl:for-each>
					<xsl:for-each select="ns0:address">
						<Address>
							<xsl:for-each select="@uid">
								<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:for-each select="@kind">
								<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:for-each select="ns0:name">
								<Name>
									<xsl:sequence select="fn:string(.)"/>
								</Name>
							</xsl:for-each>
							<xsl:for-each select="ns0:street">
								<Street>
									<xsl:sequence select="fn:string(.)"/>
								</Street>
							</xsl:for-each>
							<City>
								<xsl:sequence select="fn:string(ns0:city)"/>
							</City>
							<xsl:for-each select="ns0:country">
								<Country>
									<xsl:sequence select="fn:string(.)"/>
								</Country>
							</xsl:for-each>
							<xsl:for-each select="ns0:county">
								<County>
									<xsl:sequence select="fn:string(.)"/>
								</County>
							</xsl:for-each>
							<xsl:for-each select="ns0:postalCode">
								<PostalCode>
									<xsl:sequence select="fn:string(.)"/>
								</PostalCode>
							</xsl:for-each>
							<xsl:for-each select="ns0:state">
								<State>
									<xsl:sequence select="fn:string(.)"/>
								</State>
							</xsl:for-each>
							<xsl:for-each select="ns0:province">
								<Province>
									<xsl:sequence select="fn:string(.)"/>
								</Province>
							</xsl:for-each>
						</Address>
					</xsl:for-each>
					<xsl:for-each select="ns0:phoneNumber">
						<PhoneNumber>
							<xsl:attribute name="type" namespace="" select="fn:string(@type)"/>
							<xsl:for-each select="@qualifier">
								<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:for-each select="@extension">
								<xsl:attribute name="extension" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:sequence select="fn:string(.)"/>
						</PhoneNumber>
					</xsl:for-each>
					<xsl:for-each select="ns0:email">
						<Email>
							<xsl:for-each select="@qualifier">
								<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
						</Email>
					</xsl:for-each>
					<xsl:for-each select="ns0:associatedWith">
						<AssociatedWith>
							<xsl:sequence select="fn:string(.)"/>
						</AssociatedWith>
					</xsl:for-each>
					<xsl:for-each select="ns0:contact">
						<Contact>
							<xsl:sequence select="fn:string(.)"/>
						</Contact>
					</xsl:for-each>
					<xsl:for-each select="ns0:personnelCount">
						<PersonnelCount>
							<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
						</PersonnelCount>
					</xsl:for-each>
					<xsl:for-each select="ns0:personName">
						<PersonName>
							<xsl:for-each select="ns0:prefix">
								<Prefix>
									<xsl:sequence select="fn:string(.)"/>
								</Prefix>
							</xsl:for-each>
							<First>
								<xsl:sequence select="fn:string(ns0:first)"/>
							</First>
							<xsl:for-each select="ns0:middle">
								<Middle>
									<xsl:sequence select="fn:string(.)"/>
								</Middle>
							</xsl:for-each>
							<Last>
								<xsl:sequence select="fn:string(ns0:last)"/>
							</Last>
							<xsl:for-each select="ns0:suffix">
								<Suffix>
									<xsl:sequence select="fn:string(.)"/>
								</Suffix>
							</xsl:for-each>
						</PersonName>
					</xsl:for-each>
				</InstallingVendor>
			</xsl:for-each>
			<xsl:for-each select="$var6_fiberOpticalPaths">
				<xsl:variable name="var5_facilityIdentifier" as="node()" select="ns0:facilityIdentifier"/>
				<FacilityIdentifier>
					<Name>
						<xsl:sequence select="fn:string($var5_facilityIdentifier/ns0:name)"/>
					</Name>
					<xsl:for-each select="$var5_facilityIdentifier/ns0:installation">
						<Installation>
							<xsl:for-each select="@kind">
								<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:for-each select="@siteKind">
								<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:for-each select="@namingSystem">
								<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:for-each select="@uidRef">
								<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:sequence select="fn:string(.)"/>
						</Installation>
					</xsl:for-each>
					<xsl:for-each select="$var5_facilityIdentifier/ns0:kind">
						<Kind>
							<xsl:sequence select="fn:string(.)"/>
						</Kind>
					</xsl:for-each>
					<xsl:for-each select="$var5_facilityIdentifier/ns0:contextFacility">
						<ContextFacility>
							<xsl:for-each select="@kind">
								<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:for-each select="@siteKind">
								<xsl:attribute name="siteKind" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:for-each select="@namingSystem">
								<xsl:attribute name="namingSystem" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:for-each select="@uidRef">
								<xsl:attribute name="uidRef" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<xsl:sequence select="fn:string(.)"/>
						</ContextFacility>
					</xsl:for-each>
					<xsl:for-each select="$var5_facilityIdentifier/ns0:businessUnit">
						<BusinessUnit>
							<xsl:for-each select="@uid">
								<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
							</xsl:for-each>
							<Kind>
								<xsl:sequence select="()"/>
							</Kind>
							<xsl:for-each select="ns0:name">
								<Name>
									<xsl:sequence select="fn:string(.)"/>
								</Name>
							</xsl:for-each>
							<xsl:for-each select="ns0:description">
								<Description>
									<xsl:sequence select="fn:string(.)"/>
								</Description>
							</xsl:for-each>
							<xsl:for-each select="ns0:subUnit">
								<SubUnit>
									<xsl:for-each select="@uid">
										<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<Kind>
										<xsl:sequence select="fn:string(ns0:kind)"/>
									</Kind>
								</SubUnit>
							</xsl:for-each>
						</BusinessUnit>
					</xsl:for-each>
					<xsl:for-each select="$var5_facilityIdentifier/ns0:operator">
						<Operator>
							<Name>
								<xsl:sequence select="fn:string(ns0:name)"/>
							</Name>
							<xsl:for-each select="ns0:role">
								<Role>
									<xsl:sequence select="fn:string(.)"/>
								</Role>
							</xsl:for-each>
							<xsl:for-each select="ns0:alias">
								<Alias>
									<xsl:sequence select="fn:string(.)"/>
								</Alias>
							</xsl:for-each>
							<xsl:for-each select="ns0:address">
								<Address>
									<xsl:for-each select="@uid">
										<xsl:attribute name="uid" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<xsl:for-each select="@kind">
										<xsl:attribute name="kind" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<xsl:for-each select="ns0:name">
										<Name>
											<xsl:sequence select="fn:string(.)"/>
										</Name>
									</xsl:for-each>
									<xsl:for-each select="ns0:street">
										<Street>
											<xsl:sequence select="fn:string(.)"/>
										</Street>
									</xsl:for-each>
									<City>
										<xsl:sequence select="fn:string(ns0:city)"/>
									</City>
									<xsl:for-each select="ns0:country">
										<Country>
											<xsl:sequence select="fn:string(.)"/>
										</Country>
									</xsl:for-each>
									<xsl:for-each select="ns0:county">
										<County>
											<xsl:sequence select="fn:string(.)"/>
										</County>
									</xsl:for-each>
									<xsl:for-each select="ns0:postalCode">
										<PostalCode>
											<xsl:sequence select="fn:string(.)"/>
										</PostalCode>
									</xsl:for-each>
									<xsl:for-each select="ns0:state">
										<State>
											<xsl:sequence select="fn:string(.)"/>
										</State>
									</xsl:for-each>
									<xsl:for-each select="ns0:province">
										<Province>
											<xsl:sequence select="fn:string(.)"/>
										</Province>
									</xsl:for-each>
								</Address>
							</xsl:for-each>
							<xsl:for-each select="ns0:phoneNumber">
								<PhoneNumber>
									<xsl:attribute name="type" namespace="" select="fn:string(@type)"/>
									<xsl:for-each select="@qualifier">
										<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<xsl:for-each select="@extension">
										<xsl:attribute name="extension" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
									<xsl:sequence select="fn:string(.)"/>
								</PhoneNumber>
							</xsl:for-each>
							<xsl:for-each select="ns0:email">
								<Email>
									<xsl:for-each select="@qualifier">
										<xsl:attribute name="qualifier" namespace="" select="fn:string(.)"/>
									</xsl:for-each>
								</Email>
							</xsl:for-each>
							<xsl:for-each select="ns0:associatedWith">
								<AssociatedWith>
									<xsl:sequence select="fn:string(.)"/>
								</AssociatedWith>
							</xsl:for-each>
							<xsl:for-each select="ns0:contact">
								<Contact>
									<xsl:sequence select="fn:string(.)"/>
								</Contact>
							</xsl:for-each>
							<xsl:for-each select="ns0:personnelCount">
								<PersonnelCount>
									<xsl:sequence select="xs:string(xs:integer(fn:string(.)))"/>
								</PersonnelCount>
							</xsl:for-each>
							<xsl:for-each select="ns0:personName">
								<PersonName>
									<xsl:for-each select="ns0:prefix">
										<Prefix>
											<xsl:sequence select="fn:string(.)"/>
										</Prefix>
									</xsl:for-each>
									<First>
										<xsl:sequence select="fn:string(ns0:first)"/>
									</First>
									<xsl:for-each select="ns0:middle">
										<Middle>
											<xsl:sequence select="fn:string(.)"/>
										</Middle>
									</xsl:for-each>
									<Last>
										<xsl:sequence select="fn:string(ns0:last)"/>
									</Last>
									<xsl:for-each select="ns0:suffix">
										<Suffix>
											<xsl:sequence select="fn:string(.)"/>
										</Suffix>
									</xsl:for-each>
								</PersonName>
							</xsl:for-each>
						</Operator>
					</xsl:for-each>
					<xsl:for-each select="$var5_facilityIdentifier/ns0:geographicContext">
						<GeographicContext>
							<xsl:for-each select="ns0:country">
								<Country>
									<xsl:sequence select="fn:string(.)"/>
								</Country>
							</xsl:for-each>
							<xsl:for-each select="ns0:state">
								<State>
									<xsl:sequence select="fn:string(.)"/>
								</State>
							</xsl:for-each>
							<xsl:for-each select="ns0:field">
								<Field>
									<xsl:sequence select="fn:string(.)"/>
								</Field>
							</xsl:for-each>
							<xsl:for-each select="ns0:comment">
								<Comment>
									<xsl:sequence select="fn:string(.)"/>
								</Comment>
							</xsl:for-each>
							<xsl:for-each select="ns0:offshoreLocation">
								<OffshoreLocation>
									<xsl:for-each select="ns0:areaName">
										<AreaName>
											<xsl:sequence select="fn:string(.)"/>
										</AreaName>
									</xsl:for-each>
									<xsl:for-each select="ns0:blockID">
										<BlockID>
											<xsl:sequence select="fn:string(.)"/>
										</BlockID>
									</xsl:for-each>
									<xsl:for-each select="ns0:comment">
										<Comment>
											<xsl:sequence select="fn:string(.)"/>
										</Comment>
									</xsl:for-each>
									<xsl:variable name="var4_northSeaOffshore" as="node()" select="ns0:northSeaOffshore"/>
									<NorthSeaOffshore>
										<xsl:for-each select="$var4_northSeaOffshore/ns0:areaName">
											<AreaName>
												<xsl:sequence select="fn:string(.)"/>
											</AreaName>
										</xsl:for-each>
										<Quadrant>
											<xsl:sequence select="fn:string($var4_northSeaOffshore/ns0:quadrant)"/>
										</Quadrant>
										<xsl:for-each select="$var4_northSeaOffshore/ns0:blockSuffix">
											<BlockSuffix>
												<xsl:sequence select="fn:string(.)"/>
											</BlockSuffix>
										</xsl:for-each>
									</NorthSeaOffshore>
								</OffshoreLocation>
							</xsl:for-each>
						</GeographicContext>
					</xsl:for-each>
				</FacilityIdentifier>
			</xsl:for-each>
		</FiberOpticalPath>
	</xsl:template>
</xsl:stylesheet>
