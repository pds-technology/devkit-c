<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2017sp2

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tbf="http://www.altova.com/MapForce/UDF/tbf" xmlns:ns0="http://www.prodml.org/schemas/1series" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" exclude-result-prefixes="tbf ns0 xs fn">
	<xsl:template name="tbf:tbf1_CustomData">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/node()">
			<xsl:choose>
				<xsl:when test="fn:boolean(self::*)">
					<xsl:if test="fn:boolean(self::*)">
						<xsl:element name="{fn:string(fn:node-name(.))}" namespace="{fn:namespace-uri-from-QName(fn:node-name(.))}">
							<xsl:sequence select="(./@node(), ./node())"/>
						</xsl:element>
					</xsl:if>
				</xsl:when>
				<xsl:otherwise>
					<xsl:if test="fn:not(fn:boolean(self::text()))">
						<xsl:sequence select="."/>
					</xsl:if>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:for-each>
	</xsl:template>
	<xsl:template name="tbf:tbf2_TimeMeasure">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/@uom">
			<xsl:attribute name="uom" select="fn:string(.)"/>
		</xsl:for-each>
		<xsl:sequence select="fn:string($input)"/>
	</xsl:template>
	<xsl:output method="xml" encoding="UTF-8" byte-order-mark="no" indent="yes"/>
	<xsl:template match="/">
		<xsl:variable name="var1_timeSeriesStatistics" as="node()?" select="ns0:timeSeriesStatistics"/>
		<TimeSeriesStatistic xmlns="http://www.energistics.org/energyml/data/prodmlv2" xmlns:eml="http://www.energistics.org/energyml/data/commonv2" xmlns:gco="http://www.isotc211.org/2005/gco" xmlns:gmd="http://www.isotc211.org/2005/gmd" xmlns:gsr="http://www.isotc211.org/2005/gsr" xmlns:gts="http://www.isotc211.org/2005/gts" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xlink="http://www.w3.org/1999/xlink">
			<xsl:attribute name="xsi:schemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance" select="'http://www.energistics.org/energyml/data/prodmlv2 file:///C:/Energistics2/energyml/data/prodml/v2.0/xsd_schemas/TimeSeriesStatistic.xsd'"/>
			<xsl:attribute name="schemaVersion" namespace="" select="'2.0'"/>
			<xsl:attribute name="uuid" namespace="" select="'00000000-0000-0000-0000-000000000000'"/>
			<eml:Aliases>
				<xsl:for-each select="$var1_timeSeriesStatistics">
					<xsl:attribute name="authority" namespace="" select="fn:string(@version)"/>
				</xsl:for-each>
				<xsl:for-each select="$var1_timeSeriesStatistics/ns0:timeSeriesStatistic/@uid">
					<eml:Identifier>
						<xsl:sequence select="fn:string(.)"/>
					</eml:Identifier>
				</xsl:for-each>
			</eml:Aliases>
			<eml:Citation>
				<xsl:for-each select="$var1_timeSeriesStatistics/ns0:timeSeriesStatistic">
					<eml:Title>
						<xsl:sequence select="fn:string(ns0:name)"/>
					</eml:Title>
				</xsl:for-each>
				<eml:Originator>131_input</eml:Originator>
				<eml:Creation>
					<xsl:sequence select="xs:string(fn:current-dateTime())"/>
				</eml:Creation>
				<eml:Format>Mapforce</eml:Format>
			</eml:Citation>
			<xsl:for-each select="$var1_timeSeriesStatistics/ns0:timeSeriesStatistic/ns0:customData">
				<eml:CustomData>
					<xsl:call-template name="tbf:tbf1_CustomData">
						<xsl:with-param name="input" select="." as="node()"/>
					</xsl:call-template>
				</eml:CustomData>
			</xsl:for-each>
			<xsl:for-each select="$var1_timeSeriesStatistics/ns0:timeSeriesStatistic/ns0:key">
				<Key>
					<xsl:attribute name="keyword" namespace="" select="fn:string(@keyword)"/>
				</Key>
			</xsl:for-each>
			<xsl:for-each select="$var1_timeSeriesStatistics/ns0:timeSeriesStatistic/ns0:unit">
				<Unit>
					<xsl:sequence select="fn:string(.)"/>
				</Unit>
			</xsl:for-each>
			<xsl:for-each select="$var1_timeSeriesStatistics/ns0:timeSeriesStatistic/ns0:measureClass">
				<MeasureClass>
					<xsl:sequence select="fn:string(.)"/>
				</MeasureClass>
			</xsl:for-each>
			<xsl:for-each select="$var1_timeSeriesStatistics/ns0:timeSeriesStatistic/ns0:comment">
				<Comment>
					<xsl:sequence select="fn:string(.)"/>
				</Comment>
			</xsl:for-each>
			<xsl:for-each select="$var1_timeSeriesStatistics/ns0:timeSeriesStatistic/ns0:dTimMin">
				<DTimMin>
					<xsl:attribute name="endpoint" namespace="" select="fn:string(@endpoint)"/>
				</DTimMin>
			</xsl:for-each>
			<xsl:for-each select="$var1_timeSeriesStatistics/ns0:timeSeriesStatistic/ns0:dTimMax">
				<DTimMax>
					<xsl:attribute name="endpoint" namespace="" select="fn:string(@endpoint)"/>
				</DTimMax>
			</xsl:for-each>
			<xsl:for-each select="$var1_timeSeriesStatistics/ns0:timeSeriesStatistic/ns0:minimum">
				<Minimum>
					<xsl:attribute name="uom" namespace="" select="'ppm'"/>
					<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
				</Minimum>
			</xsl:for-each>
			<xsl:for-each select="$var1_timeSeriesStatistics/ns0:timeSeriesStatistic/ns0:maximum">
				<Maximum>
					<xsl:attribute name="uom" namespace="" select="'ppm'"/>
					<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
				</Maximum>
			</xsl:for-each>
			<xsl:for-each select="$var1_timeSeriesStatistics/ns0:timeSeriesStatistic/ns0:sum">
				<Sum>
					<xsl:attribute name="uom" namespace="" select="'ppm'"/>
					<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
				</Sum>
			</xsl:for-each>
			<xsl:for-each select="$var1_timeSeriesStatistics/ns0:timeSeriesStatistic/ns0:mean">
				<Mean>
					<xsl:attribute name="uom" namespace="" select="'ppm'"/>
					<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
				</Mean>
			</xsl:for-each>
			<xsl:for-each select="$var1_timeSeriesStatistics/ns0:timeSeriesStatistic/ns0:median">
				<Median>
					<xsl:attribute name="uom" namespace="" select="'ppm'"/>
					<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
				</Median>
			</xsl:for-each>
			<xsl:for-each select="$var1_timeSeriesStatistics/ns0:timeSeriesStatistic/ns0:standardDeviation">
				<StandardDeviation>
					<xsl:attribute name="uom" namespace="" select="'ppm'"/>
					<xsl:sequence select="xs:string(xs:double(fn:string(.)))"/>
				</StandardDeviation>
			</xsl:for-each>
			<TimeAtThreshold>
				<xsl:for-each select="$var1_timeSeriesStatistics/ns0:timeSeriesStatistic/ns0:timeAtThreshold/ns0:thresholdMinimum">
					<ThresholdMinimum>
						<xsl:attribute name="endpoint" namespace="" select="fn:string(@endpoint)"/>
					</ThresholdMinimum>
				</xsl:for-each>
				<xsl:for-each select="$var1_timeSeriesStatistics/ns0:timeSeriesStatistic/ns0:timeAtThreshold/ns0:thresholdMaximum">
					<ThresholdMaximum>
						<xsl:attribute name="endpoint" namespace="" select="fn:string(@endpoint)"/>
					</ThresholdMaximum>
				</xsl:for-each>
				<xsl:for-each select="$var1_timeSeriesStatistics/ns0:timeSeriesStatistic/ns0:timeAtThreshold">
					<Duration>
						<xsl:call-template name="tbf:tbf2_TimeMeasure">
							<xsl:with-param name="input" select="ns0:duration" as="node()"/>
						</xsl:call-template>
					</Duration>
				</xsl:for-each>
			</TimeAtThreshold>
		</TimeSeriesStatistic>
	</xsl:template>
</xsl:stylesheet>
