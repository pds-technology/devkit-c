<?xml version="1.0" encoding="UTF-8"?>
<!--
This file was generated by Altova MapForce 2017sp2

YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.

Refer to the Altova MapForce Documentation for further details.
http://www.altova.com/mapforce
-->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:tbf="http://www.altova.com/MapForce/UDF/tbf" xmlns:ns0="http://www.prodml.org/schemas/1series" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:fn="http://www.w3.org/2005/xpath-functions" exclude-result-prefixes="tbf ns0 xs fn">
	<xsl:template name="tbf:tbf1_CustomData">
		<xsl:param name="input" select="()"/>
		<xsl:for-each select="$input/node()">
			<xsl:choose>
				<xsl:when test="fn:boolean(self::*)">
					<xsl:if test="fn:boolean(self::*)">
						<xsl:element name="{fn:string(fn:node-name(.))}" namespace="{fn:namespace-uri-from-QName(fn:node-name(.))}">
							<xsl:sequence select="(./@node(), ./node())"/>
						</xsl:element>
					</xsl:if>
				</xsl:when>
				<xsl:otherwise>
					<xsl:if test="fn:not(fn:boolean(self::text()))">
						<xsl:sequence select="."/>
					</xsl:if>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:for-each>
	</xsl:template>
	<xsl:output method="xml" encoding="UTF-8" byte-order-mark="no" indent="yes"/>
	<xsl:template match="/">
		<xsl:for-each select="ns0:timeSeriesDatas/ns0:timeSeriesData">
			<xsl:variable name="var1_cur" as="node()" select="."/>
			<xsl:for-each select="@uid">
				<xsl:result-document href="{fn:concat(fn:concat('TimeSeriesData', fn:string(.)), '.xml')}" encoding="UTF-8">
					<TimeSeriesData xmlns="http://www.energistics.org/energyml/data/prodmlv2" xmlns:eml="http://www.energistics.org/energyml/data/commonv2" xmlns:gco="http://www.isotc211.org/2005/gco" xmlns:gmd="http://www.isotc211.org/2005/gmd" xmlns:gsr="http://www.isotc211.org/2005/gsr" xmlns:gts="http://www.isotc211.org/2005/gts" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:xlink="http://www.w3.org/1999/xlink">
						<xsl:attribute name="xsi:schemaLocation" namespace="http://www.w3.org/2001/XMLSchema-instance" select="'http://www.energistics.org/energyml/data/prodmlv2 file:///C:/Energistics2/energyml/data/prodml/v2.0/xsd_schemas/TimeSeriesData.xsd'"/>
						<xsl:attribute name="schemaVersion" namespace="" select="'2.0'"/>
						<xsl:attribute name="uuid" namespace="" select="'00000000-0000-0000-0000-000000000000'"/>
						<eml:Citation>
							<eml:Title>
								<xsl:sequence select="fn:string($var1_cur/ns0:name)"/>
							</eml:Title>
							<eml:Originator>131_input</eml:Originator>
							<eml:Creation>
								<xsl:sequence select="xs:string(fn:current-dateTime())"/>
							</eml:Creation>
							<eml:Format>Mapforce</eml:Format>
						</eml:Citation>
						<xsl:for-each select="$var1_cur/ns0:customData">
							<eml:CustomData>
								<xsl:call-template name="tbf:tbf1_CustomData">
									<xsl:with-param name="input" select="." as="node()"/>
								</xsl:call-template>
							</eml:CustomData>
						</xsl:for-each>
						<xsl:for-each select="$var1_cur/ns0:key">
							<Key>
								<xsl:attribute name="keyword" namespace="" select="fn:string(@keyword)"/>
							</Key>
						</xsl:for-each>
						<xsl:for-each select="$var1_cur/ns0:unit">
							<Unit>
								<xsl:sequence select="fn:string(.)"/>
							</Unit>
						</xsl:for-each>
						<xsl:for-each select="$var1_cur/ns0:measureClass">
							<MeasureClass>
								<xsl:sequence select="fn:string(.)"/>
							</MeasureClass>
						</xsl:for-each>
						<xsl:for-each select="$var1_cur/ns0:comment">
							<Comment>
								<xsl:sequence select="fn:string(.)"/>
							</Comment>
						</xsl:for-each>
						<xsl:for-each select="$var1_cur/ns0:doubleValue">
							<AbstractValue>
								<xsl:attribute name="xsi:type" namespace="http://www.w3.org/2001/XMLSchema-instance" select="xs:QName('DoubleValue')"/>
								<DoubleValue>
									<xsl:for-each select="@dTim">
										<xsl:attribute name="dTim" namespace="" select="xs:string(xs:dateTime(fn:string(.)))"/>
									</xsl:for-each>
								</DoubleValue>
							</AbstractValue>
						</xsl:for-each>
						<xsl:for-each select="$var1_cur/ns0:stringValue">
							<AbstractValue>
								<xsl:attribute name="xsi:type" namespace="http://www.w3.org/2001/XMLSchema-instance" select="xs:QName('StringValue')"/>
								<StringValue>
									<xsl:for-each select="@dTim">
										<xsl:attribute name="dTim" namespace="" select="xs:string(xs:dateTime(fn:string(.)))"/>
									</xsl:for-each>
								</StringValue>
							</AbstractValue>
						</xsl:for-each>
					</TimeSeriesData>
				</xsl:result-document>
			</xsl:for-each>
		</xsl:for-each>
	</xsl:template>
</xsl:stylesheet>
